-- MySQL dump 10.13  Distrib 8.0.19, for Win64 (x86_64)
--
-- Host: 210.94.194.63    Database: problems_test
-- ------------------------------------------------------
-- Server version	5.7.35-0ubuntu0.18.04.1

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!50503 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `plass_language`
--

DROP TABLE IF EXISTS `plass_language`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `plass_language` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(45) DEFAULT NULL,
  `value` varchar(45) DEFAULT NULL,
  `created` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `plass_language`
--

LOCK TABLES `plass_language` WRITE;
/*!40000 ALTER TABLE `plass_language` DISABLE KEYS */;
INSERT INTO `plass_language` VALUES (1,'python','py','2021-01-27 03:27:07'),(2,'java','java','2021-01-27 03:28:00'),(3,'cpp','cpp','2021-01-27 03:28:00'),(4,'c','c','2021-01-27 03:28:00');
/*!40000 ALTER TABLE `plass_language` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `plass_multiple_user_scores`
--

DROP TABLE IF EXISTS `plass_multiple_user_scores`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `plass_multiple_user_scores` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `userid` int(11) DEFAULT NULL,
  `problem_id` int(11) DEFAULT NULL,
  `created` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `score` varchar(45) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `plass_multiple_user_scores`
--

LOCK TABLES `plass_multiple_user_scores` WRITE;
/*!40000 ALTER TABLE `plass_multiple_user_scores` DISABLE KEYS */;
/*!40000 ALTER TABLE `plass_multiple_user_scores` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `plass_mylist_problem`
--

DROP TABLE IF EXISTS `plass_mylist_problem`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `plass_mylist_problem` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) DEFAULT NULL,
  `problem_id` int(11) DEFAULT NULL,
  `problem_type` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=25 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `plass_mylist_problem`
--

LOCK TABLES `plass_mylist_problem` WRITE;
/*!40000 ALTER TABLE `plass_mylist_problem` DISABLE KEYS */;
/*!40000 ALTER TABLE `plass_mylist_problem` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `plass_problem_category`
--

DROP TABLE IF EXISTS `plass_problem_category`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `plass_problem_category` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `problem_id` int(11) DEFAULT NULL,
  `category_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=214 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `plass_problem_category`
--

LOCK TABLES `plass_problem_category` WRITE;
/*!40000 ALTER TABLE `plass_problem_category` DISABLE KEYS */;
INSERT INTO `plass_problem_category` VALUES (1,1,7),(2,2,9),(3,3,10),(4,4,10),(5,5,32),(6,6,32),(7,7,32),(8,8,32),(9,9,29),(10,10,29),(11,11,6),(12,12,27),(13,13,27),(14,14,27),(15,15,11),(16,16,11),(17,17,8),(18,18,8),(19,19,8),(20,20,11),(21,21,8),(22,22,27),(23,23,37),(24,24,9),(25,25,9),(26,26,8),(27,27,8),(28,28,9),(29,29,9),(30,30,11),(31,31,33),(32,32,19),(33,33,11),(34,34,32),(35,35,32),(36,36,19),(37,37,19),(38,38,51),(39,39,11),(40,40,11),(41,41,23),(42,42,24),(43,43,23),(44,44,24),(45,45,25),(46,46,25),(47,47,25),(48,48,27),(49,49,23),(50,50,23);
/*!40000 ALTER TABLE `plass_problem_category` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `plass_problem_multiplechoice`
--

DROP TABLE IF EXISTS `plass_problem_multiplechoice`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `plass_problem_multiplechoice` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(1000) DEFAULT NULL,
  `content` varchar(5000) DEFAULT NULL,
  `created` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `level` varchar(10) DEFAULT NULL,
  `category` varchar(100) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=133 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `plass_problem_multiplechoice`
--

LOCK TABLES `plass_problem_multiplechoice` WRITE;
/*!40000 ALTER TABLE `plass_problem_multiplechoice` DISABLE KEYS */;
INSERT INTO `plass_problem_multiplechoice` VALUES (1,'Circle 클래스의 배열 생성','다음 중 Circle 클래스의 배열 생성 문에서 오류가 없는 것을 선택하시오.','2021-01-13 07:45:19','중','배열 '),(2,'연산식에서의 타입 변환','연산식에서의 타입 변환 내용입니다. 컴파일 에러가 생기는 것을 선택하시오.','2021-01-13 07:45:19','하','타입'),(3,'배열 선언 및 초기화','다음 중 배열의 선언 및 초기화가 잘못된 것을 선택하시오.','2021-01-13 07:45:19','하','배열'),(4,'배열 data 값','int data[3][2]= {3,4,5,6,7,8} 선언했을 때 data[2][1]의 값을 선택하시오.','2021-01-13 07:45:19','하','배열'),(5,'클래스 접근 지정자','다음이 설명하는 접근 지정자는 맞는 것을 선택하시오.','2021-01-13 07:45:19','중','클래스, 객체'),(6,'클래스 생성자','생성자에 대한 설명 중 틀린 것을 선택하시오.','2021-01-13 08:16:53','중','클래스, 객체'),(7,'클래스 객체 생성 및 초기화 ',' 다음 코드에 대해 설명하는 문항 중 틀린 것을 선택하시오.\n Book[] book = new Book[10];','2021-01-13 08:17:01','하','클래스, 객체'),(8,'상속 접근 지정자','상속에 관련된 접근 지정자에 대한 설명이고 틀린 것을 선택하시오.','2021-01-13 08:17:10','중','상속'),(9,'상속 업캐스팅(1)','다음 코드의 실행 결과를 알맞은 것을 선택하시오.\npublic class MyFirst {  \n      public static void main(String[] args) {  \n         MyFirst obj = new MyFirst(n);  \n }  \n static int a = 10;  \n static int n;  \n int b = 5;  \n int c;  \n public MyFirst(int m) {  \n       System.out.println(a + \", \" + b + \", \" + c + \", \" + n + \", \" + m);  \n   }  \n// Instance Block  \n  {  \n     b = 30;  \n     n = 20;  \n  }   \n// Static Block  \n  static   \n{  \n          a = 60;  \n     }   \n }  ','2021-01-13 08:17:18','중','상속'),(10,'인터페이스 특징','다음 중 인터페이스 특징 맞는 것을 선택하시오.','2021-01-13 08:17:30','중','상속'),(11,'for 문의 실행 결과','다음 for 문의 실행 결과 sum 값이 다른 것을 선택하시오.','2021-01-13 08:17:37','하','반복문'),(12,'배열 선언','다음 배열 선언이 잘못된 것을 선택하시오.','2021-01-13 07:45:19','하','배열'),(13,'상속 업캐스팅 ','다음 상속 관계의 클래스들이 있다. 다음 중 업캐스팅을 선택하시오.\nclass A {\n   int i;\n}\nclass B extends A {\n   int j;\n}\nclass C extends B {\n   int k;\n}\nclass D extends B {\n   int m;\n}','2021-01-13 07:45:19','중','상속'),(14,'다형성 특징','다형성에 대한 설명 중 틀린 것을 선택하시오.','2021-01-13 07:45:19','중','클래스, 객체'),(15,'배열 초기화','다음 코드에 대해 실행 중 오류가 발생하는 것을 선택하시오.','2021-01-13 07:45:19','중','배열'),(16,'타입 상수','다음 프로그램 코드를 보고 틀린 부분 선택하시오.\nConsole.WriteLine(\"Minimum integer: \" + int.MinValue);  //(3)\nConsole.WriteLine(\"Maximum integer: \" + Int.MaxValue);  //(4)\nConsole.WriteLine(\"Minimum long: \" + long.MinValue); \nConsole.WriteLine(\"Maximum long: \" + Int64.MaxValue);//(1)\nConsole.WriteLine(\"Minimum float: \" + float.MinValue);  \nConsole.WriteLine(\"Maximum float: \" + Single.MaxValue);\nConsole.WriteLine(\"Minimum double: \" + double.MinValue);  //(2)\nConsole.WriteLine(\"Maximum double: \" + Double.MaxValue);','2021-01-13 07:45:19','하','입출력'),(17,'클래스 생성자','다음 클래스를 주어졌을 때 하나의 분수를 분자/분모 형태로 변환하는 ToString() 메소드 알맞은 것을 선택하시오.\n\r<br>class Fraction {\n  public int numerator;\n  public int denominator;\n}   ','2021-01-13 07:45:19','중','클래스, 객체'),(18,'Escape Sequence 출력 값','다음 실행 결과에 알맞은 것을 선택하시오.\n실행 결과:\n\'\\	\'is tab','2021-01-13 07:45:19','중','입출력'),(19,'매소드 오버라이딩','다음 중 오버라이딩이 잘못된 것을 선택하시오.\nvoid add(int a, int b) throws InvalidNumberException,NotANumberException{}.<br>\nclass NumberException extends Exception {}.<br>\nclass InvalidNumberException extends NumberException {}.<br>\nclass NotANumberException extends NumberException {}\n','2021-01-13 07:45:19','중','예외처리'),(20,'디폴트 생성자','스택의 크기가 100인 경우는 디폴트 생성자를 알맞은 것을 선택하시오.','2021-01-13 07:45:19','중','클래스, 객체'),(21,'교환하는 myswap 템플릿','두 값을 서로 교환하는 myswap 템플릿 (1) 부분에 들어갈 알맞은 것을 선택하시오.\nvoid myswap(T & a, T & b){ \n       T tmp; \n       (1)\n       a=b; \n       b=tmp;\n}','2021-01-13 07:45:19','하','클래스, 객체'),(22,'메소드 push()과 pop() ','스택 포인터 sp=-1과 stack 배열 stack= new int[size] 주어졌을 때 메소드 push()과 pop() 알맞은 것을 선택하시오.','2021-01-13 07:45:19','중','클래스, 객체'),(23,'몫과 나머지(1)','다음 프로그램의 실행 결과 알맞은 것을 선택하시오.<br>Console.WriteLine(\"1/2 = \" + 1/2);\nConsole.WriteLine(\"1/2.0 = \" + 1/2.0);','2021-01-13 07:45:19','하','클래스, 객체'),(24,'short 타입의 값 출력','다음 프로그램의 실행 결과 알맞은 것을 선택하시오.<br>short i = 0;<br>Console.WriteLine(\"i = \" + (i+1)*(i=1));','2021-01-13 07:45:19','하','클래스, 객체'),(25,'반복문 출력 결과','다음 프로그램의 실행 결과 알맞은 것을 선택하시오.<br>int a= 3;<br>for(int i=1; i<=a; i++){ <br>    printf(\"%d\\t\", 3 * i);<br>}','2021-01-13 07:45:19','하','반복문'),(26,'구조체 객체 출력','struct Customer{\n  char address[30]\n}<br>Customer list[10];.<br>Customer 구조체를 주어졌을 때 고객 주소를 출력하기 위해서 알맞은 것을 선택하시오.','2021-01-13 07:45:19','중','클래스, 객체'),(27,'몫과 나머지(2)','다음 프로그램의 실행 결과를 선택하시오.<br>System.out.println(\"1/4 = \" + 1/4);<br>System.out.println(\"1/4.0 = \" + 1/4.0);','2021-01-13 07:45:19','하','입출력'),(28,'Matrix 배열 값','다음 프로그램의 실행 결과를 선택하시오. <br>int matrix[][] = { {1, 2}, null};\n\rfor (int i = 0; i < 2; i++) {\n  for (int j = 0; j < 2; j++) {\n    Console.WriteLine(matrix[i][j]);\n  }\n}	  	','2021-01-13 07:45:19','중','입출력'),(29,'short 타입의 값 출력','다음 프로그램의 실행 결과를 선택하시오.<br>short i = 0;<br>System.out.println(\"i = \" + (i+1)*(i=1));','2021-01-13 07:45:19','하','입출력'),(30,'상수 필드','다음 프로그램의 실행 결과를 선택하시오.<br>double x=Double.MAX_VALUE, y=Double.NEGATIVE_INFINITY;<br>System.out.println(x/y);<br>System.out.println(y-y);<br>System.out.println(x/0.0);<br>','2021-01-13 07:45:19','중','입출력'),(31,'자료구조 리스트 포인터 연산 의미','다음 포인터 연산의 의미 틀린 것을 선택하시오.\r가. p=p.link;[p를 p의 다음 노드로 설정한다.]. <br>나. p = q;[p가 가리키는 값은 q가 된다.]. <br>다. p.link = q;[ p의 다음 노드는 q 노드이 아니다.]. <br>라. p.link = q.link[p의 다음 노드는 q의 다음 노드이다.]','2021-01-13 07:45:19','중',' 포인터'),(32,'이중연결 리스트 포인터','이중 연결 리스트에서 포인터 p가 가리키는 노드의 오른쪽에 포인터 newNode가 가리키는 노드를 삽입할 때, 연산 순서가 바르게 나열된 것을 선택하시오. <br>가. p -> rlink = newNode;. <br>나. newNode -> llink = p;. <br>다. newNode -> rlink = p -> rlink;. <br>마. p -> rlink -> llink = newNode;.  ','2021-01-13 07:45:19','중','이중연결'),(33,'상속 업캐스팅(2)','기본 클래스 MYCLASS와 파생  클래스 MySecond가 있을 때 업 캐스팅 알맞은 것을 선택하시오.<br>MYCLASS *mc, tv;<br>MySecond * sc, stv.','2021-01-13 07:45:19','중','상속'),(34,'Matrix 배열 값','다음 프로그램의 실행 결과는 선택하시오.<br>int matrix[][] = { { 10, 20 }, null };\nfor (int i = 0; i < 2; i++) {\n  for (int j = 0; j < 2; j++)\n  {\n    System.out.println(matrix[i][j]);\n  }\n}\n 				\r 				','2021-01-13 07:45:19','중','배열'),(35,'에러 타입','다음 프로그램에 어떤 에러가 발생하는지 선택하시오.\rclass Main {\n  public static void main(String args[]) {\n    int t;\n    System.out.println(t);\n  }\n}','2021-01-13 07:45:19','중','입출력'),(36,'상수 필드','다음 자바  프로그램의 실행 결과를 선택하시오.\n\rdouble x=Double.MAX_VALUE,y=Double.NEGATIVE_INFINITY;<br>System.out.println(x/y);<br>System.out.println(y-y);<br>System.out.println(x/0.0);\r ','2021-01-13 07:45:19','중','입출력'),(37,'정적 메소드 출력 값','다음 프로그램의 실행 결과는 선택하시오.\nclass Count {\n  public static int scount = 0;\n  public int count = 0;\n  public static void sIncrement() {\n    scount++;\n  }\n  public void increment() {\n    count++;\n  }\n}\npublic class ExerciseCh5_9_1 {\n  public static void main(String[] args) {\n    Count c = new Count();\n    c.increment();\n    Count.sIncrement();\n    c.sIncrement();\n    System.out.print(\"Instance Value = \" + c.count);\n    System.out.println(\", Static Value = \" + Count.scount);\n  }\n}','2021-01-13 07:45:19','중','입출력'),(38,'배열의 출력 값','다음 프로그램의 실행 결과를 선택하시오.\nclass RangeClass {\n  int[] makeRange(int lower, int upper) {\n    int arr[] = new int[(upper - lower) + 1];\n    for (int i = 0; i < arr.length; i++)\n    arr[i] = lower++;\n    return arr;\n  }\n}\npublic class ExerciseCh5_9_3 {\n  public static void main(String[] args) {\n    int[] theArray;\n    RangeClass theRange = new RangeClass();\n    theArray = theRange.makeRange(1, 10);\n    System.out.print(\"The array : [\");\n    for (int i = 0; i < theArray.length; i++)\n    System.out.print(theArray[i] + \" \");\n    System.out.println(\"]\");\n  }\n}','2021-01-13 07:45:19','중','입출력'),(39,'상속 출력 값','다음 프로그램의 실행 결과는 선택하시오.\nclass SuperClass {\n  static int supNum = 100;\n}\nclass SubClass extends SuperClass {\n  static int subNum = 200;\n}\nSystem.out.print(SuperClass.supNum + \", \" + SubClass.supNum);\n','2021-01-13 07:45:19','중','클래스, 객체'),(40,'생성자 한개의 정수 초기화','다음 프로그램의 실행 결과를 선택하시오.\nclass Fraction {\n  public int numerator;\n  public int denominator;\n}\n클래스를 주어졌을 때  한개의 정수를 받아 초기화하는 생성자 알맞은<br>것을 선택하시오.','2021-01-13 07:45:19','중','클래스, 객체'),(41,'생성자 두개의 정수  초기화','다음 클래스를 주어졌을 때 두개의 정수를 받아 초기화하는 생성자 알맞은 것을 선택하시오.\r\nclass Fraction {\n  public int numerator;\n  public int denominator;\n}','2021-01-13 07:45:19','중','클래스, 객체'),(42,'매소드 수정자','메소드 수정자의 의미에 관한 설명 중 맞는 것을 선택하시오.','2021-01-13 07:45:19','중','클래스, 객체'),(43,'파상 클래스 생성자','파생 클래스의 생성자 실행되는 순서 알맞은 것을 선택하시오.','2021-01-13 07:45:19','중','클래스, 객체'),(44,'String 객체','다음 프로그램의 실행 결과 선택하시오.\nStringBuffer s1 = new StringBuffer(\"Complete\");<br>s1.setCharAt(1,i);<br>s1.setCharAt(7,d);<br>System.out.println(s1);  \r                   ','2021-01-13 07:45:19','하','입출력'),(45,'타입 변환','강제 타입 변환에 대한 내용입니다. 컴파일러 에러 발생하는 것을 선택하시오.\nint intValue=10;<br>char charValue=\'A\'<br>double doubleValue=5.7<br>String strValue=\'A\'\n','2021-01-13 07:45:19','중','String, 객체'),(46,'배열의 values 값\n\n','다음 자바 프로그램 value[i]의 값을 선택하시오.<br>int values[ ] = {1,2,3,4,5,6,7,8,9,10};<br>for (int i = 0; i < Y; ++i)\n  System.out.println(values[i]);','2021-01-13 07:45:19','중','배열'),(47,'할당 연산자 출력 값','다음 프로그래밍 출력 값을 알맞은 것을 선택하시오.\nvoid main()\n{\n  int k = 8;\n  int x = 0 == 1 && k++;\n  printf(\"%d%d\\n\", x, k);\n}','2021-01-17 02:03:19','하','연산자'),(48,'반복문 출력 결과','다음  프로그래밍 출력 결과를 알맞은 것을 선택하시오.\nint main()\n{\n  int i = 0;\n  do {\n    i++;\n    if (i == 2)\n      continue;\n    printf(\"In while loop \");\n  } while (i < 2);\n  printf(\"%d\\n\", i);\n}','2021-01-17 02:07:32','하','반복문'),(49,'배열의 array값','다음 프로그램의 실행 결과를 알맞은 것을 선택하시오.\nint main(){\n  int array[] = { 10, 20, 30};\n  cout << -2[array];\n  return 0;\n}','2021-01-25 12:37:54','하','배열'),(50,'포인터 출력 값','다음  프로그램의 출력 결과를 알맞은 것을 선택하시오.\nint main(){\n        const int ary[4] = {1, 2, 3, 4};\n        int *p;\n        p = ary + 3;\n        *p = 5;\n        printf(\"%d\\n\", ary[3]);\n    }','2021-01-17 02:31:25','하','포인터 ');
/*!40000 ALTER TABLE `plass_problem_multiplechoice` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `plass_problem_multiplechoice_answer`
--

DROP TABLE IF EXISTS `plass_problem_multiplechoice_answer`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `plass_problem_multiplechoice_answer` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `problem_id` int(11) DEFAULT NULL,
  `answer_content` varchar(500) CHARACTER SET utf8 DEFAULT NULL,
  `created` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `is_correct` varchar(45) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=1362 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `plass_problem_multiplechoice_answer`
--

LOCK TABLES `plass_problem_multiplechoice_answer` WRITE;
/*!40000 ALTER TABLE `plass_problem_multiplechoice_answer` DISABLE KEYS */;
INSERT INTO `plass_problem_multiplechoice_answer` VALUES (1,1,'Rec []r = new Rec[5];','2021-01-21 07:08:47','false'),(2,1,'Circle c[] = new Circle[5](); ','2021-01-21 07:08:55','false'),(3,1,'Circle []c = new Circle();','2021-01-21 07:09:02','ture'),(4,1,'Rec r[] = new Rec[];','2021-01-21 07:09:06','false'),(5,2,'byte result = byteValue +byteValue;','2021-01-18 06:41:23','true'),(6,2,'int result =5 + byteValue;','2021-01-18 06:41:27','false'),(7,2,'float result =5 +floatValue;','2021-01-18 06:41:30','false'),(8,2,'double result = 5+doubleValue','2021-01-18 06:41:34','false'),(9,3,'int[] scores = {3, 5, 7};','2021-01-21 07:09:40','false'),(10,3,'int [][] scores = {2,7,6}, {9,3,45};','2021-01-21 07:09:45','false'),(11,3,'String cats[] = {“F”, “Spot”, “Zeus”};','2021-01-21 07:09:49','true'),(12,3,'boolean results[] = new boolean [] {true, false, true};','2021-01-21 07:09:53','false'),(13,4,'5','2021-01-21 07:09:59','false'),(14,4,'6','2021-01-21 07:10:04','false'),(15,4,'7','2021-01-21 07:10:09','true'),(16,4,'8','2021-01-21 07:10:12','false'),(17,5,'모든 클래스에서 접근 가능 private ','2021-01-21 07:10:17','false'),(18,5,'같은 클래스 내부멤버에서만 접근 가능 public','2021-01-21 07:11:26','true'),(19,5,'같은 패키지내의 모든 클래스에서만 접근 가능 default','2021-01-21 07:11:30','false'),(20,5,'같은 패키지와 상속받은 하위 클래스에서만 접근 가능 default','2021-01-21 07:11:34','false'),(21,6,'생성자가 작성되어 있지 않으면, 컴파일러가 자동으로 기본 생성자를 추가해준다.','2020-11-18 04:22:27','false'),(22,6,'생성자의 이름은 클래스의 이름과 반드시 같아야 한다.','2020-11-18 04:22:27','false'),(23,6,'this()는 생성자 내에서 다른 생성자를 호출하는 코드이다.','2020-11-18 04:22:27','false'),(24,6,'생성자에서는 아무 값도 리턴하지 않기 때문에 return문을 사용할 수 없다.','2020-11-18 04:22:27','true'),(25,7,' book은 배열에 대한 레퍼런스이다.','2020-11-18 04:22:27','false'),(26,7,'for(int i=0; i<book.size; i++) book[i] = new Book();로 객체들을 만들어야 비로소 배열이 완성된다','2020-11-18 04:22:27','false'),(27,7,'Book 객체가 10개 만들어진다.','2020-11-18 04:22:27','true'),(28,7,' book[0], book[1], ... , book[9] 모두 Book 객체에 대한 레퍼런스이다.','2020-11-18 04:22:28','false'),(29,8,'슈퍼 클래스의 private 멤버는 서브 클래스에서 접근할 수 없다.','2020-11-18 04:22:28','false'),(30,8,'슈퍼 클래스의 protected 멤버는 같은 패키지에 있는 서브 클래스에서만 접근할 수 있다.','2020-11-18 04:22:28','true'),(31,8,'슈퍼 클래스의 public 멤버는 모든 다른 클래스에서 접근할 수 있다.','2020-11-18 04:22:28','false'),(32,8,'슈퍼 클래스의 디폴트 멤버는 같은 패키지에 있는 모든 다른 클래스에서 접근 가능하다.','2020-11-18 04:22:28','false'),(33,9,'10, 5, 0, 20, 0\n','2020-11-18 04:22:28','false'),(34,9,'10, 30, 20\n','2020-11-18 04:22:28','false'),(35,9,'60, 5, 0, 20\n','2020-11-18 04:22:28','false'),(36,9,'60, 30, 0, 20, 0','2020-11-18 04:22:28','true'),(37,10,'인터페이스의 객체는 생성할 수 있다.','2020-11-18 04:22:28','false'),(38,10,'인터페이스는 클래스와 같이 멤버 변수(필드)의 선언이 불가능하다.','2020-11-18 04:22:28','true'),(39,10,'인터페이스의 추상 메소드는 자동으로 private이다.','2020-11-18 04:22:28','false'),(40,10,'클래스에서 인터페이스를 구현할 때 implements 키워드를 이용하며, 모든 추상 메소드를 작성하여야 한다.','2020-11-18 04:22:28','false'),(41,11,'for(int i=0; i<10; i++) sum += i;','2020-11-18 04:22:28','false'),(42,11,'for(int i=9; i>0; i--) sum += i;','2020-11-18 04:22:28','false'),(43,11,'for(int i=0; i>10; i++) sum++;','2020-11-18 04:22:28','false'),(44,11,'for(int i=0; i<10; sum+=i, i++);','2020-11-18 04:22:28','true'),(45,12,'int[] n = {1, 2, 3, 4, 5};','2020-11-18 04:22:28','false'),(46,12,'int n[] = {0};','2020-11-18 04:22:28','false'),(47,12,' int[] n = new int[3];','2020-11-18 04:22:28','false'),(48,12,' int n[3] = new int[3];','2020-11-18 04:22:28','true'),(49,13,'A a = new A();    ','2020-11-18 04:22:28','false'),(50,13,'B b = new C();   ','2020-11-18 04:22:28','false'),(51,13,'A a = new D();    ','2020-11-29 10:31:40','true'),(52,13,'D d = new D();','2020-11-29 10:31:40','false'),(53,14,'추상 메소드를 두는 이유는 상속 받는 클래스에서 다형성을 실현하도록 하기 위함이다.','2020-11-29 10:31:40','false'),(54,14,'인터페이스도 구현하는 클래스에서 다형성을 실현하도록 하기 위함이다.','2020-11-29 10:31:40','false'),(55,14,'다형성은 서브클래스들이 수퍼 클래스의 동일한 메소드를 서로 다르게 오버라이딩하여 <br>이루어진다.','2020-11-29 10:31:40','false'),(56,14,'자바에서 다형성은 모호한(ambiguous) 문제를 일으키므로 사용하지 않는 것이 바람직하다.','2020-11-29 10:31:40','true'),(57,15,'array[0] = -1;    ','2021-01-21 07:15:59','false'),(58,15,'int list[] = array;','2021-01-21 07:16:02','false'),(59,15,'System.out.println(array[4]);','2021-01-21 07:16:08','false'),(60,15,'array[array.length] = 100;','2021-01-21 07:16:19','true'),(61,16,'1','2020-11-29 10:40:39','false'),(62,16,'2','2020-11-29 10:40:39','false'),(63,16,'3','2020-11-29 10:40:39','true'),(64,16,'4','2020-11-29 10:40:39','false'),(65,17,'public override string ToString(){return numerator.ToString() + \"/\" + denominator.ToString();}','2020-11-29 10:40:39','true'),(66,17,'public string ToString() {return numerator.ToString() + \"/\" + denominator.ToString();}','2020-11-29 10:40:39','false'),(67,17,'override string ToString(){return numerator.ToString() + \"/\" + denominator.ToString();}','2020-11-29 10:40:39','false'),(68,17,'public override int ToString() {return numerator.ToString() + \"/\" + denominator.ToString();}','2020-11-29 10:40:39','false'),(69,18,'Console.WriteLine(\"\\t is tab.\");','2020-11-29 10:40:39','false'),(70,18,'Console.WriteLine(\"\'\\t\' is tab.\");','2020-11-29 10:40:39','false'),(71,18,'Console.WriteLine(\"\\\'\\t\\\' is tab.\");','2020-11-29 10:40:39','false'),(72,18,'Console.WriteLine(\"\'\\\\t\' is tab.\"); ','2020-11-29 10:40:39','true'),(73,19,'void add(int a, int b) throws InvalidNumberException, NotANumberException { }','2020-11-29 10:40:39','false'),(74,19,'void add(int a, int b) throws InvalidNumberException { }','2020-11-29 10:40:39','false'),(75,19,'void add(int a, int b) throws Exception { }','2020-11-29 10:40:39','false'),(76,19,'없음','2021-01-14 05:43:18','true'),(77,20,'public Stack(){ stack = new int[100];}','2021-01-14 05:50:48','true'),(78,20,'public function(){ stack[100];}','2021-01-14 05:50:48','false'),(79,20,'public Stack(){ stack[100];}','2021-01-14 05:50:48','false'),(80,20,'public Stack(){ stack = int[100];}','2021-01-14 05:50:48','false'),(81,21,'tmp=a','2021-01-14 05:50:48','false'),(82,21,'tmp=&b','2021-01-14 05:50:48','true\n'),(83,21,'a=&tmp','2021-01-14 05:50:48','false'),(84,21,'a=tmp','2021-01-14 05:50:48','false'),(85,22,'public void Push(int data) {stack[++sp] = data;}, public int Pop(){return stack;}','2021-01-14 05:50:48','false'),(86,22,'Push{stack[++sp] = data;},public int Pop() {return stack[sp--];}','2021-01-14 05:50:48','true'),(87,22,'Push{stack[sp++] = data;}, public int Pop(){return stack;}','2021-01-14 05:50:48','false'),(88,22,'Push{stack[sp] = data;},public int Pop() {return stack;}','2021-01-14 05:50:48','false'),(89,23,'0 0.5','2021-01-14 05:50:48','true'),(90,23,'0 0.0','2021-01-14 05:50:48','false'),(91,23,'0.0 0.5','2021-01-14 05:50:48','false'),(92,23,'0 0','2021-01-14 05:50:48','false'),(93,24,'2','2021-01-14 05:50:48','true'),(94,24,'-1','2021-01-14 05:50:48','false'),(95,24,'0','2021-01-14 05:50:48','false'),(96,24,'3','2021-01-14 05:50:48','false'),(97,25,'3 3 3','2021-01-14 05:50:48','false'),(98,25,'3 6 9','2021-01-14 05:50:48','true'),(99,25,'1 3 6','2021-01-14 05:50:48','false'),(100,25,'0 3 3','2021-01-14 05:50:48','false'),(101,26,'list.address','2021-01-14 05:50:48','false'),(102,26,'list[0].address','2021-01-14 05:50:48','true'),(103,26,'address','2021-01-14 05:50:48','false'),(104,26,'list->address','2021-01-14 05:50:48','false'),(105,27,'0 0.25','2021-01-14 05:50:48','true'),(106,27,'0.0 0','2021-01-14 05:50:49','false'),(107,27,'0.0 0.25','2021-01-14 05:50:49','false'),(108,27,'0.25 0','2021-01-14 05:50:49','false'),(109,28,'NULL','2021-01-14 05:50:49','false'),(110,28,'1 2 NULL','2021-01-14 05:50:49','true'),(111,28,'1 2','2021-01-14 05:50:49','false'),(112,28,'1','2021-01-14 05:50:49','false'),(113,29,'2','2021-01-14 05:50:49','false'),(114,29,'0','2021-01-14 05:50:49','true'),(115,29,'1','2021-01-14 05:50:49','false'),(116,29,'3','2021-01-14 05:50:49','false'),(117,30,'-0.0 NaN Infinity','2021-01-14 05:50:49','true'),(118,30,'Infinity Null NaN','2021-01-14 05:50:49','false'),(119,30,'0.0 NaN Infinity','2021-01-14 05:50:49','false'),(120,30,'Null -0.0 NaN','2021-01-14 05:50:49','false'),(121,31,'가','2021-01-14 05:50:49','false'),(122,31,'나','2021-01-14 05:50:49','false'),(123,31,'다','2021-01-14 05:50:49','false'),(124,31,'라','2021-01-14 05:50:49','true'),(125,32,'가 - 나 - 다 - 라','2021-01-14 05:50:49','false'),(126,32,'나 - 가 - 라 - 다','2021-01-14 05:50:49','true'),(127,32,'나 - 다 - 가 - 라','2021-01-14 05:50:49','false'),(128,32,'나 - 다 - 라 - 가','2021-01-14 05:50:49','false'),(129,33,'MYCLASS *mc=& stv','2021-01-14 05:50:49','false'),(130,33,'MYCLASS *mc= stv','2021-01-14 05:50:49','true'),(131,33,'sc=(MYCLASS*) mc','2021-01-14 05:50:49','false'),(132,33,'MYCLASS *mc=(MYCLASS) stv','2021-01-14 05:50:49','false'),(133,34,'NULL','2021-01-14 05:50:49','false'),(134,34,'10 20','2021-01-14 05:50:49','true'),(135,34,'10 20  NULL','2021-01-14 05:50:49','false'),(136,34,'10','2021-01-14 05:50:49','false'),(137,35,'NOERROR','2021-01-14 05:50:49','false'),(138,35,'컴파일 에러 ','2021-01-14 05:50:49','true'),(139,35,'런타임 에러','2021-01-14 05:50:49','false'),(140,35,'Garbage Collector','2021-01-14 05:50:49','false'),(141,36,'-0.0 NaN Infinity','2021-01-14 05:50:49','true'),(142,36,'Infinity Null NaN','2021-01-14 05:50:49','false'),(143,36,'0.0 NaN Infinity','2021-01-14 05:50:49','false'),(144,36,'Null -0.0 NaN','2021-01-14 05:50:49','false'),(145,37,'Instance Value = 1, Static Value = 2','2021-01-14 05:50:49','true'),(146,37,'Instance Value = 2, Static Value = 4','2021-01-14 05:50:49','false'),(147,37,'Instance Value = 2, Static Value = 3','2021-01-14 05:50:49','false'),(148,37,'Instance Value = 1, Static Value = 3','2021-01-14 05:50:49','false'),(149,38,'[1 2 3 4 5 6 7 8 9 10 ]','2021-01-14 05:50:49','true'),(150,38,'[10 9 8 7 6 5 4 3 2 1]','2021-01-14 05:50:49','false'),(151,38,'[2 4 6 8 10 ]','2021-01-14 05:50:49','false'),(152,38,'[1 3 5 7 9]','2021-01-14 05:50:49','false'),(153,39,'100 100 100','2021-01-14 05:50:50','false'),(154,39,'200 100 200','2021-01-14 05:50:50','false'),(155,39,'100 100 200','2021-01-14 05:50:50','true'),(156,39,'100 200 100','2021-01-14 05:50:50','false'),(157,40,'public Fraction(int numerator) {this.numerator = numerator;}','2021-01-14 05:50:50','true'),(158,40,'void Fraction(int numerator) {this.numerator = numerator;}','2021-01-14 05:50:50','false'),(159,40,'public Fraction(int numerator) {numerator = numerator]','2021-01-14 05:50:50','false'),(160,40,'public Fraction(int numerator)  {numerator =10;}','2021-01-14 05:50:50','false'),(161,41,'public Fraction(int numerator, int denominator)  {this.numerator = numerator;this.denominator = denominator;}','2021-01-14 05:50:50','true'),(162,41,'void Fraction(int numerator, int denominator) {this.numerator = numerator;this.denominator = denominator;}','2021-01-14 05:50:50','false'),(163,41,'public Fraction(int numerator, int denominator) {this.numerator = numerator, this.denominator = denominator;}','2021-01-14 05:50:50','false'),(164,41,'public Fraction(int numerator, int denominator) {numerator =10; denominator = 20;}','2021-01-14 05:50:50','false'),(165,42,'메소드가 Virtual 선언되면, 파생 클래스에서 반드시 new 수정자를 사용하여 제정의해야만 한다','2021-01-14 05:50:50','false'),(166,42,'메소드가 Abstractl 선언되면, 파생 클래스에서 반드시 new 수정자를 사용하여 제정의해야만 한다','2021-01-14 05:50:50','false'),(167,42,'메소드가 Virtual 선언되면, 파생 클래스에서 반드시 override 수정자를 사용하여 제정의해야만 한다','2021-01-14 05:50:50','false'),(168,42,'메소드가 Abstract 선언되면, 파생 클래스에서 반드시 override 수정자를 사용하여 제정의해야만 한다','2021-01-14 05:50:50','true'),(169,43,'필드 초기화-> 배이스 클래스 생성자 -> 파생 클래스 생성자','2021-01-14 05:50:50','false'),(170,43,'파생 클래스 생성자-> 필드 초기화-> 배이스 클래스 생성자','2021-01-14 05:50:50','true'),(171,43,'배이스 클래스 생성자 ->필드 초기화-> 파생 클래스 생성자','2021-01-14 05:50:50','false'),(172,43,'배이스 클래스 생성자 ->파생 클래스 생성자-> 필드 초기화','2021-01-14 05:50:50','false'),(173,44,'Complete','2021-01-14 05:50:50','false'),(174,44,'Iomplede','2021-01-14 05:50:50','false'),(175,44,'Cimpletd','2021-01-14 05:50:50','true'),(176,44,'Coipletd','2021-01-14 05:50:50','false'),(177,45,'int intValue=10','2021-01-30 06:00:13','false'),(178,45,'char charValue=\'A\'','2021-01-30 06:00:24','false'),(179,45,'double doubleValue=5.7','2021-01-30 06:00:27','false'),(180,45,'String strValue=\'A\'','2021-01-30 06:00:33','true'),(181,46,'10','2021-01-14 05:50:50','false'),(182,46,'11','2021-01-14 05:50:50','false'),(183,46,'15','2021-01-14 05:50:50','false'),(184,46,'없음','2021-01-14 05:50:50','true'),(185,47,' 0 9\n','2021-01-17 02:12:43','false'),(186,47,' 0 8\n','2021-01-17 02:12:43','true'),(188,47,'1 8\n','2021-01-17 02:12:43','false'),(189,47,'1 9','2021-01-17 02:12:43','false'),(190,48,' In while loop 2\n','2021-01-17 02:16:28','true '),(191,48,' In while loop in while loop 3\n','2021-01-17 02:16:28','false'),(192,48,' In while loop 3\n','2021-01-17 02:16:28','false'),(193,48,' Infinite loop','2021-01-17 02:16:28','false'),(194,49,'-15','2021-01-25 12:51:04','false'),(195,49,'-30','2021-01-25 12:51:18','true'),(196,49,'컴파일러 타임 에러','2021-01-25 12:51:21','false'),(197,49,'0','2021-01-25 12:51:23','false'),(198,50,'5\n','2021-01-17 02:33:16','true'),(199,50,'4','2021-01-17 02:33:16','false'),(200,50,' 8\n','2021-01-17 02:33:16','false'),(201,50,' 3','2021-01-17 02:33:16','false'),(202,51,'다른 구조체','2021-01-17 02:40:13','false'),(203,51,'함수','2021-01-17 02:40:13','true'),(204,51,'배열','2021-01-17 02:40:13','false'),(205,51,'변수 ','2021-01-17 02:40:13','false'),(206,52,'i. int ii. append','2021-01-17 02:55:52','false'),(207,52,'i.char *  ii. add\n','2021-01-17 02:55:52','true'),(208,52,'i. struct ii. append\n','2021-01-17 02:55:52','false'),(209,52,'없음','2021-01-17 02:55:52','false'),(210,53,'749735\n','2021-01-17 03:17:09','true'),(211,53,'736749\n','2021-01-17 03:17:09','false'),(212,53,'367497\n','2021-01-17 03:17:09','false'),(213,53,'367597','2021-01-17 03:17:09','false'),(214,54,'int *pi;\n','2021-01-17 03:26:42','false'),(215,54,'string s, *ps = 0;\n','2021-01-17 03:26:42','false'),(216,54,'int p; double* pd = &i;\n','2021-01-17 03:26:42','true'),(217,54,'int *ip = 0;','2021-01-17 03:26:42','false '),(218,55,'38','2021-01-17 03:46:49','false'),(219,55,'9','2021-01-17 03:46:49','true'),(220,55,'17','2021-01-17 03:46:49','false'),(221,55,'25','2021-01-17 03:46:49','false'),(222,56,'I & II','2021-01-17 03:46:49','false'),(223,56,'IIi & III','2021-01-17 04:13:05','false'),(224,56,'I, II & III','2021-01-17 04:13:05','true'),(225,56,'III','2021-01-17 04:13:05','false'),(226,57,'Constructing base, Constructing Derived, Destructing Base, Destructing Derived\n','2021-01-17 04:22:29','false'),(227,57,'Constructing Derived, Destructing Derived, Destructing Base','2021-01-17 04:22:29','false'),(228,57,'Constructing base, Constructing Derived, Destructing Base\n','2021-01-17 04:22:30','true'),(229,57,'Constructing base, Constructing Derived, Destructing Derived, Destructing Base','2021-01-17 04:22:30','false'),(230,58,'head-1-2-3-4-5-6-tail\n','2021-01-17 04:39:52','false'),(231,58,'head-0-1-2-3-4-5-tail','2021-01-17 04:39:52','false'),(232,58,'head-0-1-2-3-4-5-6-tail','2021-01-17 04:39:52','false'),(233,58,'head-6-1-2-3-4-5-0-tail','2021-01-17 04:39:52','true'),(234,59,'실제로 양쪽[front, end]의 입력과 출력을 모두 가능하다.','2021-01-17 04:39:52','false'),(235,59,'Double Linked List를 이용해서 Dequeue를 구현할 수 있다.','2021-01-17 04:54:46','false'),(236,59,'dequeue의 종료 크게 2가지로 나눌 수 있다.','2021-01-17 04:54:46','false'),(237,59,'중간에 데이터 사입과 삭제가 가능하다.','2021-01-17 04:54:46','true'),(238,60,'a) (h1(k) – i*h2(k))mod m\n\n','2021-01-18 17:14:50','false'),(239,60,'(h1(k) + i*h2(k))mod m\n','2021-01-18 17:14:50','false'),(240,60,'(h1(k) + h2(k))mod m','2021-01-18 17:14:50','true'),(241,60,'h1(k) + h2(k)','2021-01-18 17:14:50','false'),(242,61,'ltoa()','2021-01-21 06:57:43','true'),(243,61,'itoa()','2021-01-21 06:57:43','false'),(244,61,'sprintf()','2021-01-21 06:57:43','false'),(245,61,'Sprintf()','2021-01-21 06:57:43','false'),(246,62,'X은 4-digit 정수','2021-01-21 06:57:43','false'),(247,62,'X은 4-digit 정수보다 크다','2021-01-21 06:57:43','false'),(248,62,'X은 4-bit 정수','2021-01-21 06:57:43','true'),(249,62,'X은 4-digiaat 정수보다 작다.','2021-01-21 06:57:43','false'),(250,63,'EOF의 값은 stdio.h에 정의가 되어 있다.','2021-01-21 06:57:43','false'),(251,63,'EOF의 구현은 독립적이다.','2021-01-21 06:57:43','false'),(252,63,'EOF의 값은 어떤 문자와 동일한 정수와 같지 않아야합니다.','2021-01-21 06:57:43','false'),(253,63,'EOF의 값은 오로지 양수만 된다.','2021-01-21 06:57:43','true'),(254,64,'char ch = \'\\utea\';','2021-01-21 06:57:43','true'),(255,64,'char ca = \'tea\';','2021-01-21 06:57:43','false'),(256,64,'char cr = \\u0223;','2021-01-21 06:57:43','false'),(257,64,'char cc = \'\\itea\';','2021-01-21 06:57:43','false'),(258,65,'Serialization','2021-01-21 06:57:43','false'),(259,65,'Variable Shadowing','2021-01-21 06:57:43','true'),(260,65,'Abstraction','2021-01-21 06:57:43','false'),(261,65,'Multi-threading','2021-01-21 06:57:43','false'),(262,66,'RuntimeException and Error class','2021-01-21 06:57:43','false'),(263,66,'Exception and VirtualMachineError class','2021-01-21 06:57:43','false'),(264,66,'Error and Exception class','2021-01-21 06:57:43','true'),(265,66,'IOException and VirtualMachineError class','2021-01-21 06:57:43','false'),(266,67,'5','2021-01-21 06:57:43','false'),(267,67,'10','2021-01-21 06:57:43','false'),(268,67,'0','2021-01-21 06:57:43','false'),(269,67,'100','2021-01-21 06:57:43','false'),(270,68,'3, 2, 515','2021-01-21 06:57:43','true'),(271,68,'515, 2, 3','2021-01-21 06:57:43','false'),(272,68,'3, 2, 5','2021-01-21 06:57:43','false'),(273,68,'515, 515, 4','2021-01-21 06:57:43','false'),(274,69,'int* malloc(int);','2021-01-21 06:57:43','false'),(275,69,'char* malloc(char);','2021-01-21 06:57:43','false'),(276,69,'unsigned int* malloc(unsigned int);','2021-01-21 06:57:43','false'),(277,69,'void* malloc(size_t);','2021-01-21 06:57:43','true'),(278,70,'.','2021-01-21 06:57:43','false'),(279,70,'&','2021-01-21 06:57:43','false'),(280,70,'*','2021-01-21 06:57:43','false'),(281,70,'->','2021-01-21 06:57:43','true'),(282,71,'.*','2021-01-21 06:57:43','false'),(283,71,'::','2021-01-21 06:57:43','false'),(284,71,'?:','2021-01-21 06:57:43','false'),(285,71,'없음','2021-01-21 06:57:43','true'),(286,72,'Humble','2021-01-21 06:57:43','false'),(287,72,'He i','2021-01-21 06:57:43','false'),(288,72,'ble','2021-01-21 06:57:43','true'),(289,72,'Hu','2021-01-21 06:57:43','false'),(290,73,'Null','2021-01-21 06:57:44','false'),(291,73,'Garbage Value','2021-01-21 06:57:44','false'),(292,73,'0','2021-01-21 06:57:44','true'),(293,73,'-1','2021-01-21 06:57:44','false'),(294,74,'static','2021-01-21 06:57:44','false'),(295,74,'const','2021-01-21 06:57:44','false'),(296,74,'final','2021-01-21 06:57:44','false'),(297,74,'abstract','2021-01-21 06:57:44','false'),(298,75,'0(1) & 0(n)','2021-01-21 06:57:44','true'),(299,75,'0(logn) & 0(n)','2021-01-21 06:57:44','false'),(300,75,'0(logn) & 0(n)','2021-01-21 06:57:44','false'),(301,75,'0(logn) & 0(nlogn) ','2021-01-21 06:57:44','false'),(302,76,'0(n^2), 0(n^2), 0(n)','2021-01-21 06:57:44','true'),(303,76,'0(logn), 0(n^2), 0(n) ','2021-01-21 06:57:44','false'),(304,76,'0(nlogn), 0(n), 0(n^2) ','2021-01-21 06:57:44','false'),(305,76,'0(logn), 0(nlogn), 0(n^2)','2021-01-21 06:57:44','false'),(306,77,'0(V + E)','2021-01-21 06:58:34','true'),(307,77,'0(V)','2021-01-21 06:58:34','false'),(308,77,'0(E)','2021-01-21 06:58:34','false'),(309,77,'0(V*E)','2021-01-21 06:58:34','false'),(310,78,'Linked List','2021-01-21 07:03:56','false'),(311,78,'Queue','2021-01-21 07:03:56','false'),(312,78,'Stack','2021-01-21 07:03:56','true'),(313,78,'Tree','2021-01-21 07:03:56','false'),(314,79,'4 2 5 1 3','2021-01-21 07:03:56','false'),(315,79,'1 2 4 5 3','2021-01-21 07:03:56','true'),(316,79,'4 5 2 3 1','2021-01-21 07:03:56','false'),(317,79,'1 2 4 4 5','2021-01-21 07:03:56','false'),(318,80,'24','2021-01-21 07:03:56','false'),(319,80,'2','2021-01-21 07:03:56','false'),(320,80,'3','2021-01-21 07:03:56','false'),(321,80,'6','2021-01-21 07:03:56','true'),(322,81,'0(log V)','2021-01-21 07:03:56','false'),(323,81,'0(E logV)','2021-01-21 07:03:56','true'),(324,81,'0(V log E)','2021-01-21 07:03:56','false'),(325,81,'0(E^2)','2021-01-21 07:03:56','false'),(326,82,'Max priority queue','2021-01-21 07:07:23','false'),(327,82,'Stack','2021-01-21 07:07:23','false'),(328,82,'Circular Queue','2021-01-21 07:07:23','false'),(329,82,'Min Priority Queue ','2021-01-21 07:07:23','true'),(330,83,'0(N)','2021-01-21 07:07:23','false'),(331,83,'O(N^3)','2021-01-21 07:07:23','false'),(332,83,'O(N^2)','2021-01-21 07:07:23','true'),(333,83,'0(logN)','2021-01-21 07:07:23','false'),(334,84,'Boolen','2021-01-21 07:23:39','true'),(335,84,'Integer','2021-01-21 08:12:14','false'),(336,84,'String','2021-01-21 08:12:14','false'),(337,84,'Double','2021-01-21 08:12:14','false'),(338,85,'stack','2021-01-21 08:12:14','false'),(339,85,'queue','2021-01-21 08:12:14','false'),(340,85,'stack & queue','2021-01-26 09:38:52','true'),(341,85,'없음','2021-01-21 08:12:14','false'),(342,86,'Queue','2021-01-21 08:12:14','true'),(343,86,'Stack','2021-01-21 08:12:14','false'),(344,86,'Hash Table','2021-01-21 08:12:14','false'),(345,86,'Binary Search Tree','2021-01-21 08:12:14','false'),(346,87,'Two-dimensional array','2021-01-21 08:12:14','false'),(347,87,'Doubly linked list','2021-01-21 08:12:14','false'),(348,87,'Linear Array','2021-01-21 08:12:14','true'),(349,87,'Linked list','2021-01-21 08:12:14','false'),(350,88,'2n - 1','2021-01-21 08:12:15','false'),(351,88,'n','2021-01-21 08:12:15','false'),(352,88,'n + 1','2021-01-21 08:12:15','false'),(353,88,'n - 1','2021-01-21 08:12:15','true'),(354,89,'n(n+1)/2','2021-01-21 08:12:15','false'),(355,89,'n(n-1)/2','2021-01-21 08:12:15','true'),(356,89,'n2/2','2021-01-21 08:12:15','false'),(357,89,'n','2021-01-21 08:12:15','false'),(358,90,'Dn= nlog2n','2021-01-21 08:12:45','false'),(359,90,'Dn= nlog2n +1','2021-01-21 08:12:15','false'),(360,90,'Dn= log2n','2021-01-21 08:12:15','false'),(361,90,'Dn= log2n + 1','2021-01-21 08:12:15','true'),(362,91,'edges','2021-01-21 08:12:15','true'),(363,91,'e엔드 포인트','2021-01-21 08:12:15','false'),(364,91,'adjacent nodes(','2021-01-21 08:12:15','false'),(365,91,'neighbors','2021-01-21 08:12:15','false'),(366,92,'Ordinary queue','2021-01-21 08:12:15','false'),(367,92,'Single ended queue','2021-01-21 08:12:15','true'),(368,92,'Circular queue','2021-01-21 08:12:15','false'),(369,92,'Priority queue','2021-01-21 08:12:15','false'),(370,93,'ab+cd–*','2021-01-21 08:12:15','true'),(371,93,'abc+*– ','2021-01-21 08:12:15','false'),(372,93,'ab+*cd–','2021-01-21 08:12:15','false'),(373,93,'ab+*cd–','2021-01-21 08:12:15','false'),(374,94,'Floor address','2021-01-21 08:12:15','false'),(375,94,'Foundation address','2021-01-21 08:12:15','false'),(376,94,'First address  ','2021-01-21 08:12:15','false'),(377,94,'Base address','2021-01-21 08:12:15','true'),(378,95,'AB+CD+*F/D+E*  ','2021-01-21 08:12:15','false'),(379,95,'ABCD+*F/+DE*+','2021-01-21 08:12:15','true'),(380,95,'A*B+CD/F*DE++','2021-01-21 08:12:15','false'),(381,95,'A+*BCD/F*DE++','2021-01-21 08:12:15','false'),(382,96,'Radix sort','2021-01-21 08:12:15','false'),(383,96,'Breadth first search','2021-01-21 08:12:15','false'),(384,96,'Recursion','2021-01-21 08:12:15','false'),(385,96,'Depth first search','2021-01-21 08:12:15','true'),(386,97,'Backtracking','2021-01-21 08:12:15','false'),(387,97,'Greedy','2021-01-21 08:12:15','false'),(388,97,'Dynamic programming','2021-01-21 08:12:15','true'),(389,97,'Divide','2021-01-21 08:12:15','false'),(390,98,'Bubble sort','2021-01-21 08:12:15','false'),(391,98,'Quick sort','2021-01-21 08:12:15','false'),(392,98,'Merge sort','2021-01-21 08:12:15','false'),(393,98,'Selection sort','2021-01-21 08:12:15','true'),(394,99,'Greedy technique','2021-01-21 08:12:15','false'),(395,99,'Dynamic Programming','2021-01-21 08:12:15','false'),(396,99,'Linear Programming','2021-01-21 08:12:15','false'),(397,99,'backtracking','2021-01-21 08:12:15','false'),(398,100,'n-queen problem','2021-01-21 08:12:15','false'),(399,100,'subset sum problem ','2021-01-21 08:12:15','true'),(400,100,'hamiltonian circuit problem','2021-01-26 09:48:40','false'),(401,100,'travelling salesman problem','2021-01-26 09:48:40','false'),(402,101,'ptr = (NODE*)malloc(sizeof(NODE));','2021-01-26 09:48:40','true'),(403,101,'ptr = (NODE*)malloc(NODE);','2021-01-26 09:48:40','false'),(404,101,'ptr = (NODE*)malloc(sizeof(NODE*));','2021-01-26 09:48:40','false'),(405,101,'ptr = (NODE)malloc(sizeof(NODE));','2021-01-26 09:48:40','false'),(406,102,'%, *, /, +, –','2021-01-29 01:54:45','true'),(407,102,'%, +, /, *, –','2021-01-29 01:54:46','false'),(408,102,'+, -, %, *, /','2021-01-29 01:54:46','false'),(409,102,'%, +, -, *, /','2021-01-29 01:54:46','false'),(410,103,'!','2021-01-29 07:20:03','false'),(411,103,'~','2021-01-29 07:20:03','false'),(412,103,'^&','2021-01-29 07:20:03','true'),(413,103,'++','2021-01-29 07:20:03','false'),(414,104,'(1)','2021-01-29 07:22:50','false'),(415,104,'(2)','2021-01-29 07:22:50','true'),(416,104,'(3)','2021-01-29 07:22:50','false'),(417,104,'(4)','2021-01-29 07:22:50','false'),(418,105,' * ','2021-01-29 07:27:28','false'),(419,105,'| ','2021-01-29 07:27:28','false'),(420,105,'-','2021-01-29 07:27:28','false'),(421,105,'_','2021-01-29 07:27:28','true'),(422,106,'auto lf = [bias](int x, int y) { return x + y; };','2021-01-29 09:08:37','false'),(423,106,'auto lf = [&](int x, int y) { return x + y; };','2021-01-29 09:08:37','false'),(424,106,'a & b','2021-01-29 09:08:37','true'),(425,106,'auto &lf = (int x, int y) { return x + y; };','2021-01-29 09:08:37','false'),(426,107,'10','2021-02-09 18:17:27','false'),(427,107,'5','2021-02-09 18:17:27','true'),(428,107,'6','2021-02-09 18:17:27','false'),(429,107,'3','2021-02-09 18:17:27','false'),(430,108,'[ \'C\', \'C++\', \'JAVA\']','2021-02-10 03:40:30','false'),(431,108,'[ \'C\', \'C++\']','2021-02-10 03:40:30','false'),(432,108,'[\'C\', \'C++\', \'JAVA\', \'Pythohn\', \'Go\', \'C#\' ]','2021-02-10 03:40:30','false'),(433,108,'[ \'Pythohn\', \'Go\', \'C#\' ]','2021-02-10 03:40:30','false'),(434,109,'2^16 – 1','2021-04-11 03:41:31','false'),(435,109,'2^15 –1','2021-04-11 03:41:31','false'),(436,109,'2^16','2021-04-11 03:41:31','true'),(437,109,'2^15','2021-04-11 03:41:31','false'),(438,110,'5','2021-04-11 03:41:31','false'),(439,110,'6','2021-04-11 03:41:31','true'),(440,110,'7','2021-04-11 03:41:31','false'),(441,110,'8','2021-04-11 03:41:31','false'),(442,111,'10,10','2021-04-11 03:47:25','false'),(443,111,'10,11','2021-04-11 03:47:25','false'),(444,111,'11,10','2021-04-11 03:47:25','false'),(445,111,'11,11','2021-04-11 03:47:25','true'),(446,112,'int my_num = 100,000;','2021-04-11 03:50:36','false'),(447,112,'int my_num = 100000;','2021-04-11 03:50:36','true'),(448,112,'int my num = 1000;','2021-04-11 03:50:36','false'),(449,112,'int my num == 10000;','2021-04-11 03:50:36','false'),(450,113,'Decimal','2021-04-11 03:58:05','false'),(451,113,'Binary','2021-04-11 03:58:05','false'),(452,113,'Hexadecimal','2021-04-11 03:58:05','true'),(453,113,'Octal','2021-04-11 03:58:05','false'),(454,114,'8','2021-04-11 04:08:12','false'),(455,114,'16','2021-04-11 04:08:12','false'),(456,114,'32','2021-04-11 04:08:12','false'),(457,114,'80','2021-04-11 04:08:12','true'),(458,115,'virtual polymorphism','2021-04-11 04:08:12','false'),(459,115,'transient polymorphism','2021-04-11 04:08:12','false'),(460,115,'pseduo polymorphism','2021-04-11 04:08:12','false'),(461,115,'ad-hoc polymorphism','2021-04-11 04:08:12','true'),(462,116,'20','2021-04-11 04:08:12','false'),(463,116,'35','2021-04-11 04:08:12','false'),(464,116,'48','2021-04-11 04:08:12','false'),(465,116,'52','2021-04-11 04:08:12','true'),(466,117,'Object oriented programming','2021-04-11 04:08:12','true'),(467,117,'Oriented object programming','2021-04-11 04:08:12','false'),(468,117,'Office oriented programming','2021-04-11 04:08:12','false'),(469,117,'office objective programming','2021-04-11 04:08:12','false'),(470,118,'i=i+i','2021-04-11 04:08:12','true'),(471,118,'i=i+1','2021-04-11 04:09:44','false'),(472,118,'i=1+1','2021-04-11 04:09:44','false'),(473,118,'++i','2021-04-11 04:09:44','false'),(474,119,'Structured Programming','2021-04-11 04:30:37','true'),(475,119,'Object Oriented Programming (OOP)','2021-04-11 04:30:37','false'),(476,119,'Function Programming','2021-04-11 04:30:37','false'),(477,119,'Aspect Oriented Programming (AOP)','2021-04-11 04:30:37','false'),(478,120,'& Operator','2021-04-11 04:30:37','false'),(479,120,'&= ','2021-04-11 04:30:37','false'),(480,120,'|=','2021-04-11 04:30:37','false'),(481,120,'<=','2021-04-11 04:30:37','true'),(482,121,'1','2021-04-11 04:30:37','false'),(483,121,'2','2021-04-11 04:30:37','false'),(484,121,'3','2021-04-11 04:30:37','false'),(485,121,'4','2021-04-11 04:30:37','true'),(486,122,'순수 가상 함수를 가지 클래스는 무조건 추상 클래스가 된다.','2021-04-11 04:30:37','false'),(487,122,'순수 가상 함수는 실행이 목적이 아니라, 파생 클래스가 구현해야 할 함수를 알려주기 위한 것이다.','2021-04-11 04:30:37','false'),(488,122,'클래스의 멤버 함수뿐만 아니라 외부 함수도 순수 가상 함수로 선언 가능하다.','2021-04-11 04:30:37','true'),(489,122,'순수 가상 함수가 호출되면 동적 바인딩이 일어난다.','2021-04-11 04:30:37','false'),(490,123,'cin >> tmp;','2021-04-11 04:30:37','true'),(491,123,'cin.get(tmp, 99);','2021-04-11 04:30:37','false'),(492,123,'cin.get(tmp, 99, ‘\\n’);','2021-04-11 04:30:37','false'),(493,123,'cin.getline(tmp, 50);','2021-04-11 04:30:37','false'),(494,124,'1','2021-04-11 04:30:37','false'),(495,124,'2','2021-04-11 04:30:37','false'),(496,124,'3','2021-04-11 04:30:37','true'),(497,124,'4','2021-04-11 04:30:37','false'),(498,125,'overriding','2021-04-11 04:30:37','false'),(500,125,'virtual ','2021-04-11 04:30:37','false'),(501,125,'function redefinition','2021-04-11 04:30:37','true'),(502,125,'overloading','2021-04-11 04:30:37','false'),(503,126,'quick sort','2021-04-11 04:30:37','false'),(504,126,'merge sort','2021-04-11 04:30:37','false'),(505,126,'heap sort','2021-04-11 04:30:37','false'),(506,126,' bottom up merge sort','2021-04-11 04:30:37','true'),(507,127,'5 and 4','2021-04-11 04:30:37','true'),(508,127,'4 and 5','2021-04-11 04:30:37','false'),(509,127,'2 and 4','2021-04-11 04:30:37','false'),(510,127,'2 and 5','2021-04-11 04:30:37','false'),(511,128,'0','2021-04-11 04:30:37','false'),(512,128,'5','2021-04-11 04:30:37','false'),(513,128,'10','2021-04-11 04:30:37','true'),(514,128,'15','2021-04-11 04:30:37','false'),(515,129,'2k − 1','2021-04-11 04:30:37','false'),(516,129,'2k+1 − 1','2021-04-11 04:30:37','true'),(517,129,'2k-1 + 1','2021-04-11 04:30:37','false'),(518,129,'2k − 1','2021-04-11 04:30:37','false'),(519,130,'k >= j && y < elements[k- span]','2021-04-11 04:30:37','false'),(520,130,'k >= span || y < elements[k + span]','2021-04-11 04:30:37','false'),(521,130,'k >= j || y < elements[k + span] ','2021-04-11 06:55:04','false'),(522,130,'k >= span && y < elements[k- span]  ','2021-04-11 06:55:04','true'),(523,131,'lookup[tmp] = min_coins','2021-04-11 06:55:05','false'),(524,131,'min_coins = lookup[tmp]','2021-04-11 06:55:05','true'),(525,131,' break','2021-04-11 06:55:05','false'),(526,131,'continue','2021-04-11 06:55:05','false'),(527,132,'0,10,110,1110,1111','2021-04-11 06:55:05','true'),(528,132,'10,011,11,001,010','2021-04-11 07:10:21','false'),(529,132,'10,01,0001,100,1010','2021-04-11 07:10:21','false'),(530,132,'100,110,001,000,010','2021-04-11 07:10:21','false'),(1361,NULL,'','2021-04-11 07:10:21',NULL);
/*!40000 ALTER TABLE `plass_problem_multiplechoice_answer` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `plass_problem_multiplechoice_category`
--

DROP TABLE IF EXISTS `plass_problem_multiplechoice_category`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `plass_problem_multiplechoice_category` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `problem_id` int(10) DEFAULT NULL,
  `category_id` int(10) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=109 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `plass_problem_multiplechoice_category`
--

LOCK TABLES `plass_problem_multiplechoice_category` WRITE;
/*!40000 ALTER TABLE `plass_problem_multiplechoice_category` DISABLE KEYS */;
INSERT INTO `plass_problem_multiplechoice_category` VALUES (1,1,28),(2,2,6),(3,3,27),(4,4,27),(5,5,28),(6,6,23),(7,7,28),(8,8,28),(9,9,30),(10,10,30),(11,11,26),(12,12,27),(13,13,30),(14,14,28),(15,15,27),(16,16,23),(17,17,28),(18,18,23),(19,19,31),(20,20,28),(21,21,20),(22,22,28),(23,23,23),(24,24,23),(25,25,26),(26,26,28),(27,27,23),(28,28,27),(29,29,23),(30,30,23),(31,31,43),(32,32,42),(33,33,21),(34,34,27),(35,35,23),(36,36,23),(37,37,23),(38,38,27),(39,39,28),(40,40,28),(41,41,28),(42,42,28),(43,43,28),(44,44,23),(45,45,23),(46,46,27),(47,47,10),(48,48,6),(49,49,18),(50,50,13);
/*!40000 ALTER TABLE `plass_problem_multiplechoice_category` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `plass_problem_multiplechoice_submit`
--

DROP TABLE IF EXISTS `plass_problem_multiplechoice_submit`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `plass_problem_multiplechoice_submit` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) DEFAULT NULL,
  `problem_id` int(11) DEFAULT NULL,
  `answer_status` varchar(5) DEFAULT NULL,
  `timestamp` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `answer_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=59 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `plass_problem_multiplechoice_submit`
--

LOCK TABLES `plass_problem_multiplechoice_submit` WRITE;
/*!40000 ALTER TABLE `plass_problem_multiplechoice_submit` DISABLE KEYS */;
/*!40000 ALTER TABLE `plass_problem_multiplechoice_submit` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `plass_problem_shortans`
--

DROP TABLE IF EXISTS `plass_problem_shortans`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `plass_problem_shortans` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(100) DEFAULT NULL,
  `content` varchar(10000) DEFAULT NULL,
  `created` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `level` varchar(500) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=102 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `plass_problem_shortans`
--

LOCK TABLES `plass_problem_shortans` WRITE;
/*!40000 ALTER TABLE `plass_problem_shortans` DISABLE KEYS */;
INSERT INTO `plass_problem_shortans` VALUES (1,'제네릭 클래스 ','다음 프로그램의 실행 결과를 입력하시오. <br>\nimport java.util.*;\nclass GClass<T>{\n    private LinkedList<T> list;\n    GClass(){\n        list = new LinkedList();\n    }\n    public String getValue(){\n        String str = new String();\n        for(T e : list) str += e.toString();\n        return str;\n    }\n    public void setValue(T ... args){\n        for (T e : args) list.add(e);\n    }\n}\npublic class TEXT{\n    public static void main(String[] args){\n        GClass<Integer> gInteger = new GClass<Integer>();\n        gInteger.setValue(10, 20, 30);\n        System.out.println(gInteger.getValue());\n    }\n}','2020-11-29 15:45:00','하'),(2,'Escape Squence 출력 결과','다음 자바  프로그램의 실행 결과를 입력하시오.<br>\npublic class ExerciseCh2_6_1 {\n  public static void main(String[] args) {\n    System.out.println(\"\\t is  tab.\");\n    System.out.println(\"\'\\t\' is  tab.\");\n    System.out.println(\"\\\'\\t\\\' is  tab.\");\n    System.out.println(\"\'\\\\t\' is  tab.\");\n  }\n}','2020-11-29 15:55:17','하'),(3,'논리 연산자 우선순위 ','다음 연산자들을  논리 연산자의 우선 순위를 나열하시오.<br>\n NOT (!), AND (&&), OR (||)','2021-01-21 08:27:29','하'),(4,'값 변환','다음 자바 프로그램의 실행 결과를 입력하시오.<br>\nclass ExerciseCh3_8 {\n  public static void main(String[] args) throws IOException {\n  char c;\n  System.out.print(\"Enter a character = \");\n  c = (char)\n  System.in.read();\n  if (c >= \'A\' && c <= \'Z\')\n    c += (        );\n  else if (c >= \'a\' && c <= \'z\')\n    c += (        );\n  System.out.println(\"Converted character = \" + c);\n} \n}','2020-11-29 16:17:18','중'),(5,'strncat() 함수','다음 프로그램의 실행 결과를 입력하시오.<br>\n #include < stdio.h >\n  int main()\n{\n  char str[10] = \"hello\";\n  char * str1 = \"world\";\n  strncat(str, str1, 9);\n  printf(\"%s\", str);\n}','2020-11-29 16:24:36','중'),(6,'String 연산','매개변수로 들어온 두개의 문자열을 비교 하여 문자열이 같다면 0을 반환하고,<br>다르면 음수 혹은 양수를 반환하는 함수는 무엇인지를 입력하시오.\n','2020-11-29 16:31:58','중'),(7,'200bbb000의 출력 값','입력 받은 값은 \"2000bbb00\"이면  프로그램의 실행 결과를 입력하시오.  <br>\n import java.io.IOException;\n   public class ExerciseCh4_7_1 {\n\n  static int readInt() throws IOException {\n\n  char ch;\n\n  int n = 0;\n\n  // skip non-digit characters\n\n  while (!Character.isDigit(ch = (char)\n                         System.in.read()));\n\n\n  do {\n\n    n = n * 10 + (ch - \'0\');\n\n    ch = (char) System.in.read();\n\n  } while (Character.isDigit(ch));\n\n  return n;\n\n}\n\npublic static void main(String[] args) throws java.io.IOException {\n  int i;\n  System.out.print(\"*** input data : \");\n  i = readInt();\n  if ((i % 4 == 0 && i % 100 != 0) || i % 400 == 0) System.out.println(\"leap\");\n  else\n    System.out.println(\"non-leap\");\n} \n}  ','2020-11-29 16:34:44','중'),(8,'스택 함수 결과','다음과 같은 stack 함수 주어졌을 때 실행 결과 값을 입력하시오.<br>\npush(): stack에 데이터 푸시<br>\npop(): stack의 top에서 데이터를 팝<br>\ntop(): stack의 top에 저장된 데이터 반환<br>','2021-01-21 08:28:38','하'),(9,'continue & break','다음 프로그램의 실행 결과를 입력하시오.<br>\npublic class ExerciseCh4_7_3 {\n  public static void main(String[] args) {\n    int count = 0;\n    for (int i = 0; i < 10; i++) {\n      for (int j = 0; j < 10; j++) {\n        if (j == 3) continue;\n        if (j == 5) break;\n        count++;\n      }\n      if (i == 5) break;\n    }\n    System.out.println(\"count= \" + count);\n  }\n}','2020-11-29 16:42:02','하'),(10,'INT 타입 format','다음 프로그램의 실행 결과를 입력하시오.<br>\npublic class ExerciseCh4_7_4 {\n  public static void main(String[] args) {\n    System.out.printf(\"%,7d\", 1234);\n      System.out.printf(\"%-,7d\", 1234);\n  }\n}','2020-11-29 16:43:58','하'),(11,'한개의 정수 초기화하는 생성자 작성','다음은 복소수(complex number)에 대한 클래스이다. \nclass Complex {\n  public double real;\n  public double image;\n}<br>\n\n위의 클래스 주어졌을 때 한 개의 실수를 받아 초기화하는 생성자를 입력하시오. \npublic Complex(double A)\n{\n  // 코드를 완성하시오\n}','2020-11-29 16:45:20','중'),(12,'두개의 정수 초기화하는 생성자 작성','다음은 복소수(complex number)에 대한 클래스이다. \nclass Complex {\n  public double real;\n  public double image;\n}<br>\n위의 클래스 주어졌을 때 두 개의 실수를 받아 초기화하는 생성자를 입력하시오. \npublic Complex(double a, double b)\n        {\n             // 코드를 완성하시오\n        }','2020-11-29 16:45:51','중'),(13,'형태를 반환하는 toString() 메소드 작성','다음은 복소수(complex number)에 대한 클래스이다.\nclass Complex {\n  public double real;\n  public double image;\n} <br>\n하나의 복소수를 (실수부, 허수부) 형태로 변환하는 toString() 메소드를 입력하시오.\n\npublic override String ToString() {\n                return( // 코드를 완성하시오 [참고: a + b i])\n	\n}','2020-11-29 16:46:19','중'),(14,'복소수에 대한 4칙 연산 수행하는 메소드','다음은 복소수(complex number)에 대한 클래스이다.\n class Complex {\n    public double real;\n    public double image;\n} <br>\n복소수에 대한 4칙 연산을 수행하는 메소드 addComplex 입력하시오.\npublic static Complex AddComplex(Complex f1, Complex f2) \n        {\n            return new Complex(//코드를 완성하시오);\n        }','2020-11-29 16:47:31','중'),(15,'비트 수 ','다음 프로그램의 실행 결과는 무엇인지 입력하시오.<br>\npublic class ExerciseCh3_9_3 {\n    public static void main(String[] args) {\n        System.out.println(\"number of bits = \" + f(037));\n    }\n    public static int f(int n) {\n        int m;\n        for (m=0; n!=0; n>>=1)\n            if ((n & 1) == 1) m++;\n        return m;\n    }\n}','2021-01-21 10:45:08','중'),(16,'배열 출력 결과','다음 프로그램 출력 결과 무엇인지 입력하시오.<br>\nint main()\n{\n  int ary[4] = { 1, 2, 3, 4};\n  int p[4];\n  p = ary;\n  printf(\"%d\\n\", p[1]);\n}   ','2021-01-21 10:45:03','하'),(17,'정적 함수 실행 결과','다음과 같은 프로그램의 답을 입력하시오.<br>\npublic class ExerciseCh5_10_1 {\n  static void methodA(long l) {\n    System.out.println(\"Argument type is long\");\n  }\n  static void methodA(double d) {\n    System.out.println(\"Argument type is double\");\n  }\n  public static void main(String[] args) {\n    methodA(1);\n  }\n}','2020-11-29 16:51:30','중'),(18,'정적 변수 ','다음 프로그램의 출력 값을 입력하시오.<br>\n    int main()\n    {\n        foo();\n        foo();\n    }\n    void foo()\n    {\n        int i = 11;\n        printf(\"%d \", i);\n        static int j = 12;\n        j = j + 1;\n        printf(\"%d\\n\", j);\n    }','2021-01-21 13:13:00','중'),(19,'상속 클래스','<p>다음 프로그램의 빠진 부분이 무엇인지 입력하시오.</p>\nclass SuperClass {\n  int value; SuperClass(int i) {\n    value = i;\n  } void output() {\n  System.out.println( SuperClass:&quot ; + value);\n}\n}\n\nclass SubClass extends SuperClass {\n  int value; SubClass(int i) {\n    value = i;\n  } void output() {\n  System.out.println( SubClass: &quot; + value);\n}\n}\n\npublic class ExerciseCh6_7_2 {\n  static void print(SubClass obj) { obj.output(); }\n\n  public static void main(String[] args) {\n    SuperClass obj1 = new SuperClass(1); \n    SubClass obj2 =//코드 완성하시오 print(obj1); print(obj2);\n}\n}\n','2020-11-29 16:53:58','중'),(20,'정적 함수','다음 프로그램의 실행 결과는 무엇인지 입력하시오.\n\nclass Count {\n    public static int scount = 0;\n    public int count = 0;\n    public static void sIncrement() {\n        scount++;\n    }\n    public void increment() {\n        count++;\n    }\n}\npublic class ExerciseCh5_9_1 {\n    public static void main(String[] args) {\n        Count c = new Count();\n        c.increment(); Count.sIncrement(); c.sIncrement();\n        System.out.print(\"Instance Value = \" + c.count);\n        System.out.println(\", Static Value = \" + Count.scount);\n    }\n}\n\n','2021-01-21 09:56:03','하'),(21,'string argument','다음 프로그램의 실행 결과를 입력하시오.<br>\npublic class ExerciseCh7_6 {\n  public static void main(String[] args) {\n    System.out.println(\"Input String is \" + args[0]);\n    System.out.println(\"Byte is         \" + Byte.parseByte(args[0]));\n    System.out.println(\"Short is        \" + Short.parseShort(args[0]));\n    System.out.println(\"Float is        \" + new Float(args[0]).floatValue());\n    System.out.println(\"Integer is      \" + Integer.parseInt(args[0]));\n    System.out.println(\"Long is         \" + Long.parseLong(args[0]));\n  }\n}','2020-11-29 16:56:53','하'),(22,'for문 ','다음 for(;;)은 무한 루프 의미한다.(True, true,TRUE)/(False, FALSE, false). ','2020-11-29 16:58:06','하'),(23,'try, catch, finally statement 예외처리(1)','다음 프로그램의 실행 결과를 입력하시오.<br>\n\nclass Ex extends Exception { }\npublic class ExerciseCh9_6_1 {\n  public static void main(String[] args) {\n    System.out.println(\"Entering first try block\");\n    try {\n      System.out.println(\"Entering second try block\");\n      try {\n        throw new Ex();\n      } finally {\n        System.out.println(\"finally in 2nd try block\");\n      }\n    } catch (Ex e) {\n      System.out.println(\"Caught Ex in first try block\");\n    }finally {\n      System.out.println(\"finally in 1st try block\");\n    }\n  }\n}','2020-11-29 16:59:49','하'),(24,'try, catch, finally statement 예외처리(2)','다음 프로그램의 실행 결과를 입력하시오. <br>\npublic int methodA(){\n  try {\n    return 1;\n  }\n  catch (Exception e) { return 2; }\n}public int methodB(){\n  try {\n    return 3;\n  }\n  finally {\n    return 4;\n  }\n}\n}\npublic class ExerciseCh9_6_2 {\n  public static void main(String[] args) {\n    FinallyClause fc = new FinallyClause();\n    System.out.println(\"methodA returns \" + fc.methodA());\n    System.out.println(\"methodB returns \" + fc.methodB());\n  }','2020-11-29 17:00:50','하'),(25,'String 함수(1)','문자열의 길이를 알려주는 함수 무엇인지 입력하시오.\n ','2020-11-29 17:03:49','하'),(26,'포인터 배열 ','다음 프로그램의 실행 결과를 입력하시오.<br>\nusing namespace std;\nmain() { \n   int a[] = {1, 2}, *p = a;\n   cout<<p[1]; \n}','2021-01-26 09:10:01','하'),(27,'자바 프로그래밍 파케지 annotation','다음 프로그램의 실행 결과를 입력하시오 .<br>\nimport java.lang.reflect.*;\nimport java.lang.annotation.*;\n@Retention(RetentionPolicy.RUNTIME)\n@interface Message{\n    String msg() default \"[empty]\";\n}\n@Message(msg = \"Sample Class\")\nclass SampleClass {\n    @Message(msg = \"int value1\")\n    public int value1;\n    @Message(msg = \"int value2\")\n    public int value2;\n}\npublic class ExerciseCh10_6_2 {\n    public static void main(String[] args){\n        SampleClass test = new SampleClass();\n        Class<? extends  SampleClass> c = test.getClass();\n        for(Field f : c.getDeclaredFields()){\n            if(f.isAnnotationPresent(Message.class)){\n                System.out.println(f.getName() + \" has annotation.\");\n                for(Annotation a : f.getAnnotations())\n                    System.out.println(a.toString());\n\n            }\n            else\n                System.out.println(f.getName() + \" has not annotation.\");\n        }\n\n    }\n}','2020-11-29 17:07:28','상'),(28,'교환하는 swap의 출력 값 ','다음 프로그램의 실행 결과를 입력하시오 .<br>\nclass ISwap{\n    public int x,y;\n    public void swap(){\n        int temp;\n        temp=x;\n        x=y;\n        y=temp;\n    }\n}\nclass DSwap{\n    public double x,y;\n    public void swap(){\n        double temp;\n        temp=x;\n        x=y;\n        y=temp;\n    }\n}\npublic class ExerciseCh10_7 {\n    public static void main(String[] args){\n        ISwap i = new ISwap();\n        i.x = 1; i.y=2;\n        System.out.println(\"x : \"+ i.x + \"y : \"+i.y);\n        i.swap();\n    }\n}','2020-11-29 17:08:40','하'),(29,'예외처리 Thread 실행 결과','다음 프로그램의 실행 결과를 입력하시오.<br>\nclass MyThread extends Thread{\n    MyThread(String name){\n        super(name);\n    }\n    public void run(){\n        while(true){\n            System.out.println(getName() + \" is now running\");\n            try {\n                sleep(5 * 1000);\n            }catch(InterruptedException e){\n                System.out.println(\"Interrupted is received\");\n                break;\n            }\n        }\n    }\n}\npublic class ExerciseCh11_7 {\n    public static void main(String[] args){\n        MyThread t1 = new MyThread(\"ThreadOne\");\n        MyThread t2 = new MyThread(\"ThreadTwo\");\n        t1.start();\n        t2.start();\n        try{\n            Thread.sleep(30*1000);\n        }catch(Exception e){}\n        t1.interrupt();\n        t2.interrupt();\n    }\n}','2020-11-29 17:10:20','하'),(30,'Runtime Exception ','다음 프로그램의 실행 결과를 입력하시오.<br>\npublic class ExerciseCh13_7_1 {\n    public static void main(String[] args){\n        try{\n            Class e = Class.forName(\"java.lang.RuntimeException\");\n            Class sc = e.getSuperclass();\n            System.out.println(\"Class     Name = \" + e.getName());\n            System.out.println(\"Superclass Name  =\" + sc.getName());\n        }catch(ClassNotFoundException e){\n            System.err.println(e);\n        }\n    }\n}','2020-11-29 17:11:32','하'),(31,'TreeSet 클래스','다음 프로그램의 실행 결과를 입력하시오.<br>\nimport java.util.*;\npublic class ExerciseCh13_7_2 {\n    public static void print(Collection<String> c)\n    {\n        for(String i : c)\n            System.out.println(i);\n    }\n    public static void main(String[] args){\n        TreeSet<String> strTs = new TreeSet<String>();\n        String[] result = \"Exercise ch13.7.2) is too simple.\".split(\"\\s\");\n        for(String i : result)\n            strTs.add(i);\n        print(strTs);\n    }\n}','2020-11-29 17:13:02','하'),(32,'delegate 실행 결과','다음 프로그램의 실행 결과를 입력하시오.\nusing System;\ndelegate void Delegate();\nclass ExerciseCh1_5_1 {\n    public static void Method1(){\n        Console.WriteLine(\"In the Method 1 ...\");\n    }\n    public static void Method2(){\n        Console.WriteLine(\"In the Method 2 ...\");\n    }\n    public static void Main(){\n        Delegate d = new Delegate(Method1);\n        d += new Delegate(Method2);\n        d();\n    }\n}','2020-11-29 18:14:38','하'),(33,'try, catch, finally statement 예외처리(3)','다음 프로그램의 실행 결과를 입력하시오.<br>\nusing System;\nclass ExerciseCh1_5_2 {\n    public static void Main()\n    {\n        int i = 1, j = 0, k;\n        try\n        {\n            Console.WriteLine(\"Exception checking...\");\n            k = i / j;\n            Console.WriteLine(\"After Exception happening...\");\n        }\n        catch (Exception e)\n        {\n            Console.WriteLine(\"Caught Exception...\");\n        }\n        finally\n        {\n            Console.WriteLine(\"In the finally statement...\");\n        }\n    }\n}','2020-11-29 18:20:19','하'),(34,'enum Color 클래스','다음 프로그램의 실행 결과를 입력하시오.<br>\nusing System;\nenum Color {Red, Green, Blue, Max = Blue};\nclass ExerciseCh2_10_2 {\n    public static void Main()\n    {\n        Color c = Color.Red;\n        int i = (int)++c;\n        Console.WriteLine(\" Color = \" + (Color)i);\n        c = Color.Blue;\n        Console.WriteLine(\"Cardinality of \" + c + \" = \" + (int)c);\n        c = Color.Max;\n        Console.WriteLine(\"Cardinality of \" + c + \" = \" + (int)c);\n    }\n}','2020-11-29 18:22:26','하'),(35,'무한 연산의 값 계산 (1)','다음과 같은 무한 연산(infinite arithmetic)의 값을 계산해서 출력하는<br>프로그램을 완성하시오.\n실행 결과: +infinite + +infinite\n\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace Es02_12_10_01\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            double a;\n            a =// 코드 완성하시오. \n            Console.WriteLine(\"PositiveInfinity + PositiveInfinity : \" + a);\n        }\n    }\n}','2020-11-29 18:26:01','하'),(36,'무한 연산의 값 계산 (2)','다음과 같은 무한 연산(infinite arithmetic)의 값을 계산해서 출력하는<br>프로그램을 완성하시오.<br>\n\n실행 결과:\r - +infinite - +infinite\r \nusing System;\n<br>\nusing System.Collections.Generic;\n<br>\nusing System.Linq;<br>\n\nusing System.Text;<br>\n\nusing System.Threading.Tasks;<br>\n\n\nnamespace Es02_12_10_02 { <br>\n\n  class Program {\n    <br>\nstatic void Main(string[] args) {\n  <br>\n    double a;\n   <br>   \n    a=// 코드 완성하시오. \n  <br>   \n    Console.WriteLine(\"PositiveInfinity - PositiveInfinity : \" + a);\n    <br>\n  }<br>\n\n }<br>\n\n}<br>','2020-11-29 18:29:32','하'),(37,'String 함수(2)','문자열 잘라주는 함수 무엇인지 입력하시오.','2021-01-21 09:08:52','하'),(38,'무한 연산의 값 계산(3)','다음과 같은 무한 연산(infinite arithmetic)의 값을 계산해서 출력하는<br>프로그램을 완성하시오.\n- 0.0 / 0.0\n\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace Es02_12_10_05\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n	 Console.WriteLine(\"0.0 / 0.0 : \" + // 코드 완성하시오.  ); \n        }\n    }\n}','2020-11-29 18:34:56','하'),(39,'무한 연산의 값 계산(4)','다음과 같은 무한 연산(infinite arithmetic)의 값을 계산해서 출력하는<br>프로그램을 완성하시오.\n- double.maxValue / +infinite\n\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace Es02_12_10_06\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            double a;\n             a= // 코드 완성하시오.\n            Console.WriteLine(\"double.MaxValue / PositiveInfinity : \" + a);\n        }\n    }\n}','2020-11-29 18:38:48','하'),(40,'인터페이스 Stack  Operation(1)','다음 인터페이스를 보고 물음에 답을 입력하시오.<br>\n인터페이스 IOperation을 이용하여 Stack 클래스를 구현한다.<br>부가적으로 스택에 관련된 저장장소를 확보하고 삽입(insert),<br>삭제(delete), 검색(search), 그리고 스택에 있는 원소 개수를<br>반환하는 메소드를 완성하시오.\n- 1. Insert(): 매개변수로 받은 str을 스택에 푸시한다.\n- 2. Delete(): 스택에서 팝한 후 반환한다.\n- 3. Search(): 스택에서 주어진 원소의 존재여부를 확인한다.\n- 4. GetCurrentElt(): 현재 스택 탑에 있는 원소를 반환한다.\n- 5. NumOfElements(): 스택에 존재하는 원소의 개수를 반환한다.\n\ninterface IOperation\n{\n    void Insert(string str);\n    string Delete();\n    bool Search(string str);\n    string GetCurrentElt();\n    int NumOfElements();\n}\n\nclass Stack : IOperation\n    {\n        private string[] stack; // 스택\n        private int top, size; // 스택 top과 스택의 최대 크기\n\n        public Stack(int size) // 생성자\n        {\n            stack = new string[size];\n            this.size = size;\n            top = -1;\n        }\n\n        public void Insert(string str) // 푸쉬\n        {\n            if (top < size - 1)\n            {\n	//코드를 완성하시오 (1)\n                \n            }\n            else\n                Console.WriteLine(\"Error : Stack is full!!\");\n        }\n\n        public string Delete() // 팝\n        {\n            string str;\n            if (top < 0)\n            {\n                Console.WriteLine(\"Error : Stack is empty!!\");\n                str = null;\n            }\n            else\n            {\n	//코드를 완성하시오(2)\n                \n            }\n            return str;\n        }\n\n        public bool Search(string str)  // 탐색\n        {\n	  foreach (string s in stack)\n                        if (s == str)\n                        return true;\n                  return false;\n        }\n\n        public string GetCurrentElt() // 스택 top의 원소 보기\n        {\n            if (top < 0)\n            {\n                Console.WriteLine(\"Error : Stack is empty!!\");\n                return null;\n            }\n            else\n	//코드를 완성하시오(3)\n                \n        }\n\n        public int NumOfElements() // 스택의 총 원소의 개수\n        {\n	// 코드를 완성하시오(4)\n            \n        }\n    }','2020-11-29 18:45:34','상'),(41,'인터페이스 Queue  Operation','다음 인터페이스를 보고 물음에 답을 입력하시오.<br>\n인터페이스 IOperation을 이용하여 Queue 클래스를 구현하시오. 부가적으로 큐에 관련된 저장장소를 확보하고 삽입(insert), 삭제(delete), 검색(search), 그리고 큐에 있는 원소 개수를 반환하는 메소드를 구현하시오.\n- 1. Insert(): 매개변수로 받은 str을 큐의 rear에 푸시한다.\n- 2. Delete(): 큐의 front에서 제거한 후 반환한다.\n- 3. Search(): 큐에서 주어진 원소의 존재여부를 확인한다.\n- 4. GetCurrentElt(): 현재 큐의 front에 있는 원소를 반환한다.\n- 5. NumOfElements(): 큐에 존재하는 원소의 개수를 반환한다.\n\ninterface IOperation\n{\n    void Insert(string str);\n    string Delete();\n    bool Search(string str);\n    string GetCurrentElt();\n    int NumOfElements();\n}\n\n class Queue : IOperation\n    {\n        private string[] queue;\n        private int size;\n        private int rear;\n\n        public Queue(int size) // 생성자\n        {\n            queue = new string[size];\n            this.size = size;\n            rear = -1;\n        }\n\n        public void Insert(string str) // 큐에 원소 추가\n        {\n            if (rear < size - 1)\n            {\n	//코드를 완성하시오\n                \n            }\n            else\n                Console.WriteLine(\"Error : Queue is full!!\");\n        }\n\n        public string Delete() // 큐의 원소 반환\n        {\n            string str;\n            if (rear < 0)\n            {\n                Console.WriteLine(\"Error : Queue is empty!!\");\n                str = null;\n            }\n            else\n            {\n	\n                str = queue[0];\n                for (int i = 0; i < rear; i++)\n			//코드를 완성하시오\n                   \n            }\n            return str;\n        }\n\n        public bool Search(string str) // 큐에서 스트링 검색\n        {\n	\n            foreach (string s in queue)\n             if (s == str)\n                    return true;\n            return false;\n                \n        }\n\n        public string GetCurrentElt() // 큐의 front의 원소 보기\n        {\n            if (rear < 0)\n            {\n                Console.WriteLine(\"Error : Stack is empty!!\");\n                return null;\n            }\n            else\n	//코드를 완성하시오\n                return queue[0];\n        }\n\n        public int NumOfElements() // 큐의 원소 개수\n        {\n	//코드를 완성하시오\n            \n        }\n    }','2020-11-29 18:49:48','중'),(42,'인터페이스 Stack  Operation(2)',' 다음 인터페이스과 실행 결과를 보고 스택과 큐를 테스트하는 주프로그램을 완성하시오.<br>\ninterface IOperation\n{\n    void Insert(string str);\n    string Delete();\n    bool Search(string str);\n    string GetCurrentElt();\n    int NumOfElements();\n}\n\n실행 결과:\n====== Stack Test ======\nString C\nTrue\nString B\n2\n====== Queue Test ======\nString A\nFalse\nString B\n2\n계속하려면 아무 키나 누르십시오 . . .\n\n     class Program\n    {\n        static void Main(string[] args)\n        {\n            // 스택 테스트\n            Stack stack = new Stack(100);\n\n            stack.Insert(\"String A\");\n            stack.Insert(\"String B\");\n            stack.Insert(\"String C\");\n            Console.WriteLine(\"====== Stack Test ======\");\n	//코드를 완성하시오.\n            \n            Console.WriteLine(stack.Search(\"String A\"));\n            Console.WriteLine(stack.GetCurrentElt());\n            Console.WriteLine(stack.NumOfElements());\n\n\n            // 큐 테스트\n            Queue queue = new Queue(100);\n\n            queue.Insert(\"String A\");\n            queue.Insert(\"String B\");\n            queue.Insert(\"String C\");\n            Console.WriteLine(\"====== Queue Test ======\");\n             //코드를 완성하시오.\n            \n            Console.WriteLine(queue.Search(\"String A\"));\n            Console.WriteLine(queue.GetCurrentElt());\n            Console.WriteLine(queue.NumOfElements());\n        }\n    }','2020-11-29 19:01:40','중'),(43,'try, catch, finally statement 예외처리(4)',' 다음 프로그램의 실행 결과를 입력하시오.\r <br>using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace Es06_10_02 {\n  class Ex : Exception\n  {\n\n  }\n  class Program {\n    static void Main(string[] args) {\n      Console.WriteLine(\"Entering first try block\");\n      try {\n        Console.WriteLine(\"Entering second try block\");\n        try {\n          throw new Ex();\n        }\n        finally {\n          Console.WriteLine(\"finally in 2nd try block\");\n        }\n      }\n      catch (Ex e)\n      {\n        Console.WriteLine(\"Caught Ex in first try block\");\n      }\n             finally {\n        Console.WriteLine(\"finally in 1st try block\");\n      }\n    }\n  }\n}','2020-11-29 19:18:34','중'),(44,'Thread 클래스(1)','다음 프로그램의 실행 결과를 입력하시오.\r<br>\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading;\nusing System.Threading.Tasks;\n\nnamespace Es06_10_04 {\n  class SimpleThread {\n    public void SimpleMethod() {\n      Random randomNumber = new Random();\n      for (int i = 0; i < 3; i++)\n      {\n        Console.WriteLine(i + + Thread.CurrentThread.Name);\n        Thread.Sleep(randomNumber.Next(1, 5) * 1000);\n      }\n      Console.WriteLine(\"DONE! \" + Thread.CurrentThread.Name);\n    }\n  }\n\n  class Program {\n    static void Main(string[] args) {\n      SimpleThread obj = new SimpleThread();\n      ThreadStart ts = new ThreadStart(obj.SimpleMethod);\n      Thread worker1 = new Thread(ts);\n      Thread worker2 = new Thread(ts);\n      worker1.Name = \"Apple\"; worker2.Name = \"Orange\";\n      worker1.Start(); worker2.Start();\n    }\n  }\n}','2020-11-29 19:26:10','하'),(45,'Thread 클래스(2)','다음은  lock 문을 사용하여 은행 예금 문제를 해결한 클래스이다.Main()<br>메소드가 있는 테스트 클래스를 작성하여 프로그램을 완성하시오.<br>\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading;\nusing System.Threading.Tasks;\n\nnamespace Es06_14_02 {\n  class Account {\n    private double balance;\n    public Account(double initialDeposit) {\n      balance = initialDeposit;\n    }\n    public double Balance\n         {\n    get { return balance; }\n    // set { balance = value; }\n  }\n         public void Deposit(double amount)\n  {\n    lock(this)\n    {\n      // balance += amount;\n\n      double temp;\n      temp = balance;\n      Thread.Sleep(1000);\n      // 처리 시간을 늘릴려고 딜레이를 주는 코드로 변경\n      balance = temp + amount; \n    }\n  }\n}\nclass Teller {\n         string name;\nAccount account;\ndouble amount;\n         public Teller(string name, Account account, double amount)\n{\n  this.name = name;\n  this.account = account;\n  this.amount = amount;\n}\n         public void TellerTask()\n{\n  account.Deposit(amount);\n  Console.WriteLine(name + \" : \" + account.Balance);\n}\n     }\n\nclass Program {\n  static void Main(string[] args) {\n\n    Account account = new Account(1000000);\n    Teller teller1 = new Teller(\"Teller1\", account, 1000000);\n    Teller teller2 = new Teller(\"Teller2\", account, 2000000);\n    //코드 완성하시오\n  }\n}\n }','2020-11-29 19:37:20','중'),(46,'Fibonacci 검색과 Jump 검색 ','Fibonacci Search과 Jump Search의 time complexity가 무엇인지 입력하시오.','2021-01-21 08:14:46','중'),(47,'선형 검색','선형 검색(재귀)은 선형 검색(반복)보다 실행 속도가 빠르다<br>(True, true,TRUE)/(False, FALSE, false). ','2021-01-21 08:14:46','중'),(48,'Backtracking 알고리즘','Backtracking 알고리즘은 brute force technique 속도가 빠르다<br>(True, true,TRUE)/(False, FALSE, false). ','2021-01-21 08:14:46','하'),(49,'배열 정렬','작은 배열을 정렬하는데 적합한 정렬 알고리즘이 무엇인지 입력하시오.','2021-01-21 08:14:46','하'),(50,'식의 형태(1)','다음 postfix표현식의 출력 값을 입력하시오.<br>\n(True, true,TRUE)/(False, FALSE, false). \nAB + CD* E – *F *G /','2021-01-21 08:14:46','중');
/*!40000 ALTER TABLE `plass_problem_shortans` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `plass_problem_shortans_answer`
--

DROP TABLE IF EXISTS `plass_problem_shortans_answer`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `plass_problem_shortans_answer` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `problem_id` int(11) DEFAULT NULL,
  `answer_content` varchar(1000) DEFAULT NULL,
  `created` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=102 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `plass_problem_shortans_answer`
--

LOCK TABLES `plass_problem_shortans_answer` WRITE;
/*!40000 ALTER TABLE `plass_problem_shortans_answer` DISABLE KEYS */;
INSERT INTO `plass_problem_shortans_answer` VALUES (1,1,'10 20 20','2021-01-21 08:35:10'),(2,2,'	is     tab. \'	\' is     tab. \'	\' is     tab. \'\\t\'           is     tab.','2020-11-29 15:56:08'),(3,3,'Ans: NOT (!) > AND (&&)  > OR (||)','2020-11-29 17:21:21'),(4,4,'32','2020-11-29 17:22:57'),(5,5,'helloworld','2021-01-21 08:35:18'),(6,6,'strcmp','2021-01-21 08:35:27'),(7,7,'Leap','2020-11-29 17:24:43'),(8,8,'10','2021-01-21 08:35:32'),(9,9,'24','2020-11-29 17:25:59'),(10,10,'  1,234\n1,234\n','2020-11-29 17:26:39'),(11,11,'  real=real;\n','2020-11-29 17:27:46'),(12,12,'     real = a;\n     image = b;\n ','2020-11-29 17:28:20'),(13,13,'real + \"+\" + image + \"i\"','2020-11-29 17:29:36'),(14,14,'f1.real + f2.real, f1.image + f2.image','2020-11-29 17:30:48'),(15,15,'5','2021-01-21 10:37:52'),(16,16,'15','2021-01-21 10:37:59'),(17,17,'Argument type is long','2020-11-29 17:40:28'),(18,18,'11 13 11 14','2021-01-21 13:17:30'),(19,19,' new SubClass(1); ','2021-01-21 13:17:37'),(20,20,'1 2','2021-01-21 10:38:08'),(21,21,' 33\n 33\n 33\n33.0\n33\n  33','2020-11-29 17:58:10'),(22,22,'True','2020-11-29 17:59:50'),(23,23,'Entering first try block\nEntering second try block\nfinally in 2nd try block\nCaught Ex in first try block\nfinally in 1st try block','2020-11-29 18:00:25'),(24,24,'methodA returns 1\nmethondB returns 4','2020-11-29 18:00:49'),(25,25,'strlen','2020-11-29 18:05:32'),(26,26,'-2','2020-11-29 18:06:21'),(27,27,'value1 has annotation.\n@Message(msg=\"int value1\")\nvalue2 has annotation.\n@Message(msg=\"int value2\")','2020-11-29 18:07:03'),(28,28,'x : 1 y : 2','2020-11-29 18:07:36'),(29,29,'ThreadOne is now running\nThreadTwo is now running','2020-11-29 18:08:15'),(30,30,'Class Name = java.lang.RuntimeException\nSuperclass Name  =java.lang.Exception','2020-11-29 18:09:03'),(31,31,'Exercise\nch13.7.2)\nis\nsimple.\ntoo','2020-11-29 18:10:36'),(32,32,'In the Method 1 ...In the Method 2 ...','2020-11-29 18:16:19'),(33,33,'Exception checking . . .\nCaught Exception . . .\nIn the finally statement . . .','2020-11-29 18:20:52'),(34,34,' Color = Green\nCardinality of Blue = 2\nCardinality of Blue = 2','2020-11-29 18:22:48'),(35,35,'a = double.PositiveInfinity + double.PositiveInfinity;','2020-11-29 18:26:39'),(36,36,'a = double.PositiveInfinity - double.PositiveInfinity;','2020-11-29 18:29:36'),(37,37,'strtok','2020-11-29 18:32:11'),(38,38,' 0.0 / 0.0','2020-11-29 18:39:51'),(39,39,' a = double.MaxValue / double.PositiveInfinity; ','2020-11-29 18:38:51'),(40,40,'1. top++; stack[top] = str;  \n2. str = stack[top]; top--;	       \n3. return stack[top];\n4. return top + 1;\n               \n','2020-11-29 18:45:37'),(41,41,'1. rear++; queue[rear] = str;\n2.  queue[i] = queue[i + 1]; rear--;     \n3. return queue[0];\n4. return rear + 1;\n               \n','2020-11-29 18:49:59'),(42,42,'Console.WriteLine(queue.Delete());\n               \n','2020-11-29 19:01:42'),(43,43,'Entering first try block\nEntering second try block\nfinally in 2nd try block\nCaught Ex in first try block\nfinally in 1st try block\n               \n','2020-11-29 19:19:02'),(44,44,'0 Apple\n0 Orange\n1 Apple\n1 Orange\n2 Apple\n2 Orange\nDONE! Apple\nDONE! Orange\n\n               \n','2020-11-29 19:27:11'),(45,45,'Thread tTeller1 = new Thread(new ThreadStart(teller1.TellerTask));\nThread tTeller2 = new Thread(new ThreadStart(teller2.TellerTask));\n            tTeller1.Start();\n            tTeller2.Start();\n\n               \n','2020-11-29 19:37:52'),(46,46,'0(logn) & 0(sqrt(n))','2021-01-21 08:40:09'),(47,47,'False','2021-01-21 08:40:09'),(48,48,'False','2021-01-21 08:40:09'),(49,49,'Insertion sort','2021-01-21 08:40:09'),(50,50,'-16','2021-01-21 08:40:09');
/*!40000 ALTER TABLE `plass_problem_shortans_answer` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `plass_problem_shortans_submit`
--

DROP TABLE IF EXISTS `plass_problem_shortans_submit`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `plass_problem_shortans_submit` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) DEFAULT NULL,
  `problem_id` int(11) DEFAULT NULL,
  `answer_status` tinyint(4) DEFAULT NULL,
  `timstamp` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `content` varchar(1000) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=14 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `plass_problem_shortans_submit`
--

LOCK TABLES `plass_problem_shortans_submit` WRITE;
/*!40000 ALTER TABLE `plass_problem_shortans_submit` DISABLE KEYS */;
/*!40000 ALTER TABLE `plass_problem_shortans_submit` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `plass_problem_shortanswer_category`
--

DROP TABLE IF EXISTS `plass_problem_shortanswer_category`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `plass_problem_shortanswer_category` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `problem_id` int(11) DEFAULT NULL,
  `category_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=102 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `plass_problem_shortanswer_category`
--

LOCK TABLES `plass_problem_shortanswer_category` WRITE;
/*!40000 ALTER TABLE `plass_problem_shortanswer_category` DISABLE KEYS */;
INSERT INTO `plass_problem_shortanswer_category` VALUES (1,1,23),(2,2,23),(3,3,31),(4,4,23),(5,5,23),(6,6,31),(7,7,23),(8,8,23),(9,9,23),(10,10,23),(11,11,28),(12,12,28),(13,13,28),(14,14,28),(15,15,6),(16,16,6),(17,17,19),(18,18,11),(19,19,28),(20,20,11),(21,21,23),(22,22,23),(23,23,31),(24,24,31),(25,25,31),(26,26,31),(27,27,31),(28,28,31),(29,29,31),(30,30,31),(31,31,31),(32,32,23),(33,33,23),(34,34,23),(35,35,23),(36,36,23),(37,37,23),(38,38,23),(39,39,23),(40,40,28),(41,41,28),(42,42,28),(43,43,28),(44,44,23),(45,45,28),(46,46,38),(47,47,54),(48,48,38),(49,49,39),(50,50,33);
/*!40000 ALTER TABLE `plass_problem_shortanswer_category` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `plass_problem_submit`
--

DROP TABLE IF EXISTS `plass_problem_submit`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `plass_problem_submit` (
  `id` int(5) NOT NULL AUTO_INCREMENT,
  `user_id` int(5) DEFAULT NULL,
  `problem_id` int(5) DEFAULT NULL,
  `language_id` int(5) DEFAULT NULL,
  `answer_status` int(11) DEFAULT NULL,
  `status` varchar(45) DEFAULT NULL,
  `timestamp` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `path` varchar(100) DEFAULT NULL,
  `times` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=53 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `plass_problem_submit`
--

LOCK TABLES `plass_problem_submit` WRITE;
/*!40000 ALTER TABLE `plass_problem_submit` DISABLE KEYS */;
/*!40000 ALTER TABLE `plass_problem_submit` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `plass_problem_user_scores`
--

DROP TABLE IF EXISTS `plass_problem_user_scores`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `plass_problem_user_scores` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `userid` int(11) DEFAULT NULL,
  `problem_id` int(11) DEFAULT NULL,
  `created` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `score` varchar(45) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `plass_problem_user_scores`
--

LOCK TABLES `plass_problem_user_scores` WRITE;
/*!40000 ALTER TABLE `plass_problem_user_scores` DISABLE KEYS */;
/*!40000 ALTER TABLE `plass_problem_user_scores` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `plass_problems`
--

DROP TABLE IF EXISTS `plass_problems`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `plass_problems` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(500) COLLATE utf8_bin DEFAULT NULL,
  `content` varchar(500) COLLATE utf8_bin DEFAULT NULL,
  `rank` int(11) DEFAULT NULL,
  `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `language` varchar(45) COLLATE utf8_bin DEFAULT NULL,
  `input` varchar(500) COLLATE utf8_bin DEFAULT NULL,
  `output` varchar(500) COLLATE utf8_bin DEFAULT NULL,
  `remarks` varchar(500) COLLATE utf8_bin DEFAULT NULL,
  `level` varchar(500) COLLATE utf8_bin DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=214 DEFAULT CHARSET=utf8 COLLATE=utf8_bin;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `plass_problems`
--

LOCK TABLES `plass_problems` WRITE;
/*!40000 ALTER TABLE `plass_problems` DISABLE KEYS */;
INSERT INTO `plass_problems` VALUES (1,'몫과 나머지 ','두 수 a, b를 입력받아 a를 b로 나눈 몫과 나머지를 반환하는 프로그램을 작성하시오.',1,'2020-08-31 07:00:00','Python','10000이하의 두 자연수','몫과 나머지 ',NULL,'하'),(2,'문자열의 반복','문자열을 입력받아 5번 반복하여 반환하는 프로그램을 작성하시오.',1,'2020-08-31 07:00:00','Python','길이 10 이하의 문자열','5번 반복된 문자열',NULL,'하'),(3,'주민번호로 나이 구하기','주민등록번호를 입력받아 나이를 구하는 프로그램을 작성하시오.',1,'2020-08-31 07:00:00','Python','길이 14의 주민등록번호 문자열(-포함)','생년 부분',NULL,'하'),(4,'주민번호 분류','주민등록번호를 입력받아 93년생 이상의 남자일 경우 1을 반환하는 프로그램을 작성하시오.',1,'2020-08-31 07:00:00','Python','길이 14의 주민등록번호 문자열(-포함)','1 또는 0',NULL,'하'),(5,'리스트의 정렬','리스트의 원소를 공백을 이용해 입력받아 해당 리스트를 정렬하여 모든 원소 값에 2 곱한 값을 추가하여 반환하는 프로그램을 작성하시오.',1,'2020-08-31 07:00:00','Python','길이 10 이하의 정수 리스트','정렬된 리스트',NULL,'하'),(6,'리스트 원소 추가','리스트의 원소를 공백을 이용해 입력받아 해당 리스트의 마지막 값에 1을 더한 값을 추가하여 반환하는 프로그램을 작성하시오.',1,'2020-08-31 07:00:00','Python','길이 10 이하의 정수 리스트','값이 추가된 리스트',NULL,'하'),(7,'리스트의 최대값','리스트의 원소를 공백을 이용해 입력받아 해당 리스트의 최대값을 반환하는 프로그램을 작성하시오.',1,'2020-08-31 07:00:00','Python','길이 10 이하의 정수 리스트','최대값',NULL,'하'),(8,'리스트의 최대값 삭제','리스트의 원소를 공백을 이용해 입력받아 해당 리스트의 최대값을 삭제하는 프로그램을 작성하시오.',1,'2021-01-15 07:00:00','Python','길이 10 이하의 정수 리스트','최대값이 삭제된 리스트',NULL,'하'),(9,'문자열 내부에 문자 삽입','문자열을 입력받아 해당 문자열의 문자와 문자 사이에 \',\'를 추가하여 반환하는 프로그램을 작성하시오.',1,'2020-08-31 07:00:00','Python','길이 10 이하의 문자열','결과 문자열',NULL,'하'),(10,'문자열 대체','문자열을 입력받아 해당 문자열의 a문자를 z로 대체하여 반환하는 프로그램을 작성하시오.',1,'2020-08-31 07:00:00','Python','길이 10 이하의 문자열','결과 문자열',NULL,'하'),(11,'1부터 n까지의 정수','정수 n을 입력받아 1에서부터 n까지의 원소를 가지는 리스트를 반환하는 프로그램을 작성하시오.',1,'2020-08-31 07:00:00','Python','100 이하의 정수 ','1부터 n까지의 숫자',NULL,'하'),(12,'집합 만들기','정수 5개를 입력받아 중복을 제거한 리스트(집합)를 만든 후 반환하는 프로그램을 작성하시오.',1,'2020-08-31 07:00:00','Python','길이 5 이하의 정수 리스트','중복이 제거된 리스트',NULL,'하'),(13,'합집합','집합 A가 {1,2,3,4,5} 의 원소를 가지고 있을 때 집합 B의 원소 5개를 입력받아 두 집합의 합집합을 반환하는 프로그램을 작성하시오.\n(단, 중복된 숫자는 제거한다.)',1,'2020-08-31 07:00:00','Python','집합 B의 원소 5개','집합 A와 집합 B의 합집합',NULL,'하'),(14,'교집합과 차집합','집합 A가 {1,2,3,4,5} 의 원소를 가지고 있을 때 집합 B의 원소 5개를 입력받아 두 집합의 차집합(A-B)과 교집합의 원소의 개수를 반환하는 프로그램을 작성하시오.',1,'2020-08-31 07:00:00','Python','집합 B의 원소 5개','차집합의 원소의 수와 교집합의 원소의 수',NULL,'중'),(15,'배수와 집합','정수 n을 입력받아 1부터 n까지의 2의 배수, 3의 배수의 집합을 각각 만든 후, 집합 자료형과 교집합 연산을 이용해 2의 배수이면서 3의 배수인 수(6의 배수)의 집합을 반환하는 프로그램을 작성하시오.',1,'2020-08-31 07:00:00','Python','1000 이하의 정수 n','n이하의 모든 6의 배수를 원소로 가지는 집합',NULL,'중'),(16,'점심 메뉴 투표','점심 메뉴를 다중으로 입력받아 가장 많은 득표 결과를 얻은 메뉴를 반환하는 프로그램을 작성하시오.',1,'2020-08-31 07:00:00','Python','점심 메뉴 목록','가장 많은 득표를 받은 메뉴',NULL,'중'),(17,'홀수와 짝수 개수','여러 자연수들을 입력받아 홀수의 개수와 짝수의 개수를 반환하는 프로그램을 작성하시오.',1,'2020-08-31 07:00:00','Python','100개 이하의 자연수','홀수의 개수와 짝수의 개수',NULL,'하'),(18,'점수 판별','학생의 성적을 입력받아 90점 이상이라면 \"A\", 90점미만 80점 이상이라면 \"B\", 80점 미만이라면 \"C\"를 반환하는 프로그램을 작성하시오.',1,'2020-08-31 07:00:00','Python','학생의 점수','등급',NULL,'하'),(19,'점수 판별2','학생의 점수를 여러개 입력받아 80점 이상의 점수만 반환하는 프로그램을 작성하시오.',1,'2020-08-31 07:00:00','Python','10개 이하의 학생의 점수들','80점 이상의 점수들',NULL,'하'),(20,'직접 만드는 최대값 구현','max, sort, sorted 등의 함수를 사용하지 않고 들어온 값들 중 최대값을 구하여 반환하는 프로그램을 작성하시오.',1,'2020-08-31 07:00:00','Python','20개 이하의 정수','최대값',NULL,'하'),(21,'주민등록번호 검사','다음과 같은 조건에서 주민등록번호가 모두 올바르다면 1, 하나라도 잘못되었다면 0을 반환하는 프로그램을 작성하시오.<br>(단, 1) 년은 1900년 이상 2020년 이하여야 합니다.2) 월은 1 이상 12 이하여야 한다.3) 일은 1 이상 31 이하여야 한다.)',1,'2020-08-31 07:00:00','Python','10개 이하의 주민등록번호들','1 또는 0',NULL,'하'),(22,'숫자 검사','여러 값들을 입력받아 첫 값을 제외한 다른 값들의 평균이 첫 값보다 크다면 1, 아니라면 0을 반환하는 프로그램을 작성하시오.',1,'2020-08-31 07:00:00','Python','10개 이하의 정수','1 또는 0',NULL,'하'),(23,'중복 찾기','여러 값들을 입력받아 들어온 값에서 중복된 원소가 있다면 1, 아니라면 0을 출력하는 프로그램을 작성하시오.',1,'2020-08-31 07:00:00','Python','10개 이하의 변수','1 또는 0',NULL,'중'),(24,'소수 찾기','자연수 n을 입력받아 n보다 작은 소수를 원소로 가지는 리스트를 반환하는 프로그램을 작성하시오.',1,'2020-08-31 07:00:00','Python','100이하의 정수 n',' n이하의 모든 소수를 원소로 가지는 집합',NULL,'중'),(25,'값 곱하기','여러 수를 입력받아 해당 수를 두배 곱한 값들로 이루어진 리스트를 반환하는 프로그램을 작성하시오.',1,'2020-08-31 07:00:00','Python','10개 이하의 정수들','해당 정수들을 두배 곱한 값들로 이루어진 리스트',NULL,'하'),(26,'계산기 만들기(1)','두 수와 계산 기호(+, -) 를 입력받아 계산을 수행한 결과를 반환하는 계산기 프로그램을 작성하시오.',1,'2020-08-31 07:00:00','Python','두 수와 계산 기호','계산 결과',NULL,'중'),(27,'피보나치 수열','재귀함수 이용해 피보나치 수열의 n번째 수를 반환하는 프로그램을 작성하시오.',1,'2020-08-31 07:00:00','Python','자연수 n','피보나치 수열의 n번쨰 항',NULL,'중'),(28,'팩토리얼 구하기','자연수 n을 입력받아 n!의 값을 반환하는 factorial(n)을 출력하는 프로그램을 작성하시오.',1,'2020-08-31 07:00:00','Python','10 이하의 자연수 n','n!',NULL,'중'),(29,'숫자 뒤집기','한 정수를 입력받아 해당 정수를 거꾸로 뒤집은 수를 반환하는 프로그램을 작성하시오.',1,'2020-08-31 07:00:00','Python','정수','거꾸로 된 정수',NULL,'하'),(30,'로마 숫자','로마자에서 사용하는 숫자는 다음과 같다 : I, V, X, L, C, D, M. 정수를 입력받아 해당 로마 숫자의 10진수 값 출력하는 프로그램을 작성하시오.',1,'2020-08-31 07:00:00','Python','로마 숫자','10진수',NULL,'중'),(31,'올바른 괄호 판별','다음과 같은 여섯 가지의 괄호 \'(\', \')\', \'[\', \']\', \'{\', \'}\' 와 영문으로 이루어진 문자열이 들어왔을 때,괄호가 올바르게 배열되었는지를 판단하는 프로그램을 작성하시오.<br>(여는 괄호 후에 같은 타입의 닫는 괄호가 와야 하며, 다음과 같은 형태는 올바른 배열이 아닙니다 : \'([)]\', \'[)]\', \'[}\' 등.)',1,'2020-08-31 07:00:00','Python','괄호를 포함한 문자열','boolean',NULL,'중'),(32,'마지막 단어','주어진 문장의 맨 마지막 단어를 반환하는 프로그램을 작성하시오.<br>(단, 마지막 단어는 특수 문자를 제외한 단어만 반환합니다.)',1,'2020-08-31 07:00:00','Python','문장','마지막 단어',NULL,'중'),(33,'중앙값 찾기','리스트의 원소를 공백을 이용해 입력받아, 해당 리스트를 오름차순으로 정렬한 후 가운데값을 반환하는 프로그램을 작성하시오.<br>(단, 개수가 짝수라면 가운데 두 개의 값을 반환해야 한다.)',1,'2020-08-31 07:00:00','Python','길이 10 이하의 정수 리스트','가운데값 리스트',NULL,'중'),(34,'두 배 추가','리스트의 원소를 공백을 이용해 입력받아 해당 리스트를 두 배한 값의 리스트를 기존의 리스트에 추가하여 반환하는 프로그램을 작성하시오.',1,'2020-08-31 07:00:00','Python','길이 10 이하의 정수 리스트','값이 추가된 리스트',NULL,'하'),(35,'홀수 삭제','리스트의 원소를 공백을 이용해 입력받아 해당 리스트의 홀수를 삭제하는 프로그램을 작성하시오.',1,'2020-08-31 07:00:00','Python','길이 10 이하의 자연수 리스트','홀수값이 삭제된 리스트',NULL,'하'),(36,'쉼표 추가','문자열을 입력받아 해당 문자열의 문자와 문자 사이에 \',\'를 추가하고, <br>모든 문자를 대문자로 바꾸어 반환하는 프로그램을 작성하시오.',1,'2020-08-31 07:00:00','Python','길이 10 이하의 문자열','결과 문자열',NULL,'중'),(37,'문자열 스트립','문자열을 입력받아 해당 문자열의 특수문자들을 제거하여 반환하는 프로그램을 작성하시오.',1,'2020-08-31 07:00:00','Python','길이 10 이하의 문자열','결과 문자열',NULL,'하'),(38,'깊이 우선 탐색(BFS)','이진 트리 형태로 값들을 입력받아 깊이 우선 탐색의 경로를 출력하는<br>프로그램을 작성하시오.',1,'2020-08-31 07:00:00','Python','이진 트리 값들','경로 리스트',NULL,'중'),(39,'대칭 트리 구하기','이진 트리 형태로 값들을 입력받아 해당 트리가 대칭 트리인지 구하는 프로그램을 작성하시오.<br>(단, 트리라면 \'1\' 반환 아니면 \'0\' 출력한다. ex) [1,2,2,3,4,4,3] 는 다음과 같은 형태가 되므로 대칭 트리이다.)',1,'2020-08-31 07:00:00','Python','트리의 값들','1 또는 0',NULL,'중'),(40,'정규 표현식 매칭','문자열과 패턴이 주어질 때, 해당 정규 표현식 패턴이 문자열과 일치하는지 확인하는 프로그램을 작성하시오.<br>(단, 일치한다면 \'1\' 아니라면 \'0\' 출력한다.\'.\'은 임의의 한 글자를 뜻하고, \'*\'는 앞에 있는 글자의 0번 이상의 반복을 뜻한다. 따라서 패턴이 \"a*\"이고 문자열이 \"aaa\"라면 이 문자열은 패턴에 일치하며, 마찬가지로 패턴이 \".*\"이고 문자열이 \"ab\"라면 이 글자는 정규 표현식 패턴에 일치한다.)',1,'2020-09-14 11:59:58','Python','문자열과 패턴','1 또는 0',NULL,'상'),(41,'비만도(B) 계산(1)','사람의 키(H)와 몸무게(W)를 입력받아 비만도(B)를 계산하는  프로그램을 작성하시오.<br>(표준체중, SW=(H-100)*0.9. 비만도, B=W/SW*100)',1,'2020-10-28 02:43:23','C#','사람의 키(H)와 몸무게(W)','비만도(B)',NULL,'중'),(42,'삼각형의 넓이를 구하기(1)','삼각형의 세 변의 길이를 입력받아 다음 공식에 의해 삼각형의 넓이를 구하는 프로그램을 작성하시오.<br>(l=(a+b+c)/2. s= Math.Sqrt((Math.Pow(l-a),2)+Math.Pow(l-b),2)+Math.Pow(l-c),2)))\n',1,'2020-10-28 02:43:23','C#','삼각형의 세 변의 길이','삼각형의 넓이',NULL,'중'),(43,'식의 값을 구하기','변수에 임의의 값을 대입하여 식의 값을 구하는 프로그램을 작성하시오.',1,'2020-10-28 09:12:21','C#','변수에 임의의 값',' 식의 값',NULL,'중'),(44,'원리합계를 구하기','원금과 이율, 기간을 입력받아 복리법에 의해 원리합계를 구하는 프로그램을 작성하시오.<br>원리합계=원금 * (1+ 이율)^기간',1,'2020-10-28 09:12:21','C#','원금과 이율, 기간','원리합계',NULL,'중'),(45,'온도값(Fahrenheit)를 구하기(1)','섭씨 온도값(Celsius)을 입력받아 화씨 온도값(Fahrenheit)를 구하는 프로그램을 작성하시오.<br>(회씨온도 F=9/5*C+32)',1,'2020-10-28 09:12:21','C#','섭씨 온도값(Celsius)','화씨 온도값(Fahrenheit)',NULL,'중'),(46,'직렬로 연결된 회로의 저항과 병렬로 연결된 회로의 저항을 구하기(1)','세 개의 저항값을 입력받아 직렬로 연결된 회로의 저항과 병렬로 연결된 회로의 저항을 구하는 프로그램을 작성하시오.<br>(직렬연결, R=R1+r2+R3. 병렬연결, R=1/(1/R1+1/R2+1/R3))',1,'2020-10-28 09:12:21','C#','세 개의 저항값','직렬로 연결된 회로의 저항과 병렬로 연결된 회로의 저항',NULL,'중'),(47,'공의 부피(V)와 표면적(S)를 구하기','반지름(r)을 입력받아 공의 부피(V)와 표면적(S)를 구하는 프로그램을 작성하시오.<br>( 부피,V= (4/3) * pi * Math.Pow(r,3). 표면적,S= 4 *pi * Math.Pow(r,2))',1,'2020-10-28 09:12:21','C#','반지름(r)','공의 부피(V)와 표면적(S)',NULL,'하'),(48,'연도를 읽어 윤년인지를 판별','연도를 입력받아 윤년인이면 1, 아니면 0을 출력하는 프로그램을 작성하시오.',1,'2020-10-28 09:12:21','C#','연도','1 또는 0',NULL,'중'),(49,'일련의 정수를 읽어(자료의 끝은 0)제일 큰 수를 출력(1)','일련의 정수를 읽어(자료의 끝은 0)제일 큰 수를 출력하는 프로그램을<br>작성하시오.',1,'2020-10-28 09:12:21','C#','일련의 정수','제일 큰 수',NULL,'중'),(50,'삼각형 출력','입력한 정수 높이의 삼각형을 출력하는 프로그램을 작성하시오.',1,'2020-10-28 09:12:22','C#','정수','삼각형 형태',NULL,'중');
/*!40000 ALTER TABLE `plass_problems` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `plass_short_user_scores`
--

DROP TABLE IF EXISTS `plass_short_user_scores`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `plass_short_user_scores` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `userid` int(11) DEFAULT NULL,
  `problem_id` int(11) DEFAULT NULL,
  `created` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `score` varchar(45) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `plass_short_user_scores`
--

LOCK TABLES `plass_short_user_scores` WRITE;
/*!40000 ALTER TABLE `plass_short_user_scores` DISABLE KEYS */;
/*!40000 ALTER TABLE `plass_short_user_scores` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `plass_testcases`
--

DROP TABLE IF EXISTS `plass_testcases`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `plass_testcases` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `input_example` varchar(300) CHARACTER SET utf8 DEFAULT NULL,
  `output_example` varchar(5000) CHARACTER SET utf8 DEFAULT NULL,
  `problem_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2141 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `plass_testcases`
--

LOCK TABLES `plass_testcases` WRITE;
/*!40000 ALTER TABLE `plass_testcases` DISABLE KEYS */;
INSERT INTO `plass_testcases` VALUES (1,'50 10','5 0',1),(2,'17 5','3 2',1),(3,'32 6','5 2',1),(4,'117 10','11 7',1),(5,'62 51','1 11',1),(6,'85 9','9 4',1),(7,'9 4','2 1',1),(8,'46 60','0 46',1),(9,'78 8','9 6',1),(10,'110 3','36 2',1),(11,'abc','abcabcabcabcabc',2),(12,'1','11111',2),(13,'aD','aDaDaDaDaD',2),(14,'jay','jayjayjayjayjay',2),(15,'plass','plassplassplassplassplass',2),(16,'90','9090909090',2),(17,'%','%%%%%',2),(18,'77','7777777777',2),(19,'xyz','xyzxyzxyzxyzxyz',2),(20,'you','youyouyouyouyou',2),(21,'931111-1234567','28',3),(22,'881212-1154754','33',3),(23,'911211-2014454','26',3),(24,'970630-1190001','24',3),(25,'830321-2900212','38',3),(26,'810417-1244224','30',3),(27,'700605-2939393','41',3),(28,'610907-133888','50',3),(29,'070907-1239009','14',3),(30,'920506-1980999','29',3),(31,'931111-1234567','1',4),(32,'881212-1154754','0',4),(33,'911211-2014454','0',4),(34,'970630-1190001','1',4),(35,'830321-2900212','0',4),(36,'810417-1244224','0',4),(37,'700605-2939393','0',4),(38,'610907-133888','0',4),(39,'070907-1239009','1',4),(40,'920506-1980999','0',4),(41,' 10 15 27 3 5 6',' 10 15 27 3 5 6 20 30 49 6 10 12 ',5),(42,'2 4 5 19 3 5','2 4 5 19 3 5 4 8 10 38 6 10',5),(43,'10 34 5 7 14 10','10 34 5 7 14 10 20 68 10 14 28 20',5),(44,'8 3 10 33 45 21 1','8 3 10 33 45 21 1 16 6 20 66 90 42 2',5),(45,'7 3 28 39 2 1 2 31','7 3 28 39 2 1 2 31 14 6 56 78 4 2 4 62',5),(46,'98 12 3 54 23 11 3','98 12 3 54 23 11 3 196 24 6 108 46 22 6',5),(47,'9 3 1 23 45 6 4 19','9 3 1 23 45 6 4 19 18 6 2 46 90 12 8 38',5),(48,'8 4 2 10 2 31 12','8 4 2 10 2 31 12 16 8 4 20 4 62 24',5),(49,'2 4 7 3 6 5 1','2 4 7 3 6 5 1 4 8 14 6 10 2',5),(51,' 10 15 27 3 5 6',' 10 15 27 3 5 6 7',6),(52,'2 4 5 19 3 5','2 4 5 19 3 5 6',6),(53,'10 34 5 7 14 10','10 34 5 7 14 10 11',6),(54,'8 3 10 33 45 21 1','8 3 10 33 45 21 1 2',6),(56,'7 3 28 39 2 1 2 31','7 3 28 39 2 1 2 31 32',6),(57,'98 12 3 54 23 11 3','98 12 3 54 23 11 3 4',6),(58,'9 3 1 23 45 6 4 19','9 3 1 23 45 6 4 19 20',6),(59,'8 4 2 10 2 31 12','8 4 2 10 2 31 12 13',6),(60,'2 4 7 3 6 5 1','2 4 7 3 6 5 1 2',6),(61,' 10 15 27 3 5 6','27',7),(62,'2 4 5 19 3 5','19',7),(63,'10 34 5 7 14 10','34',7),(64,'8 3 10 33 45 21 1','45',7),(65,'7 3 28 39 2 1 2 31','39',7),(66,'98 12 3 54 23 11 3','98',7),(67,'9 3 1 23 45 6 4 19','45',7),(68,'8 4 2 10 2 31 12','31',7),(69,'2 4 7 3 6 5 1','7',7),(70,'9 10 13 4 12 4 5','13',7),(71,' 10 15 27 3 5 6','10 15 3 5 6',8),(72,'2 4 5 19 3 5','2 4 5 3 5',8),(73,'10 34 5 7 14 10','10 5 7 14 10',8),(74,'8 3 10 33 45 21 1','8 3 10 33 21 1',8),(75,'7 3 28 39 2 1 2 31','7 3 28 2 1 2 31',8),(76,'98 12 3 54 23 11 3','12 3 54 23 11 3',8),(77,'9 3 1 23 45 6 4 19','9 3 1 23 6 4 19',8),(78,'8 4 2 10 2 31 12','8 4 2 10 2 12',8),(79,'2 4 7 3 6 5 1','2 4 3 6 51',8),(80,'9 10 13 4 12 4 5','9 10 4 12 4 5',8),(81,'abcde	','A,B,C,D,E',9),(82,',aB',',,A,B',9),(83,'problem,','P,R,O,B,L,E,M,,',9),(84,'wada','W,A,D,A',9),(85,'planetmars','P,L,A,N,E,T,M,A,R,S',9),(86,'mik,kis','M,I,K,,K,I,S',9),(87,'tous,les,jours','TOUS,,LES,,JOURS',9),(88,'wawu','W,A,W,U',9),(89,'jay','J,A,Y',9),(90,'mE','M,E',9),(91,' you ',' you ',10),(92,'jay ','jzy ',10),(93,'water ','wzter',10),(94,'pzs','pzs',10),(95,'zbc ','zbc ',10),(96,'nobody','nobody',10),(97,'vba,    ','vbz,',10),(98,' why   ','why   ',10),(99,'bcaaa ','bczzz ',10),(100,'withz','withz',10),(101,'10','1 2 3 4 5 6 7 8 9 10',11),(102,'15','1 2 3 4 5 6 7 8 9 10 11 12 13 14 15',11),(103,'4','1 2 3 4 ',11),(104,'5','1 2 3 4 5',11),(105,'12','1 2 3 4 5 6 7 8 9 10 11 12',11),(106,'6','1 2 3 4 5 6',11),(107,'9','1 2 3 4 5 6 7 8 9',11),(108,'3','1 2 3',11),(109,'7','1 2 3 4 5 6 7 ',11),(110,'11','1 2 3 4 5 6 7 8 9 10 11',11),(111,'3 5 5 6 20','3  5 6 20',12),(112,'1 2 3 4 2','1 2 3 4',12),(113,'17 4  5 7 8','17 4 5 7 8',12),(114,'1 2 1 4 6','1 2 4 6',12),(115,'7 7 7 8 2','7 8 2',12),(116,'2 5 6 4 2','2 5 6 4',12),(117,'2 1 1 11 6','2 1 11 6',12),(118,'8 9 9 8 10','8 9 10',12),(119,'1 2 3 4 1','1 2 3 4',12),(120,'2 8 7 6 5','2 8 7 6 5',12),(121,'1 2 3 4 5','1 2 3 4 5',13),(122,'5 6 7 8 9','1 2 3 4 5  6 7 8 9',13),(123,'6 7 8 9 10','1 2 3 4 5 6 7 8 9 10',13),(124,'9 12 10 19 11','1 2 3 4 5 9 12 10 19 11',13),(125,'2 3 17 19 20','1 2 3 4 5 17 19 20',13),(126,'9 10 11 12 13','1 2 3 4 5 9 10 11 12 13',13),(127,'1 7 8 9 10','1 2 3 4 5 7 8 9 10',13),(128,'7 8 9 11 12','1 2 3 4 5 7 8 ',13),(129,'4 5 8  3 10','1 2 3 4 5 8 10',13),(130,'1 3 4 6 5','1 2 3 4 5 6',13),(131,' 4 5 6 7 8','-3 -2 -3 -3 -3',14),(132,' 2 4 6 8 1','-1 -2 -3 -1 5',14),(133,'1 2 3 4 5','0 0 0 0 0',14),(134,'1 3 5 7 5','0 -1 -2 -3 0',14),(135,'3 6 9 2 5','-2 -4 -6 2 0',14),(136,'4 8 1 9 0','-3 -6 2 -5 5',14),(137,'2 1 0 2 2','-1 1 3 2 3',14),(138,'1 2 4 3 5','0 0 -1 1 0',14),(140,'3 4 2 6 7','-2 -2 1 -2 -2',14),(141,'10','6',15),(142,'100','6 12 18 24 30 36 42 48 54 60 66 72 78 84 90 96',15),(143,'50','6 12 18 24 30 36 42 48',15),(144,'40','6 12 18 24 30 36',15),(145,'36','6 12 18 24 30 36',15),(146,'70','6 12 18 24 30 36 42 48 54 60 66',15),(147,'31','6 12 18 24 30',15),(148,'90','6 12 18 24 30 36 42 48 54 60 66 72 78 84 90 ',15),(149,'40','6 12 18 24 30 36',15),(150,'60','6 12 18 24 30 36 42 48 54 60',15),(151,'Ramen Steak Salad Ramen','Ramen',16),(152,'Soup Potato Soup','Soup',16),(153,'Hamburger Hamburger Hamburger','Hamburger',16),(154,'Pizza Icecream Pizza ','Pizza',16),(155,'soup friedrice Pizza Soup Friedrice',' friedrice',16),(156,'Ramen, Steak, Pizza, Pizza, Steak,  Pizza ','Pizza',16),(157,'Stiredpork, Yam, Spagetti, Spagetti',' Spagetti',16),(158,'Hamburger, Icecrea, Hamburger',' Hamburger',16),(159,'Potato, Yam, Soyabean, Yam','Yam',16),(160,'Stiredpork, Spagetti, Striedpork',' Striedpork',16),(161,'1 3 2 5 4 6','3 3',17),(162,'101 20 33 53 55 50','2 4',17),(163,'1 9 3 8 14 15','4 2',17),(164,'3 4 5 6 1 9 8 10 17 16','5 5',17),(165,'19 3 43 73 56 12','4 2',17),(166,'10 20 30 13 15 19 21 32 34 36','4 6',17),(167,'17 23 34 1 1 2 2','4 3',17),(168,'9 0 3 4 7 12 16','3 4',17),(169,'8 7 6 5 4 19 21 29 ','5 3',17),(170,'6 7 8 1 23 29 13','5 2',17),(171,'50','C',18),(172,'79','C',18),(173,'99','A',18),(174,'85','B',18),(175,'91','A',18),(176,'40','C',18),(177,'80','B',18),(178,'95','A',18),(179,'77','C',18),(180,'86','B',18),(181,'10 20 80 90','80 90',19),(182,'50 10 20 60 22 30','',19),(183,'80 100 90 20','80 100 90',19),(184,'50 70 91 83 107',' 91 83 107',19),(185,'80 19 29 102 34','80 102',19),(186,'30 97 99 30 20 51','97 99',19),(187,'30 47 58 86 10 29 ','86',19),(188,'90 95 100 29 39 45 89 84 91','90 95 100  89 84 91',19),(189,'50 67 47 65 38 75','',19),(190,'90 12 34 59 92 21','90 92',19),(191,'20 56 57 60 90 29 34','90',20),(192,'67 585 23 12 567 89 298','567',20),(193,'86 75 64 73 298 23 1005','1005',20),(194,'97 67 65 21 34 32 103 ','103',20),(195,'65 2 3 44 322 111 243 90 901 33','901',20),(196,'97 68 45 67 38 68 98 10 20 12','98',20),(197,'95 33 98 72 34 45 67 39 90 29','98',20),(198,'3 32 13 98 45 83 21 73 72 34 91 109','109',20),(199,'90 2002 22 123 212 3332 23 ','3332',20),(200,'200 330 22 123 344 55','344',20),(201,'19931111 19921213 20010405','1',21),(202,'18801211 19931111 20010405','0',21),(203,'19951310 19931111 19921213','0',21),(204,'19951132 19931111 19921213','0',21),(205,'19801211 19831211 20010905','1',21),(206,'19901211 1991111 20010416','0',21),(207,'19801211 18931111 20400405','0',21),(208,'19801211 19990811 20120405','1',21),(209,'19801211 19931311 20010415','0',21),(210,'19800221 19531111 20100405','1',21),(211,'5 6 7 8 9','1',22),(212,'4 2 3 4 5 3 2 5','0',22),(213,'-4 -5 -7 -3 -11','0',22),(214,'10 4 5 6','0',22),(215,'10 20 30 ','1',22),(216,'10 30 35 60 ','1',22),(217,'20 30 40 50 60','1',22),(218,'10 100 76 58 43 1','0',22),(219,'5 10 23 20 57','0',22),(220,'13 20 15 25','1',22),(221,'1 2 3 4 5 6 1','1',23),(222,'6 7 8 9 10 6 apple banana','1',23),(223,'85 278 name 89 name james water 282','1',23),(224,'20 30 40 others 50','0',23),(225,'no 19 23 hello 11','0',23),(226,'38 21 34 12 13 22','0',23),(227,'32 4544 312 123 1 33 1 13 33','1',23),(228,'90 13 342 1349 22 nmaer ','0',23),(229,'10 9 8 7 6 34 54','0',23),(230,'he som 726 221 33 we color som','1',23),(231,'10','2 3 5 7',24),(232,'100','2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97',24),(233,'50','2 3 5 7 11 13 17 19 23 29 31 37 41 43 47',24),(234,'40','2 3 5 7 11 13 17 19 23 29 31 37 ',24),(235,'13','2 3 5 7 11',24),(236,'56','2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53',24),(237,'20','2 3 5 7 11 13 17 19',24),(238,'32','2 3 5 7 11 13 17 19 23 29 31',24),(239,'45','2 3 5 7 11 13 17 19 23 29 31 37 41 43',24),(240,'17','2 3 5 7 11 13',24),(241,'10 5 3 2','20 10 6 4',25),(242,'0 -1 3 2','0 -2 6 4',25),(243,'1 2 3 4 5 6 7 8 9 10','2 4 6 8 10 12 14 16 18 20',25),(244,'30 20 40 100 60','60 40 80 200 120',25),(245,'71 23 45 90 30 18  20 10','142 46 90 180 60 36 40 20',25),(246,'5 10 15  20 25 30 35 40','10 20 30 40 50 60 70 80',25),(247,'3 6 9 12 15 18 21','6 12 18 24 30 36 42',25),(248,'23 39 20 35 38 76','46 78 40 70 76 152',25),(249,'89 67 28 89 20','196 134 56 178 40',25),(250,'100 200 300 400 500','200 400 600 800 1000',25),(251,'10 20 +','30',26),(252,'50 40 -','10',26),(253,'30 40 +','70',26),(254,'22 2 -','20',26),(255,'21 10 +','31',26),(256,'54 20 -','34',26),(257,'40 32 +','72',26),(258,'50 20 -','30',26),(259,'30 20 +','50',26),(260,'20 10 -','10',26),(261,'30 12 +','42',26),(262,'1','1',27),(263,'2','1',27),(264,'3','2',27),(265,'13','233',27),(266,'4','3',27),(267,'5','5',27),(268,'15','610',27),(269,'4','24',28),(270,'5','120',28),(271,'7','5040',28),(272,'1','1',28),(273,'3','6',28),(274,'6','720',28),(275,'9','362880',28),(276,'2','2',28),(277,'4','24',28),(278,'5','120',28),(279,'7','5040',28),(280,'10','3628800',28),(281,'8','40320',28),(282,'-100','-1',29),(283,'-321','-123',29),(284,'224','422',29),(285,'213','312',29),(286,'201','102',29),(287,'667','766',29),(288,'982','289',29),(289,'901','109',29),(290,'234','432',29),(291,'0','0',29),(292,'III','3',30),(293,'XI','11',30),(294,'LVII','57',30),(295,'IX','9',30),(296,'IV','4',30),(297,'VI','6',30),(298,'LV','50',30),(299,'LVI','51',30),(300,'XII','12',30),(301,'[aaa]','1',31),(302,'(a)d[b]{c}','1',31),(303,'(abcd)','1',31),(304,'(a]','0',31),(305,'([a)]','0',31),(306,'{(ab)]','0',31),(307,'[{[a]()}]','1',31),(308,'((p)','0',31),(309,'{{place]}','0',31),(310,'Go(r)d','1',31),(311,'HI MA','MA',32),(312,'Hello world.','word',32),(313,'This is a sentence','sentence',32),(314,'Python','Python',32),(315,'why do you?','you',32),(316,'some people dont work!!','work',32),(317,'hello?','hello',32),(318,'ben is home','homee',32),(319,'malitia','malitia',32),(320,'so so so','o',32),(321,'10 12 5 4 7 3','5 7',33),(322,'1 99 -1 3 0','1',33),(323,'1 1 2 2 0','1',33),(324,'59 2 8 39 22 20','20 22',33),(325,'19 4 5 2 9','5',33),(326,'2 7 4 5 6 1','4  5',33),(327,'11 3 44 19 1','11',33),(328,'4 0 11 1 3 2','2 3',33),(329,'9 3 4 5 2 1','3 4',33),(330,'7 5 6 1 9 8 18','7',33),(331,'3 4 5 6 7','3 4 5 6 7 6 8 10 12 14',34),(332,'10 15 5 4 7 3','10 15 5 4 7 3 20 30 10 8 14 6',34),(333,'3 4 9 2 1 17','3 4 9 2 1 17 6 8 18 4 2 34',34),(334,'8 16 2 9 10 3','8 16 2 9 10 3 16 32 4 18 20 6',34),(335,'7 4 2 3 21 90','7 4 2 3 21 90 14 8 4 6 42 180',34),(336,'1 99 -1 3 0','1 99 -1 3 0 2 198 -2 6 0',34),(337,'4 5 3','4 5 3 8 10 6',34),(338,'19 3 20 34','19 3 20 34 38 6 40 68',34),(339,'12 1 20 27','12 1 20 27 24 2 40 54',34),(340,'2 4 5 6 ','2 4 5 6 4 8 10 12',34),(341,'10 15 5 4 7 3','10 4',35),(342,'1 99 1 3 5','',35),(343,'33 2 5 1 4','2 4',35),(344,'5 6 8 9 10','6 8 10',35),(345,'11 100 34 27 19','100 34',35),(346,'30 27 11 2 5 9','30 2',35),(347,'39 23 45 28 12 2','28 12 2',35),(348,'19 26 30 48 17','26 30 48',35),(349,'29 31 99 101 ','  ',35),(350,'2 4 5 3 7 19 30','2 4 30',35),(351,'9 7 8 5 1','8',35),(352,'abcde','A,B,C,D,E',36),(353,',aB\n',',,A,B',36),(354,'help','H,E,L,P',36),(355,'problem,\n','P,R,O,B,L,E,M,,',36),(356,'wada\n','W,A,D,A',36),(357,'planetmars\n','P,L,A,N,E,T,M,A,R,S',36),(358,'mik,kis\n\n','M,I,K,,K,I,S',36),(359,'wawu\n','W,A,W,U',36),(360,'jay\n','J,A,Y',36),(361,'plass@yahoo.com','plassyahoo.com',37),(362,'   #naver','naver',37),(363,'    hash-tag','hashtag',37),(364,'pointer*','pointer',37),(365,'main&','main',37),(366,'nothing','nothing',37),(367,'%g%ave','gave',37),(368,'prodis##','prodis',37),(369,'jay@me','jayme',37),(370,'...hello','hello',37),(371,'1 2 3 4 5 6 7','1 2 4 5 3 6 7',38),(372,'1 2 3 4 5 6 7 8 9','1 2 4 8 9 5 3 6 7',38),(373,'1 4 5 6 7 9 11','1 4 6 7 5 9 11',38),(374,'1 10 3 4 5 11 13','1 10 4 5 3 11 13',38),(375,'1 3 5 7 9 10 15','1 3 7 9 5 10 15',38),(376,'10 20 30 40 50 60 70','10 20 40 50 30 60 70',38),(377,'3 5 7 9 11 13 15','3 5 9 11 7 13 15',38),(378,'5 10 15 20 25 30 35','5 10 20 25 15 30 35',38),(379,'1 3 4 5 6 7 8','1 3 5 6 4 7 8',38),(380,'2 4 6 8 10 12 14 16 18','2 4 8 19 18 10 6 12 14',38),(381,'1 2 2 3 4 4 3','1',39),(382,'3 5 2 3 2 4 2 2 4 3 2 1 4 2 3','0',39),(383,'3 3 4 5 6 6 9','0',39),(384,'3 4 4 7 9 9 5','1',39),(385,'3 2 2 4 3 3 4 4','1',39),(386,'5 6 2 1 3 5 7 8','0',39),(387,'1 9 3 4 2 3','0',39),(388,'1 4 4 3 5 5 9 9','1',39),(389,'3 2 2 1 2 2 3','1',39),(390,'4 5 6 3 1 9 9 0','0',39),(391,'aa a','0',40),(392,'aa a*','1',40),(393,'ab .*','1',40),(394,'aab c*a*b','1',40),(395,'bcb b','0',40),(396,'bba c*b*a','1',40),(397,'cc c','0',40),(398,'bc .*','1',40),(399,'cc c*','1',40),(400,'cdc d','0',40),(401,'149 79','44.1  179.13',41),(402,'160 50','54 92.59',41),(403,'190 123','81 151.85',41),(404,'175 87',' 67.5  128.88',41),(405,'160 78','54 144.44',41),(406,'190 98','81 120.98',41),(407,'181 98',' 72.9  134.43',41),(408,'185 76',' 76.5   99.34',41),(409,'156 67 ','50.4  132.93',41),(410,'172 87','64.8  134.25',41),(411,'10 30 20','30 22.36',42),(412,'4 5 6','7.5 4.55',42),(413,'9 12 20','20.5 14.30',42),(414,'10 10 10','15 8.66',42),(415,'3 6 10','9.5   7.39',42),(416,'7 21 3','15.5 16.08',42),(417,'9 8 7','12   7.07',42),(418,'2 4 6','6  4.47',42),(419,'3 10 15','14  11.74',42),(420,'4 5 7','8 5.09',42),(421,'10 12 13 ','17.5  10.33',43),(422,'4 5 6','7.5 4.55',43),(423,'10 20 30','30  22.36',43),(424,'15 25 35 ','37.5 25.86',43),(425,'100 20 10','65 79.21',43),(426,'10 20 35','32.5  25.86',43),(427,'34 32 18','42  27.20',43),(428,'12 24 48','42 35.49',43),(429,'75 25 65 ','82.5 60.57',43),(430,'2 17 12','15.5  14.02',43),(431,'3 4 10','29296875',44),(432,'5 6 4','12005',44),(433,'4 12 5','1485172',44),(434,'6 7 8',' 100663296',44),(435,'2 4 5','6250',44),(436,'3 6 9','121060821',44),(437,'9 7 1','72',44),(438,'4 12 3 ','8788',44),(439,'3 1 2','12',44),(440,'20 1 1','40',44),(441,'30 ','86',45),(442,'23 ','73.4',45),(443,'50','122',45),(444,'40','104',45),(445,'100','212',45),(446,'21','69.8',45),(447,'65','149',45),(448,'0','32',45),(449,'75','167',45),(450,'52','125.6',45),(451,'12 10 2','24 1.46',46),(452,'20 13 3','36 2.17',46),(453,'20 30 40','90 9.23',46),(454,'6 16 300','322 4.30',46),(455,'2 3 4','9  0.92',46),(456,'457 80 7 ','544  6.34',46),(457,'30 23 10 ','63  5.65',46),(458,'4 5 6','15  1.62',46),(459,'10 50 100 ','160 7.69',46),(460,'9 18 36','63 5.14',46),(461,'7','1436.75  615.75',47),(462,'8',' 2144.66  804.24',47),(463,'9','3053.62 1017.87',47),(464,'10','4188.78  1256.63',47),(465,'11','5575.27  1520.53',47),(466,'12','7238.22  1809.55',47),(467,'13','9202.77 2123.71',47),(468,'14','11494.03   2463.00',47),(469,'15','14137.16  2827.43',47),(470,'20','33510.31  5026.54',47),(471,'1600','1',48),(472,'2000','1',48),(473,'1997','0',48),(474,'1990','0',48),(475,'2007','0',48),(476,'1800','1',48),(477,'2020','1',48),(478,'1990','0',48),(479,'2016','1',48),(480,'2015','0',48),(481,'199706310','9',49),(482,'186707280','8',49),(483,'166705280','7',49),(484,'200305160','5',49),(485,'201007230','7',49),(486,'200901160','9',49),(487,'200101010','2',49),(488,'200310100','3',49),(489,'170910010','9',49),(490,'16000523','6',49),(491,'1','*',50),(492,'2','*<br>**',50),(493,'3','*<br>**<br>***',50),(494,'4','*<br>**<br>***<br>****',50),(495,'5','*<br>**<br>***<br>****<br>*****',50),(496,'6','*<br>**<br>***<br>****<br>*****<br>******',50),(497,'7','*<br>**<br>***<br>****<br>*****<br>******<br>*******',50),(498,'8','*<br>**<br>***<br>****<br>*****<br>******<br>*******<br>********',50),(499,'9','*<br>**<br>***<br>****<br>*****<br>******<br>*******<br>********<br>*********',50),(500,'10','*<br>**<br>***<br>****<br>*****<br>******<br>*******<br>********<br>*********<br>**********',50),(1004,'PAPA','1',101),(1005,'DavE','0',101),(1006,'EVE','1',101),(1007,'green','0',101),(1008,'teeth','0',101),(1009,'GAG','1',101),(1010,'nun','1',101),(1011,'1 2 3 4 5','1 5 2 4 3',102),(1012,'2 4 6 8 10','2 10 4 8 6',102),(1013,'3 6 9 12 15','3 15 6 12 9',102),(1014,'10 20 30 40 ','10 40 20 30',102),(1015,'0 1 2 3 4','0 4 1 3 2',102),(1016,'1 4 5 6 7','1 7 4 6 5',102),(1017,'11 22 33 44 55','11 55 22 44 33',102),(1018,'2 1 3 5 7','1 7 3 5 ',102),(1019,'9 1 2 3 1','1 1 2 3',102),(1020,'21 23 4 2 5','21 5 23 2 4',102),(1021,'2  3 4 5 6 7','18',103),(1022,'60 10 40 20 30 50 ','130',103),(1023,'0 1 2 3 6 8 ','14',103),(1024,'4 7 8 3 5 6','21',103),(1025,'4 5 1 2 3 0','12',103),(1026,'19 10 2 8 3 1','29',103),(1027,'2 3 4 5 6 7','18',103),(1028,'3 4 5 6 3 1','11',103),(1029,'1  8 9 1 1','17',103),(1030,'0 0 0 0 0 0','0',103),(1031,'2 4 6 8','8 2 4 6',104),(1032,'3 6 9 12','12 3 6 9',104),(1033,'1 3 5 7','7 1 3 5',104),(1034,'10 20 30 40','40 10 20 30',104),(1035,'11 22 33 44','44 11 22 33',104),(1036,'12 24 32 44','44 12 24 32',104),(1037,'6 12 18 36','36 6 12 18 ',104),(1038,'1 20 12 3','3 1 20 12',104),(1039,'3 9 5 6','6 3 9 5',104),(1040,'21 1 23 4','4 21 2 23 ',104),(1041,'10','1',105),(1042,'16','1',105),(1043,'8','1',105),(1044,'15','0',105),(1045,'21','0',105),(1046,'48','0',105),(1047,'24','0',105),(1048,'45','1',105),(1049,'23','0',105),(1050,'9','1',105),(1051,'100','217',106),(1052,'32','63',106),(1053,'50','93',106),(1054,'30','72',106),(1055,'20','42',106),(1056,'10','18',106),(1057,'70','144',106),(1058,'80','186',106),(1059,'90','234',106),(1060,'42','96',106),(1061,'27','1',107),(1062,'64','1',107),(1063,'21','0',107),(1064,'65','0',107),(1065,'12','0',107),(1066,'125','1',107),(1067,'1000','1',107),(1068,'84','0',107),(1069,'31','0',107),(1070,'216','1',107),(1071,'2 3 4 5','68',108),(1072,'1 2 3 4','46',108),(1073,'1 1 1 0','21',108),(1074,'2 3 5 4','77',108),(1075,'3 6 1 1','47',108),(1076,'1 2 3 9','51',108),(1077,'9 0 1 0','100',108),(1078,'1 0 2 0','30',108),(1079,'9 1 1 9','110',108),(1080,'1 4 1 4','28',108),(1081,' 2 3 4 5','5432',109),(1082,'1 2 3 4','4321',109),(1083,'2 5 7 2','7522',109),(1084,'1 2 1 4','4211',109),(1085,'9 2 3 4','9432',109),(1086,' 0 1 0 1','1100',109),(1087,'8 3 4 1','8431',109),(1088,'9 3 2 1','9321',109),(1089,'1 8 3 4','8431',109),(1090,'1 0 9 0','9100',109),(1091,'Hello\n<br> \nJay!\r ','Hello',110),(1092,'Plass<br>\r \n\nwhat ','Plass',110),(1093,'Greedy<br>\n Al..','Greedy',110),(1094,'Hi <br>\nWorld\r ','World',110),(1095,'orange<br>\r blue','orange',110),(1096,'really<br> \nwork.\r ','really',110),(1097,'i miss <br> i cried',' i cried',110),(1098,'its eight<br>\nyes i know!!!!','yes i know!!!!',110),(1099,'Hold on <br>\nDon\'t talk to me','Don\'t talk to me',110),(1100,'Leave<br>\nHi','Leave',110),(1101,'more pe ab','4',111),(1102,'jay brrrr','5',111),(1103,'java c++ clang','5',111),(1104,'bd dddd ffddddd','7',111),(1105,'sjb sssfff','6',111),(1106,'dddgj ddd','5',111),(1107,'dsf weg gdg gdwyrs egd','6',111),(1108,'tet edsg','4',111),(1109,'djhdbj dsdjbnk sdkn','7',111),(1110,'yfy dgz sdgas','5',111),(1111,'Hey its me','7',112),(1112,'Hello World','7',112),(1113,'They dont know','9',112),(1114,'people leave','7',112),(1115,'Come over','7',112),(1116,'Just say yes','9',112),(1117,'Believe in you','11',112),(1118,'Take me ','5',112),(1119,'i had a good day','10',112),(1120,'How was your day?','12',112),(1121,'1 2 3 4 5','15',113),(1122,'2 4 6 8 10','30',113),(1123,'1 3 5 7','16',113),(1124,'3 6 9 12','30',113),(1125,'10 20 30 40','100',113),(1126,'2 3 4 5 6 7 8 ','35',113),(1127,'4 8 16 ','28',113),(1128,'9 14 36 20','79',113),(1129,'9 44 11 2','68',113),(1130,'34 36 21 20','111',113),(1131,'4 3 5 9 11','16 9 25 81 121',114),(1132,'1 5 7 2 0 ','1 25 49 4 0',114),(1133,'2 4 6 8 10','4 16 36 64 100',114),(1134,'2 4 6 1 3','4 8 36 1 9',114),(1135,'4 8 2 2','16 64 4 4',114),(1136,'1 5 0 3 10','1 25 0 9 100',114),(1137,'3 2 1 6','9 4 1 36',114),(1138,'1 3 7 9','1 9 49 81',114),(1139,'7 4 1 0','49 16 1 ',114),(1140,'3 5 7 9','9 25 49 81',114),(1141,'1050','1151',115),(1142,'2310','2311',115),(1143,'6722','6722',115),(1144,'2800','2811',115),(1145,'382010','382111',115),(1146,'8344420','8344421',115),(1147,'00000','11111',115),(1148,'393032','393132',115),(1149,'3922','3922',115),(1150,'010','111',115),(1151,'((()))','3',116),(1152,'(((())))','4',116),(1153,'(())()','3',116),(1154,'((())(()))()','6',116),(1155,'()))','0',116),(1156,'()))() ','0',116),(1157,'(())(( ))','4',116),(1158,'()() (())) ()()','0',116),(1159,'(()) () ()','4',116),(1160,'(() ( (())))','5',116),(1161,'())()','1',117),(1162,'()))','2',117),(1163,'(Can)) i change)e)','3',117),(1164,'()(Is) ((everything))) ()(okay))','2',117),(1165,'(Help is on the) ((((way)','3',117),(1166,'((Developer) ((((((made ((this))))','5',117),(1167,'()))(Java) is easy','2',117),(1168,'(((Bread))) (is))))) ((good))','4',117),(1169,'(((It is))) ((going (the )(other) way)))','1',117),(1170,'(it) (((doesnt ((mean)))','2',117),(1171,'developer@gm.co','1',118),(1172,'sxjn@yahhoo.org','1',118),(1173,'Dc@marvel..com','0',118),(1174,'can@@gma.com','0',118),(1175,'computer@h.c','1',118),(1176,'Desperate@hue.com','0',118),(1177,'can@@gma.com','0',118),(1178,'contribute@plass.co','1',118),(1179,'helloworld@gmail.com','1',118),(1180,'programmer@c..com','0',118),(1181,'2 3 4','2',119),(1182,'10 9 1','10',119),(1183,'2 4 5','3',119),(1184,'1 3 7','6',119),(1185,'2 5 6','4',119),(1186,'1 3 1','4',119),(1187,'9 8 4','5',119),(1188,'6 3 2','4',119),(1189,'1 0 3','4',119),(1190,'1 2 2','1',119),(1191,'2 3 4 5','5 4 3 2',120),(1192,'22 11 44 33','44 33 22 11',120),(1193,'9 7 5 3','9 7 5 3',120),(1194,'8 4 6 2','8 6 4 2',120),(1195,'25 15 20 5 10','25 20 15 10 5',120),(1196,'26 7 2 40','40 26 7 2',120),(1197,'1 6 3 4 9','9 6 4 3 1',120),(1198,'8 3 1  5 4 ','8 5 4 3 1',120),(1199,' 1 0 7 2',' 7 2 1 0',120),(1200,'7 1 2 8 12','12 8 7 2 1',120),(1201,'break creak neck','k',121),(1202,'hello golo melo','lo',121),(1203,'abcd bcd cd','cd',121),(1204,'low mow gow','ow',121),(1205,'water migh ssh','0',121),(1206,'brea nea wea','ea',121),(1207,'hear near gear','ear',121),(1208,'what la ns','0',121),(1209,'men nen gen','en',121),(1210,'developer undercoper','oper',121),(1211,'9 2 1 2','1229',122),(1212,'8 4 3 7','3478',122),(1213,'8 3 4 1','1348',122),(1214,'9 2 3 4','2349',122),(1215,'2 5 7 2','2257',122),(1216,'2 3 4 5','2345',122),(1217,'7 3 4 2','2347',122),(1218,'1 6 2 1','1126',122),(1219,'7 3 1 2','1237',122),(1220,'8 7 2 1','1278',122),(1221,'145','151',123),(1222,'231','232',123),(1223,'120','121',123),(1224,'100','101',123),(1225,'45','55',123),(1226,'310','313',123),(1227,'201','202',123),(1228,'102','121',123),(1229,'301','303',123),(1230,'170','171',123),(1231,'10','A',124),(1232,'11','B',124),(1233,'345','159',124),(1234,'44332','AD2C',124),(1235,'1222','4C6',124),(1236,'13091','3323',124),(1237,'224','E0',124),(1238,'120','78',124),(1239,'100','64',124),(1240,'108','6C',124),(1241,'Good Day ','gOOD dAY',125),(1242,'Hello World','hELLO wORLD',125),(1243,'BACK aGAIN','back Again',125),(1244,'how can I HELP YOU','HOW CAN i help you',125),(1245,'break iT Now','BREAK It nOW',125),(1246,'C# IS INterSTING','c# is inTERsting ',125),(1247,'algorithm over JAVA','ALGORTITHM OVER java',125),(1248,'THumB COFFee','thUMb coffEE',125),(1249,'DrinkwATER','dRINKWater',125),(1250,'PEople Always LEAVE','peOPLE aLWAYS leave',125),(1251,'3 aa','aaaaaa',126),(1252,'4 java','javajavajavajava',126),(1253,'3 CCC','CCCCCCCCC',126),(1254,'2 break','breakbreak',126),(1255,'5 abcd','abcdabcdabcdabcdabcd',126),(1256,'3 rrr','rrrrrrrrr',126),(1257,'2 press','presspress',126),(1258,'1 water','water',126),(1259,'6 nbn','nbnnbnnbnnbnnbnnbn',126),(1260,'2 jare','jarejare',126),(1261,'10','0',127),(1262,'5','1',127),(1263,'7','0',127),(1264,'144','1',127),(1265,'233','1',127),(1266,'8','1',127),(1267,'15','0',127),(1268,'610','1',127),(1269,'27','0',127),(1270,'14','0',127),(1271,'950','1',128),(1272,'321','1',128),(1273,'70','1',128),(1274,'90','1',128),(1275,'100','0',128),(1276,'210','1',128),(1277,'310','1',128),(1278,'150','0',128),(1279,'322','0',128),(1280,'56','0',128),(1281,' 2 3 4','3',129),(1282,'3 6 9 ','6',129),(1283,'2 4 6 8','6',129),(1284,'1 2 3 4','3',129),(1285,'9 10 11 ','10',129),(1286,'6 3 2 1','4',129),(1287,'9 2 1 3','5',129),(1288,'7 21 9 ','12',129),(1289,'3 4 6 1','4',129),(1290,'9 3 2 1','5',129),(1291,'798','978',130),(1292,'342','432',130),(1293,'398','983',130),(1294,'4554','5454',130),(1295,'736','763',130),(1296,'39221','93221',130),(1297,'73324','74332',130),(1298,'83628','88623',130),(1299,'37344','73344',130),(1300,'2387','8327',130),(1301,'apple apps ape','ap',131),(1302,'having helicopter horse','h',131),(1303,'Hill Bill Gill','0',131),(1304,'hawaii happy','h',131),(1305,'lettter reste bee','0',131),(1306,'What Where Why','Wh',131),(1307,'dog docker dollar','do',131),(1308,'battery butter read','b',131),(1309,'Hello Hear Heist','He',131),(1310,'Money Morning Most','Mo',131),(1311,'make it better','MakE IT  betteR',132),(1312,'present for you','PresenT FoR YoU',132),(1313,'cancel it james','CanceL IT JameS',132),(1314,'programming','ProgramminG',132),(1315,'java','JavA',132),(1316,'abcde','AbcdE',132),(1317,'water','WateR',132),(1318,'developer','DevelopeR',132),(1319,'word','WorD',132),(1320,'july','JulY',132),(1321,'13','1 1 2 3 5 8',133),(1322,'21','1 1 2 3 5 8 13',133),(1323,'22','0',133),(1324,'34','1 1 2 3 5 8 13 21',133),(1325,'377','1 1 2 3 5 8 13 21 34 55 89 144 233 ',133),(1326,'89','1 1 2 3 5 8 13 21 34 55',133),(1327,'90','0',133),(1328,'144','1 1 2 3 5 8 13 21 34 55 89',133),(1329,'233','1 1 2 3 5 8 13 21 34 55 89 144',133),(1330,'5','1 1 2 3',133),(1331,'73 37 2 3 213  30','2 3 30 37 73 213',134),(1332,'36 20 0 2 3 4','0 2 3 4 20 36',134),(1333,'72 0 12 2 1 22','0 1 2 12 22 72',134),(1334,'2 14 7 27 0 8 9 12','0 2 7 8 9 12 14 27',134),(1335,'21 3 8 12 2 9','2 3 8 9 12 21 ',134),(1336,'29 242 2 333 21 9 8 ','2 8 9 21 29 242 333',134),(1337,'72 12 123 11 2 3 43','2 3 11 12 43 72 123',134),(1338,'1 98 27 23 10 11 20 34','1 10 11 20 23 34 27 98',134),(1339,'45 12 19 23 1 0 10 11 ','0 1 10 11 12 19 23 44',134),(1340,'9 8 1','1 8 9',134),(1341,'2 3 4 5 6 7','6',135),(1342,'10 20 30 40 50 60 ','55',135),(1343,'0 1 2 4 6 8 ','7',135),(1344,'0 1 3 6 9 12','7',135),(1345,' 11 22 33 44 55 66','93',135),(1346,'0 1 3 4 5 1 ','3',135),(1347,'0 1 2 6 7 9','8',135),(1348,'0 0 3 2 1 7','5',135),(1349,'9  0 8 7 1','8',135),(1350,'7 4 3 5','4',135),(1351,'2 4 5 6 ','3',136),(1352,'3 6 7 9 10','2',136),(1353,'10 11 2 35 ','2',136),(1354,'7 8 39 21','1',136),(1355,'7 47 49 37 3','0',136),(1356,'90 37 2 3','2',136),(1357,'5 6 7 9 ','1',136),(1358,'7 6 4 4 ','3',136),(1359,' 5 7 3 23 ','0',136),(1360,'9 10 2 2','3',136),(1361,'2 4 5 6 ','1',137),(1362,'3 6 7 9 10','3',137),(1363,'10 11 2 35 ','2',137),(1364,'7 8 39 21','3',137),(1365,'7 47 49 37 3','4',137),(1366,'90 37 2 3','2',137),(1367,'2 4 6 8','0',137),(1368,' 5 7 3 23 ','4',137),(1369,'9 10 2 2','1',137),(1370,'7 6 4 4 ','1',137),(1371,'(3 * 4) / 2','6',138),(1372,'5 + 6 - (2 / 2) * 2','9',138),(1373,'7%3 +  2 -1','2',138),(1374,'4 * 9 /2 + 10 -2','26',138),(1375,'(9 * 8) / 4 - 10 ','8',138),(1376,'5 + 4 +10 +10 -19 ','10',138),(1377,'4 * 8 * 8 /4','64',138),(1378,'4 + 4 * 4','20',138),(1379,'5 * 2 /2 -2','3',138),(1380,'9 * 3 * 3','81',138),(1381,'1234567','1,234,567',139),(1382,'100','100',139),(1383,'3303','3,303',139),(1384,'100002000','100,002,000',139),(1385,'70000','70,000',139),(1386,'134500','134,500',139),(1387,'5432000','5,432,000',139),(1388,'43210','43,210',139),(1389,'109000','109,000',139),(1390,'234','234',139),(1391,'4 5','7',140),(1392,'3 9','10',140),(1393,'10 11','1',140),(1394,'2 9','11',140),(1395,'4 7','3',140),(1396,'1 8','9',140),(1397,'3 5','11',140),(1398,'5 8','13',140),(1399,'3 6','5',140),(1400,'1 10','11',140),(1401,'8512#16#','help',141),(1402,'16#18#15#718#113#','program',141),(1403,'16#119#19#23#15#18#4','password',141),(1404,'23#914#20#518#','winter',141),(1405,'18#5618#519#8','refresh',141),(1406,'4918#5320#','direct',141),(1407,'16#18#15#15#6','proof',141),(1408,'312#5118#','clear',141),(1409,'315#14#6918#13#','confirm',141),(1410,'45312#914#5','decline',141),(1411,'dvdj\"dh\"','dh',142),(1412,'ada\"afa\"Afaf','afa',142),(1413,'\"hell\"0','hell',142),(1414,'work//d\"ge\"','ge',142),(1415,'dasga\"npm\"sfafg','npm',142),(1416,'\"aga\"','aga',142),(1417,'agasdfs\"asdfsf\"','asdfsf',142),(1418,'aagadjgd\"djkbd\"','djkbd',142),(1419,'\"fgiho\",,,,,','fgiho',142),(1420,'aga','',142),(1421,'(e(moh)og)','gohome',143),(1422,'(e(reh)w)','where',143),(1423,'m(li)e','mile',143),(1424,'((uoy)ssimi)','imissyou',143),(1425,'(u(etah)i)','ihateu',143),(1426,'(ekam)way','makeway',143),(1427,'its(eila)','itsalie',143),(1428,'((owt)(rof)meal)','mealfortwo',143),(1429,'(ert)at(well(uoy))','(ert)at(well(uoy))',143),(1430,'((enod)sti)','itsdone',143),(1431,'2 4 5 6','4',144),(1432,'10 7 8 12','49',144),(1433,'3 6 7 9','9',144),(1434,'10 20 30 40','100',144),(1435,'7 6 5 ','25',144),(1436,'4 37 3 90','16',144),(1437,'2 7 18 1','1',144),(1438,'19 20 8 12','64',144),(1439,'26 7 8 9','36',144),(1440,'12 34 22 123','144',144),(1441,'0','1',145),(1442,'1','1 1',145),(1443,'2','1 2 1',145),(1444,'3','1 3 3 1',145),(1445,'4','1 4 6 4 1',145),(1446,'5','1 5 10 10 5 1',145),(1447,'6','1 6 15 20 15 6 1',145),(1448,'7','1 7 21 35 35 21 7 1',145),(1449,'8','1 8 28 56 70 56 28 8 1',145),(1450,'9','1 9 36 84 126 126 84 36 9 1',145),(1451,'\r1 10 20  \r \n3 20 30','2 10 10',146),(1452,'5 0 0 4 0 0','1 0 0',146),(1453,'2 30 0 1 30 0','1 0 0',146),(1454,'3 45 15 \n2 17 34','2 32 19',146),(1455,'5 16 23   \n2 30 10','3 13 47',146),(1456,' 5 45 30 \n 3 40 50\n','3 55 20',146),(1457,' 4 30 20 \n 3 30 10','1 1 50',146),(1458,'3 20 20 \n2 20 20','1 0 0',146),(1459,'12 45 45\n11 30 30','2 44 45',146),(1460,'3 30 30\n 2 30 15','1 1  45',146),(1461,'3 4 6 1 2 0 10 12 5 19','0 1 2 3 4 5 6 10 12 19',147),(1462,'83 2 21 23 9 3','2 3 9 21 23 83',147),(1463,'20 10 40 50 70 60','10 20 40 50 60 70',147),(1464,'4 6 2 8 16 14 12','2 4 6 8 12 14 16',147),(1465,'3 5 1 9 11 7 15','1 3 5 7 9 11 15',147),(1466,'11 33 44 22 99 77 66','11 22 33 44 66 77 99',147),(1467,'32 20 19 40 71 93 11 0','0 11 19 20 32 40 71 93',147),(1468,'15 35 25 5 1 10 45','1 5 10 15 25 35 45',147),(1469,'21 7 49 78 81 14','7 14 21 49 78 81',147),(1470,'8 65 3 20 32 81 91','3 8 20 32 65 81 91',147),(1471,'A','1',148),(1472,'1','0',148),(1473,'S','1',148),(1474,'T','1',148),(1475,'2','0',148),(1476,'4','0',148),(1477,'5','0',148),(1478,'Y','1',148),(1479,'U','1',148),(1480,'P','1',148),(1481,'name','1',149),(1482,'2sec','0',149),(1483,'all_money','1',149),(1484,'@color','0',149),(1485,'shapeSize','1',149),(1486,'size_of_circle','1',149),(1487,'circleName','1',149),(1488,'&age','0',149),(1489,'?a','0',149),(1490,'c D','0',149),(1491,'un__2','2',150),(1492,'q2q-w','2',150),(1493,'np4','4',150),(1494,'0ss','0',150),(1495,'vm4','4',150),(1496,'12512','1',150),(1497,'gnbk3','3',150),(1498,'kl5jbn','5',150),(1499,'3','3',150),(1500,'nbk8q5','8',150),(1501,'cacv','3',151),(1502,'cccc','1',151),(1503,'programmingbank','12',151),(1504,'acc','2',151),(1505,'cwwa','3',151),(1506,'avd','3',151),(1507,'qqqqq','1',151),(1508,'zxcb','4',151),(1509,'gwgweg','3',151),(1510,'qazwsx','6',151),(1511,'10 2','1',152),(1512,'11 2','0',152),(1513,'39 4','0',152),(1514,'50 10','1',152),(1515,'8 6','0',152),(1516,'12 2','1',152),(1517,'59 59','1',152),(1518,'49 7','1',152),(1519,'39 2','0',152),(1520,'88 77','0',152),(1521,'(developer)','repoleved',153),(1522,'(Direct num)','mun tceriD',153),(1523,'(Messenger)','regnesseM',153),(1524,'(avaJ nraeL)','Learn Java',153),(1525,'(ab)','ba',153),(1526,'(ab(cd))','cdba',153),(1527,'(abc)','cab',153),(1528,'(abc)(csa)','cbaasc',153),(1529,'()','',153),(1530,'(d(foo))','food',153),(1531,'125u12905u09a','10',154),(1532,'gg83g938128451','9',154),(1533,'auha948th34gkgjlah','13',154),(1534,'3289yghskjehknl2','5',154),(1535,'294hg3h3a2iueh128h','10',154),(1536,'940g24gkjnvljsan1','10',154),(1537,'12hg2h23uih23ifuhjaklfn','4',154),(1538,'ohbekjsbnk43082','6',154),(1539,'3oit13tn13on12en','5',154),(1540,'11','2',154),(1541,'_spring','Spring',155),(1542,'java','java',155),(1543,'_p_y_t_h_o_n','PYTHON',155),(1544,'an_t','anT',155),(1545,'ant_','ant',155),(1546,'pupp_le','puppLe',155),(1547,'angel','angel',155),(1548,'a_ngel','aNgel',155),(1549,'stu_d_y','stuDY',155),(1550,'kin_g','kinG',155),(1551,'spring','i',156),(1552,'luck','uc',156),(1553,'play','la',156),(1554,'smile','i',156),(1555,'iu','iu',156),(1556,'small','a',156),(1557,'o','o',156),(1558,'king','in',156),(1559,'pool','oo',156),(1560,'solng','l',156),(1561,'o3o','1',157),(1562,'L0L','1',157),(1563,'0O0','1',157),(1564,'acc','0',157),(1565,'q-q','1',157),(1566,'cwww','0',157),(1567,'bb','1',157),(1568,'b2c','1',157),(1569,'99999999','1',157),(1570,'s___222222','0',157),(1571,'2 4 6 8 ','0',158),(1572,'1 2 3 4','3',158),(1573,'2 3 5 7 9','3 5 7 9',158),(1574,'11 22 31 5','11 31 5',158),(1575,'10 29 11 13',' 29 11 13',158),(1576,'20 14 16 17','17',158),(1577,'31 23 45 19','31 23 45 19',158),(1578,'90 12 3 4','3',158),(1579,'19 2 3 4 5','19 3 5',158),(1580,'70 21 2 1 23','21 1 23',158),(1581,'k','K',159),(1582,'a','A',159),(1583,'p','P',159),(1584,'l','L',159),(1585,'b','B',159),(1586,'s','S',159),(1587,'q','Q',159),(1588,'t','T',159),(1589,'m','M',159),(1590,'n','N',159),(1591,'2 58 3 2 4','56',160),(1592,'2 3 4 5 6 7','5',160),(1593,'3 6 9 12 15','12',160),(1594,'10 20 30 40 50','40',160),(1595,'5 10 15 20 25','20',160),(1596,'7 14 21 28','21',160),(1597,'9 18 36 48 50','41',160),(1598,'5 43 21 8 10','38',160),(1599,'1 5 7 8 19 2','18',160),(1600,'4 3 1 23 2 10','22',160),(1601,'1 3 5 7','a c e g',161),(1602,'2 4 6 8','b d f h',161),(1603,'1 2 3 4','a b c d',161),(1604,'4 5 10 1','d e j a',161),(1605,'10 20 12 22','j t l u',161),(1606,'11 22  23 14','k u w n',161),(1607,'5 10 15 20','e j o t',161),(1608,'3 6 9 12','c f i l',161),(1609,'2 3 4 5','b c d e',161),(1610,'7 3 8 1','g c h a',161),(1611,'190 ','6 2.80',162),(1612,'160','5  2.99',162),(1613,'182','5 11.65',162),(1614,'175','5 8.89',162),(1615,'166','5  5.35',162),(1616,'150','4 11.05',162),(1617,'193','6  3.98',162),(1618,'171','5  7.32',162),(1619,'183','6  0.04',162),(1620,'169','5 6.53',162),(1621,'4','201.06 268.08',163),(1622,'8','804.25 2144.66',163),(1623,'9','1017.88 3053.63',163),(1624,'10','1256.64 4188.79',163),(1625,'2','50.27 33.51',163),(1626,'5','314.16 523.60',163),(1627,'6','452.39 904.78',163),(1628,'7','615.75 1436.75',163),(1629,'11','1520.53 5575.28',163),(1630,'15','2827.43 14137.16',163),(1631,'i','0',164),(1632,'j','1',164),(1633,'k','1',164),(1634,'a','0',164),(1635,'p','1',164),(1636,'u','0',164),(1637,'r','1',164),(1638,'s','1',164),(1639,'e','0',164),(1640,'o','0',164),(1641,'1','Jan',165),(1642,'2','Feb',165),(1643,'3','Mar',165),(1644,'4','Apr',165),(1645,'5','Jun',165),(1646,'6','Jul',165),(1647,'7','Aug',165),(1648,'5','May',165),(1649,'12','Dec',165),(1650,'8','Aug',165),(1651,'james;pete;ooo','james',166),(1652,'helo;world;its;me','world',166),(1653,'people;ways;leave','people',166),(1654,'great;wo;eee','great',166),(1655,'Java;c#;clang;c++','clang',166),(1656,'shall;in;us','shall',166),(1657,'abcd;klm;pqrstuv','pqrstuv',166),(1658,'glee;cartoon;lion','cartoon',166),(1659,'learn;present;mu','present',166),(1660,'bck;reew;prllo','prllo',166),(1661,'apple ant','1',167),(1662,'and aaa','0',167),(1663,'answer transfer','1',167),(1664,'fan pan','1',167),(1665,'noa all','1',167),(1666,'aaaa aaaa','1',167),(1667,'abab  aaa','0',167),(1668,'aaaaaa aaaaaaa','0',167),(1669,'bb bb','0',167),(1670,'aa aaa','0',167),(1671,'ABCabc','cbaCBA ',168),(1672,'aAB','aBA',168),(1673,'BirthDay','yahtriDB',168),(1674,'anaConda','adnoanaC',168),(1675,'Moon','nooM',168),(1676,'moon','noom',168),(1677,'dooF','Food',168),(1678,'FAN','NAF',168),(1679,'qgeEQ','egqQE',168),(1680,'baeirqW','qrieabW',168),(1681,'124','1',169),(1682,'15888','1',169),(1683,'tw1','0',169),(1684,'tuwoe','0',169),(1685,'329t0','1',169),(1686,'999','1',169),(1687,'123','1',169),(1688,'peops','0',169),(1689,'554','1',169),(1690,'1','0',169),(1691,'string','0',170),(1692,'101254','1',170),(1693,'sd2','0',170),(1694,'wg3','0',170),(1695,'21','1',170),(1696,'1131','1',170),(1697,'11r','0',170),(1698,'tqteq3','0',170),(1699,'t232','0',170),(1700,'11','1',170),(1701,'010-1243-1234','***-****-1234',171),(1702,'01012341234','*******1234',171),(1703,'010-1111-1111','***-****-1111',171),(1704,'01012341234','*******1234',171),(1705,'01012341235','*******1235',171),(1706,'01012341236','*******1236',171),(1707,'01012341237','*******1237',171),(1708,'010-1111-1114','***-****-1114',171),(1709,'010-1111-1112','***-****-1112',171),(1710,'010-1111-1113','***-****-1113',171),(1711,'10','1 2 5',172),(1712,'17','1',172),(1713,'20','1 2 4 5 10',172),(1714,'21','1 3 7',172),(1715,'15','1 3 5',172),(1716,'50','1 2 5 10 25',172),(1717,'81','1 3 7 9 13 27',172),(1718,'15','1 3 5',172),(1719,'117','1',172),(1720,'90','1 3 5 9 10 18 30',172),(1721,'1 1','1',173),(1722,'2 1','31',173),(1723,'3 1','59',173),(1724,'2 5','36',173),(1725,'1 20','20',173),(1726,'5 1','158',173),(1727,'5 8','165',173),(1728,'12 30 ','358',173),(1729,'2 2','32',173),(1730,'3 10','69',173),(1731,'1','6.28 3.14 4.18',174),(1732,'2','12.56 12.56 33.49',174),(1733,'3','18.84 28.26 113.04',174),(1734,'4','25.15 50.24 267.94',174),(1735,'5','31.4 78.5 523.33',174),(1736,'6','37.68 113.04 904.32',174),(1737,'7','43.96 153.86 1436.02',174),(1738,'8','50.24 200.96 2143.57',174),(1739,'9','56.52 254.34 3052.08',174),(1740,'10','62.8 314 4186.66',174),(1741,'5','101',175),(1742,'1','1',175),(1743,'3','11',175),(1744,'10','1010',175),(1745,'20','10100',175),(1746,'21','10101',175),(1747,'17','10001',175),(1748,'30','11110',175),(1749,'50','110010',175),(1750,'17','10001',175),(1751,'12345','54321',176),(1752,'12981','98211',176),(1753,'55555','55555',176),(1754,'95148','98541',176),(1755,'98465','98564',176),(1756,'21345','54321',176),(1757,'84214','84421',176),(1758,'32174','74321',176),(1759,'45612','65421',176),(1760,'87942','98742',176),(1761,'32121','12123',177),(1762,'21547','74512',177),(1763,'15121','12151',177),(1764,'98422','22489',177),(1765,'15489','98451',177),(1766,'35478','87453',177),(1767,'98423','32498',177),(1768,'32184','48123',177),(1769,'69774','47796',177),(1770,'32146','64123',177),(1771,'-3','3',178),(1772,'5','5',178),(1773,'-987','987',178),(1774,'2154','2154',178),(1775,'111','111',178),(1776,'-1','1',178),(1777,'-87','87',178),(1778,'31','31',178),(1779,'-100','100',178),(1780,'-151','151',178),(1781,'12345','일만이천삼백사십오',179),(1782,'98745','구만팔천칠백사십오',179),(1783,'11111','일만일천일백일십일',179),(1784,'12542','일만이천오백사십이',179),(1785,'65412','육만오천사백십이',179),(1786,'32135','삼만이천백삼십오',179),(1787,'87542','팔만칠천오백사십이',179),(1788,'21546','이만천오백사십육',179),(1789,'78542','칠만팔천오백사십이',179),(1790,'66541','육만육천오백사십이',179),(1791,'1 11 1','3',180),(1792,'2 28 2','11',180),(1793,'3 9 5','0',180),(1794,'8 40','4',180),(1795,'10 100 9','18',180),(1796,'1 30 2','11',180),(1797,'8 80 5','17',180),(1798,'5 64 7 ','5',180),(1799,'8 99 9','19',180),(1800,'1 10 5','1',180),(1801,'abCd','ABcD',181),(1802,'qwea','QWEA',181),(1803,'KNasdk','knASDK',181),(1804,'Heung','hEUNG',181),(1805,'HonG','hONg',181),(1806,'SuLyn','sUlYN',181),(1807,'SukMIN','sUKmin',181),(1808,'yongJIN','YONGjin',181),(1809,'asdc','ASDC',181),(1810,'DNksK','dnKSk',181),(1811,'Hello my world!','12 0 1',182),(1812,'it\'s 3000 dallor','9 4 1',182),(1813,'How much is this?','13 0 1',182),(1814,'Apple is 700\\','7 3 1',182),(1815,'?asd?2323','3 4 2',182),(1816,')(asdmlk123','6 3 2',182),(1817,'*/-+/*','0 0 6',182),(1818,'laskd123','5 3 0',182),(1819,'*&^asd98764','3 5 3',182),(1820,'987321','0 0 6',182),(1821,'1,234','1234',183),(1822,'888,999,111','888999111',183),(1823,'4,58,21,6,8','4582168',183),(1824,'963,545','963545',183),(1825,'11,111','11111',183),(1826,'654,654','654654',183),(1827,'9654,131','9654131',183),(1828,'21,2','212',183),(1829,'32,13','3213',183),(1830,'1','1',183),(1831,'9843218971','9 8',184),(1832,'1111111111','1',184),(1833,'6978415454','4',184),(1834,'6514132192','1',184),(1835,'9879845487','8',184),(1836,'9423146451','4',184),(1837,'3215421233','3',184),(1838,'8514879879','8',184),(1839,'8887897979','8',184),(1840,'8949514698','9',184),(1841,'1001','9',185),(1842,'1','1',185),(1843,'1111','15',185),(1844,'11111','31',185),(1845,'10101','21',185),(1846,'101','5',185),(1847,'1010','10',185),(1848,'1011','11',185),(1849,'10011','19',185),(1850,'10000','16',185),(1851,'6 5 - ','1',186),(1852,'1 10 *','10',186),(1853,'11 6 + ','17',186),(1854,'15 5 / ','3',186),(1855,'12 5 * 5','60',186),(1856,'60 20 / ','3',186),(1857,'100 50 / ','2',186),(1858,'111 3 *','333',186),(1859,'185 100 -','85',186),(1860,'131 100 -','31',186),(1861,'listen silent','1',187),(1862,'Arc Car','1',187),(1863,'water ttere','0',187),(1864,'Elbow Below','1',187),(1865,'State Taste','1',187),(1866,'porpl real','0',187),(1867,'Cider Cried\r ','1',187),(1868,'program marg','0',187),(1869,'Dusty Study','1',187),(1870,'Night Thing','1',187),(1871,'Men','Men\nMne\neMn\nenM\nnMe\nneM',188),(1872,'Hello','Hello\nHelol\nHello\nHelol\nHeoll\nHeoll\nHlelo\nHleol\nHlleo\nHlloe\nHloel\nHlole\nHlelo\nHleol\nHlleo\nHlloe\nHloel\nHlole\nHoell\nHoell\nHolel\nHolle\nHolel\nHolle\neHllo\neHlol\neHllo\neHlol\neHoll\neHoll\nelHlo\nelHol\nellHo\nelloH\neloHl\nelolH\nelHlo\nelHol\nellHo\nelloH\neloHl\nelolH\neoHll\neoHll\neolHl\neollH\neolHl\neollH\nlHelo\nlHeol\nlHleo\nlHloe\nlHoel\nlHole\nleHlo\nleHol\nlelHo\nleloH\nleoHl\nleolH\nllHeo\nllHoe\nlleHo\nlleoH\nlloHe\nlloeH\nloHel\nloHle\nloeHl\nloelH\nlolHe\nloleH\nlHelo\nlHeol\nlHleo\nlHloe\nlHoel\nlHole\nleHlo\nleHol\nlelHo\nleloH\nleoHl\nleolH\nllHeo\nllHoe\nlleHo\nlleoH\nlloHe\nlloeH\nloHel\nloHle\nloeHl\nloelH\nlolHe\nloleH\noHell\noHell\noHlel\noHlle\noHlel\noHlle\noeHll\noeHll\noelHl\noellH\noelHl\noellH\nolHel\nolHle\noleHl\nolelH\nollHe\nolleH\nolHel\nolHle\noleHl\nolelH\nollHe\nolleH',188),(1873,'name','name\nnaem\nnmae\nnmea\nneam\nnema\nanme\nanem\namne\namen\naenm\naemn\nmnae\nmnea\nmane\nmaen\nmena\nmean\nenam\nenma\neanm\neamn\nemna\neman',188),(1874,'work','work\nwokr\nwrok\nwrko\nwkor\nwkro\nowrk\nowkr\norwk\norkw\nokwr\nokrw\nrwok\nrwko\nrowk\nrokw\nrkwo\nrkow\nkwor\nkwro\nkowr\nkorw\nkrwo\nkrow',188),(1875,'bro','bro\nbor\nrbo\nrob\nobr\norb',188),(1876,'more','more\nmoer\nmroe\nmreo\nmeor\nmero\nomre\nomer\norme\norem\noemr\noerm\nrmoe\nrmeo\nrome\nroem\nremo\nreom\nemor\nemro\neomr\neorm\nermo\nerom',188),(1878,'jew','jew\njwe\nejw\newj\nwje\nwej',188),(1879,'were','were\nweer\nwree\nwree\nweer\nwere\newre\newer\nerwe\nerew\neewr\neerw\nrwee\nrwee\nrewe\nreew\nrewe\nreew\newer\newre\neewr\neerw\nerwe\nerew',188),(1880,'can','can\ncna\nacn\nanc\nnca\nnac',188),(1881,'2 1 3\n23 4 3','3',189),(1882,'2 5 3 7\n5 2 9 0 1','2 5',189),(1883,'2 4 6 8 9 10\n3 6 9 1 12 ','9',189),(1884,'1 2 3 4 5 6\n2 4 6 8 10','2 4 6',189),(1885,'10 11 31 \n11 21 31 22 34','11 31',189),(1886,'3 92 13 24 2\n4 35 24 25 4','24',189),(1887,'2 1 3 9 10 34 21\n4 5 6 87 ','0',189),(1888,'9 23 214 123 23\n4 2 53 23 45','23',189),(1889,'3 5 7 9 11\n2 3 4 5 6 75 ','3 5',189),(1890,'5 6 8 10 21\n2 3 45 53 23','0',190),(1891,'Alive is awesome','A=1,l=1,i=2,v=1,e=3, =2,s=2,a=1,w=1,o=1,m=1',190),(1892,'Java Hungry','a=2, r=1, u=1, v=1, g=1, H=1, y=1, J=1, n=1',190),(1893,'USA has 50 states','0=1, A=1, a=2, S=1, s=3, t=2, U=1, 5=1, e=1, h=1',190),(1894,'I am a programmer','p=1, a=3, r=3, e=1, g=1, I=1, m=3, o=1',190),(1895,'C++ is easy','a=1, C=1, s=2, e=1, i=1, y=1, +=2',190),(1896,'Learn to code','a=1, r=1, c=1, t=1, d=1, e=2, L=1, n=1, o=2',190),(1897,'take is','a=1, s=1, t=1, e=1, i=1, k=1',190),(1898,'Year of the gentleman','a=2, e=4, f=1, g=1, h=1, l=1, m=1, n=2, o=1, r=1, t=2, Y=1',190),(1899,'success is good','s=4, c=2, d=1, u=1, e=1, g=1, i=1, o=2',190),(1900,'relax again','a=3, r=1, e=1, g=1, x=1, i=1, l=1, n=1',190),(1901,'Alive is Awesome\nwert','Aliv is Asom\n',191),(1902,'Enter another\ndjknd','Eter aother',191),(1903,'Learn to code\nhdjfk','Learn to coe',191),(1904,'Make it\nitefrw','Mak ',191),(1905,'control is nothing\ncjkdntrs','ool i ohig',191),(1906,'c++ is easy\n+','c is easy',191),(1907,'code everyday\nedhf','co vryay',191),(1908,'developer\nelpo','dvr',191),(1909,'programming\ndkndsjdn','programmig',191),(1910,'You are still sleepy\ndjlepes','You ar ti y',191),(1911,'36086399 ','23:59:59',192),(1912,'50000','13:53:20',192),(1913,'425467','951:31:7',192),(1914,'4673','1:17:53',192),(1915,'73482','20:24:42',192),(1916,'83293','23:8:13',192),(1917,'83290','23:8:10',192),(1918,'0','0',192),(1919,'7732','2:8:52',192),(1920,'30121','8:22:1',192),(1921,'50 60','70',193),(1922,'100 40','40\n',193),(1923,'36 54','90',193),(1924,'90 45','45',193),(1925,'110 45','25',193),(1926,'45 120','25',193),(1927,'35 45','100',193),(1928,'55 105','20',193),(1929,'100 40','40',193),(1930,'90 35','55',193),(1931,'4.3','43/10',194),(1932,'0.000494','247/500000',194),(1933,'0.45352','5669/12500',194),(1934,'0.45','9/20',194),(1935,'0.9340','467/500',194),(1936,'0.456','57/125',194),(1937,'85.64','2141/25',194),(1938,'340.32','8508/25',194),(1939,'94.32','2358/25',194),(1940,'0.303','303/1000',194),(1941,'1+2-3*4/4','12+34*4/-\n0',195),(1942,'2*3/2-1','23*2/1-\n2',195),(1943,'10-2*3*2-8/2','1023*2*-82/-\n-6',195),(1944,'1-2/4+100','124/-100+\n101',195),(1945,'3*3*4/2+1','33*4*2/1+\n19',195),(1946,'100+200/2','1002002/+\n200',195),(1947,'1/2/3+3*4','12/3/34*+\n12',195),(1948,'7/2*2*3','72/2*3*\n18',195),(1949,'34+23*3/1/21','34233*1/21/+\n37',195),(1950,'3-2+2*2','32-22*+\n5',195),(1951,'7','3.18\n3175.15',196),(1952,'10','4.54\n4535.92',196),(1953,'8','3.63\n3628.74',196),(1954,'34','15.42\n15422.14',196),(1955,'21','9.53\n9525.44',196),(1956,'56','25.40\n25401.17',196),(1957,'20','9.07\n9071.85',196),(1958,'12','5.44\n5443.11\n',196),(1959,'44','19.96\n19958.06',196),(1960,'9','4.08\n4082.33',196),(1961,'thisisasampleonlysample','i',197),(1962,'developer','e',197),(1963,'program','r',197),(1964,'C is easy','0',197),(1965,'Java is interesting','a',197),(1966,'code easily','e',197),(1967,'clean wall','a',197),(1968,'fight for it','f',197),(1969,'get going','g',197),(1970,'people leave','p',197),(1971,'1',' 1 1\n 1 1',198),(1972,'2',' 2 2 2 2\n 2       2\n 2       2\n 2 2 2 2',198),(1973,'3',' 3 3 3 3 3 3\n 3             3\n 3             3\n 3             3\n 3             3\n 3 3 3 3 3 3',198),(1974,'4',' 4 4 4 4 4 4 4 4\n 4                   4\n 4                   4\n 4                   4\n 4                   4\n 4                   4\n 4                   4\n 4 4 4 4 4 4 4 4',198),(1975,'5',' 5 5 5 5 5 5 5 5 5 5\n 5                         5\n 5                         5\n 5                         5\n 5                         5\n 5                         5\n 5                         5\n 5                         5\n 5                         5\n 5 5 5 5 5 5 5 5 5 5',198),(1976,'6','6 6 6 6 6 6 6 6 6 6 6 6 \n6                               6 \n6                               6 \n6                               6 \n6                               6 \n6                               6 \n6                               6 \n6                               6 \n6                               6 \n6                               6 \n6                               6 \n6 6 6 6 6 6 6 6 6 6 6 6 ',198),(1977,'7','7 7 7 7 7 7 7 7 7 7 7 7 7 7 \n7                                     7 \n7                                     7 \n7                                     7 \n7                                     7 \n7                                     7 \n7                                     7 \n7                                     7 \n7                                     7 \n7                                     7 \n7                                     7 \n7                                     7 \n7                                     7 \n7 7 7 7 7 7 7 7 7 7 7 7 7 7 ',198),(1978,'8','8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 \n8                                           8 \n8                                           8 \n8                                           8 \n8                                           8 \n8                                           8 \n8                                           8 \n8                                           8 \n8                                           8 \n8                                           8 \n8                                           8 \n8                                           8 \n8                                           8 \n8                                           8 \n8                                           8 \n8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 ',198),(1979,'9','9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 \n9                                                 9 \n9                                                 9 \n9                                                 9 \n9                                                 9 \n9                                                 9 \n9                                                 9 \n9                                                 9 \n9                                                 9 \n9                                                 9 \n9                                                 9 \n9                                                 9 \n9                                                 9 \n9                                                 9 \n9                                                 9 \n9                                                 9 \n9                                                 9 \n9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 ',198),(1980,'10','1010101010101010101010101010101010101010\n10                                                                        10\n10                                                                        10\n10                                                                        10\n10                                                                        10\n10                                                                        10\n10                                                                        10\n10                                                                        10\n10                                                                        10\n10                                                                        10\n10                                                                        10\n10                                                                        10\n10                                                                        10\n10                                                                        10\n10                                                                        10\n10                                                                        10\n10                                                                        10\n10                                                                        10\n10                                                                        10\n1010101010101010101010101010101010101010',198),(1981,'4','12344321\n123**321\n12****21\n1******1',199),(1982,'6','123456654321\n12345**54321\n1234****4321\n123******321\n12********21\n1**********1',199),(1983,'8','1234567887654321\n1234567**7654321\n123456****654321\n12345******54321\n1234********4321\n123**********321\n12************21\n1**************1',199),(1984,'12','123456789101112121110987654321\n 1234567891011**1110987654321\n   12345678910****10987654321\n     123456789******987654321\n     12345678********87654321\n     1234567**********7654321\n     123456************654321\n     12345**************54321\n     1234****************4321\n     123******************321\n     12********************21\n     1**********************1',199),(1985,'10','1234567891010987654321\n 123456789**987654321\n 12345678****87654321\n 1234567******7654321\n 123456********654321\n 12345**********54321\n 1234************4321\n 123**************321\n 12****************21\n 1******************1',199),(1986,'5','1234554321\n1234**4321\n123****321\n12******21\n1********1',199),(1987,'7','12345677654321\n123456**654321\n12345****54321\n1234******4321\n123********321\n12**********21\n1************1',199),(1988,'15','123456789101112131415151413121110987654321\n1234567891011121314**1413121110987654321\n  12345678910111213****13121110987654321\n    123456789101112******121110987654321\n      1234567891011********1110987654321\n        12345678910**********10987654321\n          123456789************987654321\n          12345678**************87654321\n          1234567****************7654321\n          123456******************654321\n          12345********************54321\n          1234**********************4321\n          123************************321\n          12**************************21\n          1****************************1',199),(1989,'17','12345678910111213141516171716151413121110987654321\n 12345678910111213141516**16151413121110987654321\n   123456789101112131415****151413121110987654321\n     1234567891011121314******1413121110987654321\n       12345678910111213********13121110987654321\n         123456789101112**********121110987654321\n           1234567891011************1110987654321\n             12345678910**************10987654321\n               123456789****************987654321\n               12345678******************87654321\n               1234567********************7654321\n               123456**********************654321\n               12345************************54321\n               1234**************************4321\n               123****************************321\n               12******************************21\n               1********************************1',199),(1990,'9','123456789987654321\n12345678**87654321\n1234567****7654321\n123456******654321\n12345********54321\n1234**********4321\n123************321\n12**************21\n1****************1',199),(1991,'16','1',200),(1992,'4','1',200),(1993,'9','0',200),(1994,'17','0',200),(1995,'35','0',200),(1996,'41','0',200),(1997,'21','0',200),(1998,'128','1',200),(1999,'256','1',200),(2000,'64','1',200),(2001,'20 34 21 87 92 2147483647','92, 2147483647',201),(2002,'23 45 12 20 43 90','45 90',201),(2003,'20 10 60 70 80 30','70 80',201),(2004,'764 323 42 113 13 21','323 764',201),(2005,'90 32 12 33 13 313 31','90 313',201),(2006,'24 2421 1334 1133 113 1334','1334 1334',201),(2007,'83 23 130 32 112','112 130',201),(2008,'92 23 13 922 123 344','344 922',201),(2009,'30 424 45 980 102','424 980',201),(2010,'10 60 120 12 12 12','12 12',201),(2011,'20 34 21 87 92 2147483647','20 21',202),(2012,'23 45 12 20 43 90','12 20',202),(2013,'20 10 60 70 80 30','10 20',202),(2014,'764 323 42 113 13 21','13 21',202),(2015,'90 32 12 33 13 313 31','12 13',202),(2016,'24 2421 1334 1133 113 1334','24 113',202),(2017,'83 23 130 32 112','23 32',202),(2018,'92 23 13 922 123 344','13 23',202),(2019,'30 424 45 980 102','39 45',202),(2020,'10 60 120 12 12 12','10 12',202),(2021,'10','3 7',203),(2022,'23','1 2 5 6 10',203),(2023,'15','10 5',203),(2024,'24','1 3 5 6 10',203),(2025,'100','0',203),(2026,'16','6 10',203),(2027,'31','1 3 5 6 7 10',203),(2028,'30','1 2 5 6 7 10',203),(2029,'14','4 10',203),(2030,'45','1 2 3 4 5 6 7 8 10',203),(2031,'9 10 12 13 16 16 18 22 23 24 24 25','13',204),(2032,'23 32 33 34','32',204),(2033,'31 42 45 67 33 332 1','42',204),(2034,'54 32 21 49 24 123 ','41',204),(2035,'1 2 3 4 5 6','3',204),(2036,'74 213 123 3 33 11 23 13','28',204),(2037,'3 6 9 12 15','9',204),(2038,'43 33 21 3 2','23',204),(2039,'12 16 30 32 41','30',204),(2040,'50 3 23 1','13',205),(2041,'People always leave','P51515l5 1l2312519 l51v5 ',205),(2042,'make it','131115 it',205),(2043,'coding is good','315din7 i19 71515d',205),(2044,'learn','l51rn',205),(2045,'preach','pr513h',205),(2046,'crazy','3r1z25',205),(2047,'what to do','23h1t t15 d15',205),(2048,'program','pr157r113kj',205),(2049,'bee','b55',205),(2050,'work','2315r11',205),(2051,'3x2+5-5+7','9',206),(2052,'8/4/2','1',206),(2053,'50+30-13','67',206),(2054,'40x10-14+2/4','356',206),(2055,'4+4-3-3','1',206),(2056,'3+2x10-1','49',206),(2057,'8x17/2','68',206),(2058,'31-1+10','40',206),(2059,'10+12x10','220',206),(2060,'4x3-10+2','4',206),(2061,'1000 3 20','600.00',207),(2062,'350 120 4','1680.00 ',207),(2063,'250 3 1','7.50',207),(2064,'900 40 10','3600.00',207),(2065,'400 23 12','1104.00',207),(2066,'600000 100 50','30000000.00',207),(2067,'7500 20 10','15000.00',207),(2068,'3000 30 5','4500.00',207),(2069,'4200 80 8','26880.00',207),(2070,'5600 120 10','67200.00',207),(2071,'10 4','210 5040',208),(2072,'16 4','1820 43680',208),(2073,'10 3','120 720',208),(2074,'9 3','84 504',208),(2075,'23 10','359 1305325914',208),(2076,'11 5','462 55440',208),(2077,'12 6','924 665280',208),(2078,'8 3','56 336',208),(2079,'7 5','21 2520',208),(2080,'10 7','120 604800',208),(2081,'Hello bro ','3 8',209),(2082,'My name is jake','5 11',209),(2083,'what to do','3 8',209),(2084,'learn to code','5 9',209),(2085,'listening to music','6 13',209),(2086,'can i take this dance','7 15',209),(2087,'work on it','3 8',209),(2088,'programming is life','6 14',209),(2089,'reach for it','4 9',209),(2090,'make it new','4 8',209),(2091,'3','288',210),(2092,'10','24200 ',210),(2093,'4','800',210),(2094,'6','3528',210),(2095,'5','1800',210),(2096,'2','72',210),(2097,'1','8',210),(2098,'7','6272',210),(2099,'13','66248 ',210),(2100,'20','352800  ',210),(2101,'JDDLSDA BDCABA','JDDLSBDCABA',211),(2102,'SDSFSDA BDCSDF','SDSFSDABDCSDF',211),(2103,'SSFS LASFSSSL','SLASFSSSL',211),(2104,'BFREQA SDFGHIL','BFREQASDFGHIL',211),(2105,'NBSAAL NBSAAL','NBSAAL',211),(2106,'JASSDD DHDBFS','JASSDHDBFS',211),(2107,'LFLKSD PEWRA','LFLKSDPEWRA',211),(2108,'DJDL PWR','DJDLPWR ',211),(2109,'SKSFLM IOERW','SKSFLMIOERW',211),(2110,'MSNDA LASL','MSNDLASL',211),(2111,'12','337',212),(2112,'4','8',212),(2113,'6','21',212),(2114,'8','55',212),(2115,'7','34',212),(2116,'3','5',212),(2117,'10','155',212),(2118,'9','89',212),(2119,'11','233',212),(2120,'5','13',212),(2121,'3','138',213),(2122,'4','532',213),(2123,'5','2062',213),(2124,'6','7990',213),(2125,'1','10',213),(2126,'7','30984',213),(2127,'8','120130',213),(2128,'9','465832',213),(2129,'10','235756',213),(2130,'2','36',213),(2131,'1','1',214),(2132,'1','1',214),(2133,'1','1',214),(2134,'1','1',214),(2135,'1','1',214),(2136,'1','1',214),(2137,'1','1',214),(2138,'1','1',214),(2139,'1','1',214),(2140,'1','1',214);
/*!40000 ALTER TABLE `plass_testcases` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `plass_total_categories`
--

DROP TABLE IF EXISTS `plass_total_categories`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `plass_total_categories` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(100) CHARACTER SET utf8 DEFAULT NULL,
  `level` int(11) DEFAULT NULL,
  `parent_id` int(11) DEFAULT NULL,
  `description` varchar(255) CHARACTER SET utf8 DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=61 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `plass_total_categories`
--

LOCK TABLES `plass_total_categories` WRITE;
/*!40000 ALTER TABLE `plass_total_categories` DISABLE KEYS */;
INSERT INTO `plass_total_categories` VALUES (1,'기초 프로그래밍',1,0,'C언어 기준으로 문제 '),(2,'심화 프로그래밍',1,0,'C++언어 기준으로 문제'),(3,'객체지향 프로그래밍',1,0,'Java 언어 기준으로 문제'),(4,'자료구조',1,0,'자료구조별 문제'),(5,'알고리즘',1,0,'알고리즘별 문제'),(6,'입출력',2,1,''),(7,'연산자 ',2,1,NULL),(8,'제어문',2,1,NULL),(9,'반복문',2,1,NULL),(10,'배열',2,1,NULL),(11,'함수',2,1,NULL),(12,'구조체',2,1,NULL),(13,'포인터',2,1,NULL),(14,'입출력',2,2,NULL),(15,'연산자',2,2,NULL),(16,'제어문',2,2,NULL),(17,'반목문',2,2,NULL),(18,'배열',2,2,NULL),(19,'함수',2,2,NULL),(20,'클래스',2,2,NULL),(21,'상속',2,2,NULL),(22,'예외처리',2,2,NULL),(23,'입출력',2,3,NULL),(24,'연산자',2,3,NULL),(25,'제어문',2,3,NULL),(26,'반복문',2,3,NULL),(27,'배열',2,3,NULL),(28,'클래스,객체',2,3,NULL),(29,'String 클래스 ',2,3,NULL),(30,'상속',2,3,NULL),(31,'예외처리',2,3,NULL),(32,'리스트',2,4,NULL),(33,'스택',2,4,NULL),(34,'큐',2,4,NULL),(35,'데크',2,4,NULL),(36,'백터',2,4,NULL),(37,'맵',2,4,NULL),(38,'탐색',2,5,NULL),(39,'정렬',2,5,NULL),(40,'해싱',2,5,NULL),(41,'선형',3,32,NULL),(42,'이중연결',3,32,NULL),(43,'포인터',3,32,NULL),(44,'배열',3,32,NULL),(45,'포인터',3,33,NULL),(46,'배열',3,33,NULL),(47,'포인터 ',3,34,NULL),(48,'배열',3,34,NULL),(49,'포인터',3,35,NULL),(50,'배열',3,35,NULL),(51,'BFS',3,38,NULL),(52,'DFS',3,38,NULL),(53,'Binary',3,38,NULL),(54,'선형',3,38,NULL),(55,'Sequential',3,38,NULL),(56,'Sequential',3,39,NULL),(57,'Bubble',3,39,NULL),(58,'Quick',3,39,NULL),(59,'Merge',3,39,NULL),(60,'Heap',3,39,NULL);
/*!40000 ALTER TABLE `plass_total_categories` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `plass_user`
--

DROP TABLE IF EXISTS `plass_user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `plass_user` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `username` varchar(45) DEFAULT NULL,
  `roleId` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `plass_user`
--

LOCK TABLES `plass_user` WRITE;
/*!40000 ALTER TABLE `plass_user` DISABLE KEYS */;
INSERT INTO `plass_user` VALUES (1,'user',2),(2,'admin',1);
/*!40000 ALTER TABLE `plass_user` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2021-10-20 11:49:45
